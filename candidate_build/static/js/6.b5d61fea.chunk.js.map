{"version":3,"sources":["containers/Interview/ReadQuestion.js","containers/Interview/interview.js","containers/Interview/submitting.js","containers/Interview/mcqQuestions.js","utils/utility.js","containers/Interview/PreviewInstructionsVerbal.js","containers/Interview/PreviewInstructionsMCQ.js","containers/Interview/PreviewInstructionsCoding.js","containers/Interview/Parent.js","assets/images/login_page_logo.png","assets/images/warning.svg","assets/images/Submitting.svg"],"names":["ReadQuestion","props","remainingTimeHandler","remainingTime","state","this","responseId","type","question","payload","questionId","id","questionStatus","UserAction","updateResponse","className","durationTime","nextBtn","handleTimer","readQuestionTimerEnds","isPlaying","quesNo","QuestionText","Component","connect","UserReducer","dispatch","bindActionCreators","Actions","withRouter","verbalSkipableValue","parseInt","process","readQuestionTime","remainingGlobal","scheduleIdGlobal","candidateIdGlobal","timedate","activeStep","ScreenFileGlobal","ScreenFileNameGlobal","Interview","handleStart","clockRef","current","start","handleTimeUpdate","time","setState","handleNext","questiondata","a","retake","restartTimer","handleDownload","quesdata","map","item","push","getStepContent","showReadQuestion","retakesAvailable","totalRetakes","questionData","length","val","Questionstime","timerInput","Number","handleFinish","submitClicked","submitClickedHandler","handlePriorUpload","file","name","skipable","setTimeout","formdata","FormData","append","timeTaken","indexDbData","videoFile","videoFileName","screenFile","screenFileName","upload","faceNotDetected","handleStartCaptureClick","isSafari","test","navigator","userAgent","mediaRecorderRef","MediaRecorder","webcamRef","stream","mimeType","audioBitsPerSecond","videoBitsPerSecond","capturing","childRef","startCapture","addEventListener","handleDataAvailable","handleAbort","abortCapture","stop","recordedChunks","handleStopCaptureClick","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","style","href","window","revokeObjectURL","File","ScheduleId","CandidateId","filedata","videofilename","data","size","concat","showDialog","stopCapture","capture","imgSrc","getScreenshot","image","substring","screenShot","verifyScreenshot","base64","retakeHandler","showRetakeDialog","retakeClicked","handleEarlySubmit","handleTimerEnd","React","createRef","timer","audioNew","ques","audio","video","questions","isDataArrived","submittedQuestions","totalQuestions","submissionQueue","noOfRetakes","vid","response","candidateId","scheduleId","verbalQuestions","text","suggestedDuration","questionType","toLowerCase","getMicrophone","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","mediaDevices","getUserMedia","stepIndex","steparray","value","console","log","ScreenFileTemp","ScreenFileNameTemp","localStorage","setItem","JSON","stringify","xyz","parse","getItem","questiondata1","quesreadtime","steps","i","ref","onScreenAccess","onUserStop","onRecordStart","onRecordStop","onVideoFile","onAbort","open","aria-labelledby","aria-describedby","onClick","screen","width","class","height","margin","onTick","src","disableBtn","display","fontSize","marginLeft","variant","justifyContent","marginRight","marginTop","nextProps","currentState","isScreenShotDataArrived","faces","Submitting","show","history","pushState","location","onpopstate","keepOnPage","onbeforeunload","removeEventListener","e","message","returnValue","submitting","color","padding","transform","progress","backgroundColor","borderRadius","textAlign","toFixed","mcqSkipableValue","durationGlobal","McqQuestions","changeOption","label","options","isMultiCheck","el","index","currentData","totalLength","McqData","metadata","option","disablebtn","chosenOption","toISOString","isSkipped","find","details","mcqQuestions","multi","correct","timeOut","duration","dangerouslySetInnerHTML","__html","flexWrap","checked","onChange","disabled","secondsToHours","hours","Math","floor","min","sec","Instructions","count","totalTime","totalCount","responseIdresponseId","addEvent","event","level","Page","timestamp","Typography","alt","birballogo","Button","continue","PreviewInstructionsMCQ","CodingInstructions","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","request","IDBTransaction","webkitIDBTransaction","OIDBTransaction","msIDBTransaction","onsuccess","target","result","onerror","onupgradeneeded","createObjectStore","keyPath","reTrial","Parent","submissionInProgress","currentQuestion","totalMcq","totalVerbal","totalCoding","sequenceOrder","verbalNew","mcqNew","codingNew","suggestedVerbalDuration","suggestedCodingDuration","order","totalQuestionsHandler","addToQueue","quesData","callSubmitApi","_this","shift","ajax","XMLHttpRequest","timeout","percent","loaded","total","addsingleanswerProgress","status","addsingleanswerSuccess","responseText","unshift","addsingleanswerError","singleAnswerError","serverAddress","setRequestHeader","send","no","decreaseCountHandler","db","transaction","objectStore","add","changeSequence","findIndex","ReactGA","pageview","pathname","stateData","newResponse","verbalCount","mcqCount","codingCount","verbalDuration","codingDuration","mcqDuration","codingQuestions","suggestedMcqDuration","Dialog","warning","CircularProgress","singleAnswerProgress","isUserquestionDataAdded","singleAnswerData","detail","delete","module","exports"],"mappings":"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","file":"static/js/6.b5d61fea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './readQuestion.scss';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { TimerComponent } from './timerComponent';\nimport * as Actions from \"../../store/User/UserAction\";\nimport { bindActionCreators } from \"redux\";\n\nexport class ReadQuestion extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n\n        };\n    }\n    componentDidMount() {\n       if(this.props && this.props.responseId && this.props.type && this.props.question){\n        const payload={\n            questionId:this.props.question.id,\n            responseId:this.props.responseId,\n            type:this.props.type,\n            questionStatus:2\n\n        }\n           this.props.UserAction.updateResponse(payload)\n       }\n    };\n\n    remainingTimeHandler=(remainingTime)=>{\n       return remainingTime;\n      }\n\n    render() {\n        // console.log(this.props.question,this.props.quesNo)\n        return (\n            <div className=\"read-question-main\">\n                <div className=\"read-question-heading\">\n                    Live Interview\n                </div>\n                <div className=\"read-question-body\">\n                    <div className=\"read-question-timer\">\n                        <TimerComponent durationTime={this.props.durationTime}\n                            className=\"timer-new\"\n                            nextBtn={true}\n                            handleTimer={this.props.readQuestionTimerEnds}\n                            remainingTimeHandler={this.remainingTimeHandler}\n                            isPlaying={true}\n                         \n                        />\n                    </div>\n                    <div className=\"read-question-time-left\">Time left to read the question</div>\n                    <div className=\"read-question-ques-div\">\n                    <div className=\"read-question-time-left\">Please Read Question / Prepare Answer</div>\n                    <div className=\"ques-wrapper\">\n                    <div className=\"question-number\">Q.{this.props.quesNo} </div>\n                    <div className=\"question-text-new\">{this.props.question.QuestionText} </div>\n                    </div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      UserReducer: state.UserReducer,\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\nreturn {\n      UserAction: bindActionCreators(Actions, dispatch),\n    };\n  };\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ReadQuestion));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../../styles/interview.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { TimerComponent } from \"./timerComponent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\nimport audio from \"../../assets/images/audio.png\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport ReadQuestion from \"./ReadQuestion\";\nimport WebcamComponent from \"./WebcamComponent\";\nimport ScreenRecording from \"../Test/screenRecording\";\n\nlet verbalSkipableValue = parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\n  ? parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\n  : 10;\n\nlet readQuestionTime = parseInt(process.env.REACT_APP_READ_QUESTION)\n  ? parseInt(process.env.REACT_APP_READ_QUESTION)\n  : 10;\n\nlet remainingGlobal = 0;\nlet Interval = \"\",scheduleIdGlobal=\"\",candidateIdGlobal=\"\",timedate=\"\",activeStep=0,ScreenFileGlobal=\"\",ScreenFileNameGlobal=\"\";\nexport class Interview extends Component {\n  constructor(props) {\n    super(props);\n    this.clockRef = React.createRef();\n    this.mediaRecorderRef = React.createRef();\n    this.timer = 0;\n    this.state = {\n      restartTimer: false,\n      audioNew: null,\n      ques: [],\n      capturing: false,\n      activeStep: 0,\n      audio: false,\n      video: false,\n      recordedChunks: [],\n      question: [],\n      questions: [],\n      videofilename: \"\",\n      isDataArrived: true,\n      questionData: [],\n      submitClicked: false,\n      faceNotDetected: 0,\n      submittedQuestions: [],\n      totalQuestions: 0,\n      submissionQueue: [],\n      responseId: \"\",\n      noOfRetakes: 0,\n      showDialog: false,\n      showReadQuestion: false,\n      totalRetakes: 0,\n      retakesAvailable: 0,\n      retake: false,\n      showRetakeDialog: false,\n      remainingTime: 0,\n      isPlaying: true,\n      skipable: false,\n      ScheduleId: \"\",\n      CandidateId: \"\",\n      timerInput: 0,\n      time:''\n      // ScreenFile:'',\n      // ScreenFileName:''\n    };\n    this.vid = React.createRef();\n    this.audio = React.createRef();\n    this.webcamRef = React.createRef();\n    this.childRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    // console.log(\"dataa\", this.props.data);\n    if (this.props && this.props.data) {\n      // console.log(this.props.history.location.state.response)\n      const { id, candidateId, scheduleId } =\n        this.props &&\n        this.props.data &&\n        this.props.data.data &&\n        this.props.data.data.response;\n   await   this.setState({\n        responseId: id,\n        ScheduleId: scheduleId,\n        CandidateId: candidateId,\n      });\n\n      scheduleIdGlobal=scheduleId;\n      candidateIdGlobal=candidateId;\n      let questionData = [];\n      this.props.data &&\n        this.props.data.verbalQuestions &&\n        this.props.data.verbalQuestions.map((item) => {\n          questionData.push({\n            id: item.id,\n            QuestionText: item.text,\n            Questionstime: item.suggestedDuration,\n          });\n        });\n      this.setState({\n        questionData: questionData,\n        totalQuestions: questionData.length,\n        showReadQuestion: true,\n      });\n\n      let timerInput = 0;\n      if (questionData.length > 0) {\n        const val = questionData[this.state.activeStep].Questionstime;\n        timerInput = Number(val);\n        await this.setState({\n          timerInput: timerInput,\n        });\n      }\n\n      this.props &&\n        this.props.data &&\n        this.props.data.data &&\n        this.props.data.data.response &&\n        this.props.data.data.response.questionType &&\n        this.props.data.data.response.questionType.length > 0 &&\n        this.props.data.data.response.questionType.map((item) => {\n          if (item.name.toLowerCase() == \"verbal\") {\n         if(item.retake){\n          this.setState({\n            totalRetakes: item.retake,\n            retakesAvailable: item.retake -1\n          });\n         }\n            if (item.skipable && this.state.timerInput) {\n              let time = (verbalSkipableValue + readQuestionTime) * 1000;\n              setTimeout(() => {\n                this.setState({\n                  skipable: true,\n                });\n              }, time);\n            }\n          }\n        });\n    }\n    this.getMicrophone();\n\n    var today = new Date();\n    var date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n\n    var time =\n      today.getHours() + \"-\" + today.getMinutes() + \"-\" + today.getSeconds();\n\n    var dateTime = date + \"-\" + time;\n    this.setState({\n      timedate: dateTime,\n      // disble_next_button: true,\n    });\n    timedate=dateTime\n  }\n\n  async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    this.setState({ audioNew: audio });\n  }\n  static getDerivedStateFromProps(nextProps, currentState) {\n    // console.log('Helloo',nextProps && nextProps.history && nextProps.history.location && nextProps.history.location.state &&  nextProps.history.location.state.response )\n\n    if (\n      nextProps &&\n      nextProps.UserReducer &&\n      nextProps.UserReducer.isScreenShotDataArrived &&\n      nextProps.UserReducer.screenShot &&\n      nextProps.UserReducer.screenShot.data\n    ) {\n      nextProps.UserReducer.isScreenShotDataArrived = false;\n      if (!nextProps.UserReducer.screenShot.data.faces) {\n        currentState.faceNotDetected = currentState.faceNotDetected + 1;\n      }\n    }\n\n    return currentState;\n  }\n\n  // isStepSkipped = (step) => {\n  //   return this.state.skipped.has(step);\n  // };\n\n  handleStart = () => {\n    this.clockRef.current.start();\n  };\n\n  handleTimeUpdate = (time,remainingTime)=>{\n    if(this.state.time!=time){\n      this.setState({time:time,remainingTime:remainingTime});\n    }\n  }\n  handleNext = async (questiondata) => {\n    if (!this.state.retake) {\n      await this.setState({ restartTimer: true, isPlaying: true });\n      await this.handleDownload(questiondata);\n      let quesdata = [];\n\n      questiondata.map((item) => {\n        quesdata.push(item.id);\n      });\n\n      this.getStepContent(questiondata, this.state.activeStep);\n\n      await this.setState({\n        activeStep: this.state.activeStep + 1,\n        showReadQuestion: true,\n        retakesAvailable: this.state.totalRetakes - 1,\n      });\n      activeStep=activeStep+1\n      let timerInput = 0;\n      if (this.state.questionData.length > 0) {\n        const val =\n          this.state.questionData[this.state.activeStep].Questionstime;\n        timerInput = Number(val);\n        await this.setState({\n          timerInput: timerInput,\n        });\n      }\n    }\n  };\n\n  getStepContent(questiondata, stepIndex) {\n    if (questiondata.length > 0) {\n      let steparray = [];\n      questiondata.map((item) => {\n        steparray.push(item.QuestionText);\n      });\n      const value = steparray[this.state.activeStep];\n      switch (this.state.activeStep) {\n        case this.state.activeStep:\n          return (\n            <div>\n              <div className=\"question-text\">\n                Q{this.state.activeStep + 1}. {value}\n              </div>\n            </div>\n          );\n        default:\n          return \"Unknown stepIndex\";\n      }\n    }\n  }\n\n  handleFinish = async (questiondata) => {\n    if (!this.state.retake) {\n      this.setState({\n        submitClicked: true,\n        // isPlaying: true,\n      });\n      await this.handleDownload(questiondata);\n      let quesdata = [];\n\n      questiondata.map((item) => {\n        quesdata.push(item.id);\n      });\n      const question = [];\n      question.push(this.getStepContent(this.state.activeStep));\n\n      this.props.submitClickedHandler();\n    }\n  };\n\n  handlePriorUpload = async (file, name, quesdata) => {\n    if (this.state.skipable && this.state.timerInput) {\n      this.setState({\n        skipable: false,\n      });\n      let time = (verbalSkipableValue + readQuestionTime) * 1000;\n\n      setTimeout(() => {\n        this.setState({\n          skipable: true,\n        });\n      }, time);\n    }\n\n    // console.log('name',name,ScreenFileNameGlobal)\n    var formdata = new FormData();\n    formdata.append(\"video\", file, name);\n   if(ScreenFileGlobal){\n    formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\n   }\n    formdata.append(\"timeTaken\", remainingGlobal);\n    const payload = {\n      questionId: quesdata[this.state.activeStep],\n      responseId: this.state.responseId,\n      type: \"verbal\",\n      questionStatus: 3,\n      timeTaken: remainingGlobal,\n      // videoFile: file,\n      // videoFileName: name,\n      // screenFile : ScreenFileGlobal,\n      // screenFileName : ScreenFileNameGlobal\n    };\n    let quesNo = this.state.activeStep + 1;\n    let questionType = \"verbal\";\n    let indexDbData = {\n      questionId: quesdata[this.state.activeStep],\n      responseId: this.state.responseId,\n      type: \"verbal\",\n      questionStatus: 3,\n      timeTaken: remainingGlobal,\n      videoFile: file,\n      videoFileName: name,\n      screenFile : ScreenFileGlobal,\n      screenFileName : ScreenFileNameGlobal\n    };\n    \n    // remainingGlobal = 0;\n    // clearInterval(Interval);\n\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\n\n    this.setState({\n      faceNotDetected: 0,\n    });\n\n  };\n\n  handleStartCaptureClick = () => {\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n    if (this.mediaRecorderRef) {\n      this.mediaRecorderRef.current = new MediaRecorder(\n        this.webcamRef.current.stream,\n        {\n          mimeType: isSafari\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n            : \"video/webm\",\n          audioBitsPerSecond: 128000,\n          videoBitsPerSecond: 625000,\n        }\n      );\n    }\n    this.setState({\n      capturing: true,\n   \n    },()=>{  this.childRef.current.startCapture()});\n    \n    ScreenFileGlobal=\"\"\n    ScreenFileNameGlobal=\"\"\n    // setTimeout(()=>{\n    //   this.childRef.current.startCapture()\n    // },1000)\n    // remainingGlobal = 0;\n    \n    // clearInterval(Interval);\n    // Interval = setInterval(() => {\n    //   remainingGlobal += 1;\n    // }, 1000);\n\n    if (\n      this.mediaRecorderRef &&\n      this.mediaRecorderRef.current &&\n      this.mediaRecorderRef.current.state == \"inactive\"\n    ) {\n      this.mediaRecorderRef.current.start();\n      this.mediaRecorderRef.current.addEventListener(\n        \"dataavailable\",\n        this.handleDataAvailable\n      );\n    }\n  };\n\n  handleAbort = () => {\n    if (\n      this.mediaRecorderRef &&\n      this.mediaRecorderRef.current &&\n      this.mediaRecorderRef.current.state == \"recording\"\n    ) {\n     this.childRef.current.abortCapture()\n      this.mediaRecorderRef.current.stop();\n      this.mediaRecorderRef.current.addEventListener(\"stop\", () => {\n        this.setState({\n          recordedChunks: [],\n        });\n      });\n      this.setState({\n        capturing: false,\n      });\n\n      this.handleStartCaptureClick();\n    }\n  };\n\n  handleStopCaptureClick = () => {\n    if (\n      this.mediaRecorderRef &&\n      this.mediaRecorderRef.current &&\n      this.mediaRecorderRef.current.state == \"recording\"\n    ) {\n      this.mediaRecorderRef.current.stop();\n      this.setState({\n        capturing: false,\n      });\n    }\n  };\n\n  handleDownload = (questiondata) => {\n    let quesdata = [];\n\n    questiondata.map((item) => {\n      quesdata.push(item.id);\n    });\n\n    // console.log('Hellooo',this.state.recordedChunks.length ,ScreenFileGlobal ,ScreenFileNameGlobal)\n\n  //  let IntervalScreen = setInterval(() => {\n    if (this.state.recordedChunks.length  ) {\n      // console.log(\"insideee download condition\");\n      const blob = new Blob(this.state.recordedChunks, {\n        type: \"video/webm\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      window.URL.revokeObjectURL(url);\n      this.setState({ recordedChunks: [] });\n      var file = new File(\n        [blob],\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`\n      );\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`;\n      this.setState({ videofilename: filedata });\n      this.handlePriorUpload(\n        file,\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`,\n        quesdata\n      );\n      // clearInterval(IntervalScreen)\n    }\n    // }, 1000);\n\n \n  };\n\n  handleDataAvailable = async ({ data }) => {\n    if (data.size > 0) {\n      await this.setState({\n        recordedChunks: this.state.recordedChunks.concat(data),\n      });\n      remainingGlobal=this.state.timerInput - this.state.remainingTime\n\n      // setTimeout(()=>{\n      if (this.state.activeStep == this.state.questionData.length - 1) {\n        this.handleFinish(this.state.questionData);\n      } else {\n        this.handleNext(this.state.questionData);\n      }\n      // },2000)\n    }\n  };\n\n  handleTimer = async (questionData) => {\n\n    await this.setState({\n      restartTimer: false,\n      showDialog: false,\n      retake: false,\n      isPlaying: false,\n    });\n    setTimeout(() => {\n      this.handleStopCaptureClick(questionData);\n    \n    }, 2000);\n    this.childRef.current.stopCapture()\n  };\n\n  capture = () => {\n    const imgSrc =\n      this.webcamRef &&\n      this.webcamRef.current &&\n      this.webcamRef.current.getScreenshot();\n    let image =\n      imgSrc && imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\n        ? imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\n        : null;\n    this.setState({\n      screenShot: image,\n    });\n\n    this.props.UserAction.verifyScreenshot({\n      base64: image,\n    });\n  };\n\n  readQuestionTimerEnds = () => {\n    this.setState({ showReadQuestion: false });\n\n  };\n\n  retakeHandler = async () => {\n    if (this.state.retakesAvailable && this.state.retakesAvailable>0) {\n      await this.setState({\n        retakesAvailable: this.state.retakesAvailable - 1,\n        showRetakeDialog: false,\n        restartTimer: true,\n        retake: true,\n        showDialog: false,\n      });\n      const payload = {\n        questionId: this.state.questionData[this.state.activeStep].id,\n        responseId: this.state.responseId,\n        type: \"verbal\",\n        questionStatus: 2,\n      };\n      this.props.UserAction.updateResponse(payload);\n      this.handleAbort();\n      this.setState({\n        restartTimer: false,\n      });\n      if (this.state.skipable && this.state.timerInput &&  !this.state.showReadQuestion) {\n        this.setState({\n          skipable: false,\n        });\n        let time = (verbalSkipableValue ) * 1000;\n\n        setTimeout(() => {\n          this.setState({\n            skipable: true,\n          });\n        }, time);\n      }\n    }\n  };\n\n  retakeClicked = () => {\n    if (\n      !(\n        this.state.totalRetakes - this.state.retakesAvailable ==\n        this.state.totalRetakes\n      )  && ( this.state.totalRetakes - this.state.retakesAvailable > 0)\n    ) {\n      this.setState({ showRetakeDialog: true });\n    }\n  };\n\n\n  handleEarlySubmit = () => {\n    if (this.state.skipable && this.state.retakesAvailable && this.state.retakesAvailable>0) {\n      this.setState({\n        showDialog: true,\n      });\n    } else if (this.state.skipable) {\n      this.handleTimer(this.state.questionData);\n    }\n  };\n\n  handleTimerEnd = () => {\n    if (this.state.retakesAvailable && this.state.retakesAvailable>0) {\n      this.setState({\n        showDialog: true,\n      });\n    } else {\n      this.handleTimer(this.state.questionData);\n    }\n  };\n\n   onScreenAccess(){\n    console.log(\"got Screen access\");\n}\n onRecordStart(){\n    console.log(\"started recording\");\n}\n onRecordStop(){\n    console.log(\"stopped recording\");\n}\n onUserStop(){\n    console.log(\"user stopped screen access\");\n    ScreenFileGlobal=\"\";\n    ScreenFileNameGlobal=\"\"\n}\nasync onVideoFile(blob){\n  console.log(blob)\n    let ScreenFileTemp = new File(\n      [blob],\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\n    );\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\n \n      ScreenFileGlobal = ScreenFileTemp;\n      ScreenFileNameGlobal = ScreenFileNameTemp\n\n\n    \n\n}\n onAbort(){\n    console.log(\"recieved abort callback\");\n}\n\n  render() {\n    let questiondata = this.state.questionData;\n    localStorage.setItem(\"questiondata\", JSON.stringify(questiondata));\n    var xyz = JSON.parse(localStorage.getItem(\"questiondata\"));\n    let questiondata1 = [];\n    let quesreadtime = [];\n    xyz.map((item) => {\n      questiondata1.push(parseInt(item.Questionstime));\n      quesreadtime.push(10000);\n    });\n\n    // var n = questiondata1[this.state.act_num];\n    // var r = quesreadtime[this.state.act_num];\n\n    const steps = [];\n    for (let i = 1; i <= questiondata.length; i++) {\n      steps.push(i);\n    }\n\n    // const videoConstraints = {\n    //   facingMode: { exact: \"user\" },\n    // };\n\n    return <div>\n       <ScreenRecording ref={this.childRef} onScreenAccess={this.onScreenAccess} onUserStop={this.onUserStop}\n       onRecordStart={this.onRecordStart} onRecordStop={this.onRecordStop} onVideoFile={this.onVideoFile} onAbort={this.onAbort} />\n      {\n      localStorage.getItem(\"login\") && localStorage.getItem(\"preview\") ? (\n      this.state.showReadQuestion ? (\n        <ReadQuestion\n          durationTime={readQuestionTime}\n          question={this.state.questionData[this.state.activeStep]}\n          quesNo={this.state.activeStep + 1}\n          responseId={this.state.responseId}\n          type=\"verbal\"\n          readQuestionTimerEnds={this.readQuestionTimerEnds}\n        />\n      ) : (\n        <div className=\"interview-main-div\">\n          <Dialog\n            className=\"first-dialog-submit\"\n            open={this.state.showDialog}\n            // onClose={() => {\n            //   this.setState({\n            //     showDialog: false,\n            //   });\n            // }}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <div className=\"main-dialog-heading\">\n              Do you want to retake or submit?\n            </div>\n            <div className=\"main-dialog-sub-heading\">\n              You have {this.state.retakesAvailable} retakes left.\n            </div>\n            <div className=\"main-dialog-buttons-wrapper\">\n              <div className=\"dialog-retry-button\" onClick={this.retakeHandler}>\n                Retake\n              </div>\n              <div className=\"dialog-submit-button\" onClick={this.handleTimer}>\n                Submit\n              </div>\n            </div>\n          </Dialog>\n\n          <Dialog\n            className=\"first-dialog-submit\"\n            open={this.state.showRetakeDialog}\n            // onClose={() => {\n            //   this.setState({\n            //     showRetakeDialog: false,\n            //   });\n            // }}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <div className=\"main-dialog-heading\">\n              Are you sure you want to retake?\n            </div>\n            <div className=\"main-dialog-sub-heading\">\n              You have {this.state.retakesAvailable} retakes left.\n            </div>\n            <div className=\"main-dialog-buttons-wrapper\">\n              <div\n                className=\"dialog-retry-button\"\n                onClick={() => {\n                  this.setState({ showRetakeDialog: false });\n                }}\n              >\n                No\n              </div>\n              <div\n                className=\"dialog-submit-button\"\n                onClick={this.retakeHandler}\n              >\n                Yes\n              </div>\n            </div>\n          </Dialog>\n          <div className=\"interview-row-wrapper\">\n            <div className=\"Inter-1\">\n              {window.screen.width > 1024 ? (\n                <div className=\"previews-heading\">\n                  <Typography>Live Interview</Typography>\n                </div>\n              ) : null}\n              {window.screen.width > 1024 ? (\n                <div className=\"previews-subHeading1\">\n                  {/* <Typography>Please don't try to refer anything from any other means.</Typography> */}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"inter-2 total-questions\">\n              <div>\n                <div className=\"questions-wrapper\">\n                  <div className=\"total\"> Total Questions</div>\n                  <div className=\"circle-interview\">\n                    {this.state.activeStep + 1}/{questiondata.length}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"fluid-container\">\n            <div className=\"interview-row-wrapper-new\">\n              <div className=\"left-interview\">\n                <div className=\"video-div\">\n                  <div className=\"interview-video-new\">\n             \n                    <WebcamComponent\n                      handleStartCaptureClick={this.handleStartCaptureClick}\n                      handleAbort={this.handleAbort}\n                      handleDataAvailable={this.handleDataAvailable}\n                      handleStopCaptureClick={this.handleStopCaptureClick}\n                      capturing={this.state.capturing}\n                      webcamRef={this.webcamRef}\n                      recordedChunks={this.state.recordedChunks}\n                      handleDownload={this.handleDownload}\n                    />\n\n                    <div className=\"bottom-video-div\">\n                      <div className=\"retake-button-div\">\n                   \n                        <div\n                          className={\n                           !this.state.totalRetakes ||  (this.state.totalRetakes -\n                            this.state.retakesAvailable ==\n                          this.state.totalRetakes)\n                              ? \"retake-disabled-button\"\n                              : \"retake-button\"\n                          }\n                          onClick={this.retakeClicked}\n                        >\n                          <span>\n                            <ReplayIcon\n                              style={{\n                                height: \"20px\",\n                                width: \"20px\",\n                                margin: \"0 5px\",\n                              }}\n                            />\n                          </span>\n                          Retake{\" \"}\n                        {\n                          this.state.totalRetakes ?  <span>  {this.state.totalRetakes -\n                            this.state.retakesAvailable}{\" \"}\n                          / {this.state.totalRetakes}</span> : ''\n                        }\n\n                        </div>\n                      </div>\n                      <div className=\"timer-button-div\">\n                        <div className=\"timer-button\">\n                        <TimerComponent\n                          // nextBtn={this.state.disble_next_button}\n                          durationTime={this.state.timerInput}\n                          // disableBtn={this.state.restartTimer}\n                          // remainingTimeHandler={this.remainingTimeHandler}\n                          handleTimer={() => {\n                            // this.handleTimer(questiondata)\n                            console.log(\"handle\");\n                          }}\n                          isPlaying={true}\n                          className=\"timer-2\"\n                          onTick={(time,remainingTime)=>{this.handleTimeUpdate(time,remainingTime)}}\n                        />\n      {this.state.time}\n                        </div>\n                      </div>\n                      <div className=\"audio-analyser-div\">\n                        <div className=\"audio-img\">\n                          {\" \"}\n                          <img src={audio} />{\" \"}\n                        </div>\n                        {this.state.audioNew ? (\n                          <div>\n                            {\" \"}\n                            <AudioAnalyser audio={this.state.audioNew} />{\" \"}\n                          </div>\n                        ) : null}\n                      </div>\n                      <div className=\"submit-button-div\">\n                        <div\n                          className={\n                            this.state.skipable\n                              ? \"submit-button\"\n                              : \"submit-button-disabled\"\n                          }\n                          onClick={this.handleEarlySubmit}\n                        >\n                          Submit\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"total-questions-new\">\n                      <div>\n                        <div className=\"questions-wrapper\">\n                          <div className=\"total\">Total Questions</div>\n                          <div className=\"circle-interview\">\n                            {this.state.activeStep + 1}/{questiondata.length}\n                          </div>\n                        </div>\n                      </div>\n                      {this.state.timerInput !== 0 &&\n                        window.screen.width <= 1024 && (\n                          <TimerComponent\n                            durationTime={this.state.timerInput}\n                            disableBtn={this.state.restartTimer}\n                            remainingTimeHandler={this.remainingTimeHandler}\n                            handleTimer={() => {\n                              this.handleTimerEnd();\n                            }}\n                            isPlaying={this.state.isPlaying}\n                            className=\"timer-2\"\n                            onTick={(time,remainingTime)=>{this.handleTimeUpdate(time,remainingTime)}}\n                          />\n                        )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"right-interview\">\n                <div className=\"question-div\">\n                  {this.state.timerInput !== 0 && window.screen.width > 1024 && (\n                    <TimerComponent\n                      // nextBtn={this.state.disble_next_button}\n                      durationTime={this.state.timerInput}\n                      remainingTimeHandler={this.remainingTimeHandler}\n                      disableBtn={this.state.restartTimer}\n                      handleTimer={() => {\n                        this.handleTimerEnd();\n                      }}\n                      isPlaying={this.state.isPlaying}\n                      className=\"timer-1\"\n                    />\n                  )}\n\n                  <div className=\"content-div\">\n                    <div className=\"qustion-content-div\">\n                      {this.state.activeStep === steps.length ? (\n                        <div></div>\n                      ) : (\n                        <div>\n                          <span\n                            className=\"laptop-only\"\n                            style={{\n                              display: \"flex\",\n                              fontSize: \"12px\",\n                              marginLeft: \"20px\",\n                            }}\n                          >\n                            Read your question\n                          </span>\n                          <div className=\"question\">\n                            <div>\n                              {this.getStepContent(\n                                questiondata,\n                                this.state.activeStep\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"buttons-wrapper\">\n                      <Button\n                        // disabled={this.state.disable_submit_btn}\n                        variant=\"contained\"\n                        className={\n                          this.state.skipable\n                            ? \"Button-next\"\n                            : \"Button-next-disabled\"\n                        }\n                        onClick={this.handleEarlySubmit}\n                      >\n                        <span>Next Question</span>\n                        <span>\n                          <ArrowForwardIcon\n                            style={{ height: \"15px\", width: \"15px\" }}\n                          />\n                        </span>\n                      </Button>\n\n                      <Button\n                        // disabled={this.state.disable_submit_btn}\n                        variant=\"contained\"\n                        className=\"Button-retry\"\n                        onClick={this.retakeClicked}\n                      >\n                        <span>Retake</span>\n                        <span>\n                          <ReplayIcon\n                            style={{ height: \"15px\", width: \"15px\" }}\n                          />\n                        </span>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"end\",\n              marginRight: \"30px\",\n              marginTop: \"20px\",\n            }}\n            className=\"interview-logo\"\n          >\n            {/* <img style={{maxWidth:'100px'}} src={birballogo}></img> */}\n          </div>\n        </div>\n      )\n    ) : (\n      <div>Access Blocked</div>\n    \n    )\n  }\n  \n  \n    </div>\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    // CandidateReducer: state.CandidateReducer\n    UserReducer: state.UserReducer,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // candidateActions: bindActionCreators(Actions, dispatch),\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Interview));\n","import React, { Component } from \"react\";\nimport './submitting.scss';\nimport { connect } from \"react-redux\";\nimport submitting from '../../assets/images/Submitting.svg';\nimport * as Actions from \"../../store/User/UserAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nexport class Submitting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\nshow:false\n    \n    };\n  }\n  componentDidMount() {\n    window.history.pushState(null, \"\", window.location.href);\n    window.onpopstate = function () {\n        window.history.pushState(null, \"\", window.location.href);\n    };\n    \n    window.addEventListener('beforeunload', this.keepOnPage);\n\nsetTimeout(()=>{\nthis.setState({\n  show:true\n})\n},1000)\n\n  }\n\n\n  componentDidUnmount() {\n    window.onbeforeunload = null;\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.keepOnPage);\n  }\n  \n  keepOnPage(e) {\n    var message = 'Warning!\\n\\nNavigating away from this page will clear your response.';\n    e.returnValue = message;\n    return message;\n  }\n\n\n\n  render() {\n   console.log('insideee submitting')\n    return (\n    <div className=\"submitting-main\">\n         <div className=\"submitting-gif\">\n        <img src={submitting}  />\n        </div>\n        <div className=\"submitting-text\">\n         \n          Submitting <span style={{color:'#04724d'}}> {\n        this.props.submittedQuestions && this.props.totalQuestions && this.props.submittedQuestions.length==this.props.totalQuestions ? this.props.totalQuestions : this.props.submittedQuestions.length+1\n          }</span> of {this.props.totalQuestions}, Please Wait...\n\n      <div style={{padding:'20px', transform:'rotate(180deg)'}}>\n    {\n      this.props.progress && this.props.progress>0  && this.state.show?   <LinearProgress\n      className=\"linearProgressInternetLanding\"\n      variant=\"determinate\"\n      value={this.props.progress}\n      style={{\n          backgroundColor: '#fff',\n          borderRadius: '15px',\n          height: '5px',\n      }}\n  /> : null\n    }\n                                               \n      </div>\n     {\n       this.state.show ?  <div style={{ fontSize:'13px',textAlign:'center' }}>Uploading {this.props.progress && this.props.progress.toFixed(1)}%...</div> : null\n     }\n             \n        </div>\n\n     \n\n                                    \n                                           \n        \n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      UserReducer: state.UserReducer,\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      UserAction: bindActionCreators(Actions, dispatch),\n    };\n  };\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withRouter(Submitting));\n","import React, { Component } from \"react\";\nimport \"./mcqQuestions.scss\";\nimport { TimerComponent } from \"./timerComponent\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Checkbox } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport WebcamComponent from \"./WebcamComponent\";\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\nimport audio from \"../../assets/images/audio.png\";\nimport ScreenRecording from \"../Test/screenRecording\";\n\nlet mcqSkipableValue = parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\n  ? parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\n  : 5;\n\nlet remainingGlobal = 0,durationGlobal=0;\nlet Interval = \"\",scheduleIdGlobal=\"\",candidateIdGlobal=\"\",timedate=\"\",activeStep=0,ScreenFileGlobal=\"\",ScreenFileNameGlobal=\"\";\nclass McqQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.clockRef = React.createRef();\n    this.mediaRecorderRef = React.createRef();\n    this.timer = 0;\n    this.state = {\n      capturing: false,\n      recordedChunks: [],\n      videofilename: \"\",\n      submitClicked: false,\n      faceNotDetected: 0,\n      responseId: \"\",\n      ScheduleId: \"\",\n      CandidateId: \"\",\n      timedate: new Date().toISOString(),\n      remainingTime: 0,\n      McqData: [],\n      totalLength: 0,\n      current: 0,\n      currentData: null,\n      options: null,\n      disablebtn: true,\n      restartTimer: false,\n      isPlaying: true,\n      audio: false,\n      audioNew: null,\n      isMultiCheck: false,\n      isSkipped: 0,\n      time:''\n    };\n    this.vid = React.createRef();\n    this.audio = React.createRef();\n    this.webcamRef = React.createRef();\n    this.childRef = React.createRef();\n  }\n\n  componentDidMount() {\n    timedate=this.state.timedate;\n    const { questionType, id, candidateId, scheduleId } =\n      this.props &&\n      this.props.data &&\n      this.props.data.data &&\n      this.props.data.data.response;\n    const isSkipped =\n      questionType &&\n      questionType.length > 0 &&\n      questionType.find((el) => el.name && el.name.toLowerCase() === \"mcq\");\n    const details = this.props && this.props.data;\n    const data = details && details.mcqQuestions;\n    const responseId = id;\n    let multi = 0;\n    let options =\n      data &&\n      data[0] &&\n      data[0].metadata &&\n      data[0].metadata.option &&\n      data[0].metadata.option.length > 0 &&\n      data[0].metadata.option.map((el) => {\n        multi = el.correct ? multi + 1 : multi;\n        return { label: el.text, value: false };\n      });\n\n    this.setState({\n      McqData: data,\n      totalLength: data.length,\n      current: 1,\n      currentData: data[0],\n      options: options,\n      responseId: responseId,\n      isMultiCheck: multi > 1 ? true : false,\n      isSkipped: isSkipped && isSkipped.skipable ? isSkipped.skipable : 0,\n      ScheduleId: scheduleId,\n      CandidateId: candidateId,\n    });\n  activeStep=1\n    scheduleIdGlobal=scheduleId;\n    candidateIdGlobal=candidateId;\n    let timeOut = isSkipped && isSkipped.skipable ? isSkipped.skipable : 0;\n    timeOut = timeOut ? mcqSkipableValue * 1000 : 0;\n    timeOut &&\n      setTimeout(() => {\n        this.setState({ disablebtn: false });\n      }, timeOut);\n    this.getMicrophone();\n  }\n\n  async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    this.setState({ audioNew: audio });\n  }\n\n  changeOption = (e, label) => {\n    let { options, isMultiCheck } = this.state;\n    options &&\n      options.length > 0 &&\n      options.map((el, index) => {\n        if (isMultiCheck) {\n          if (el.label === label) {\n            options[index].value = true;\n          }\n        } else {\n          if (el.label === label) {\n            options[index].value = true;\n          } else {\n            options[index].value = false;\n          }\n        }\n      });\n    this.setState({ options: options });\n  };\n\n  handleStartCaptureClick = () => {\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n    const payload = {\n      questionId: this.state.currentData.id,\n      responseId: this.state.responseId,\n      type: \"mcq\",\n      questionStatus: 2,\n    };\n    this.props.UserAction.updateResponse(payload);\n    if (this.mediaRecorderRef) {\n      this.mediaRecorderRef.current = new MediaRecorder(\n        this.webcamRef.current.stream,\n        {\n          mimeType: isSafari\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n            : \"video/webm\",\n          audioBitsPerSecond: 128000,\n          videoBitsPerSecond: 625000,\n        }\n      );\n    }\n    this.setState({\n      capturing: true,\n    },()=>{  this.childRef.current.startCapture()});\n\n    ScreenFileGlobal=\"\"\n    ScreenFileNameGlobal=\"\"\n\n    if (\n      this.mediaRecorderRef &&\n      this.mediaRecorderRef.current &&\n      this.mediaRecorderRef.current.state == \"inactive\"\n    ) {\n      this.mediaRecorderRef.current.start();\n      this.mediaRecorderRef.current.addEventListener(\n        \"dataavailable\",\n        this.handleDataAvailable\n      );\n    }\n  };\n\n  handleDataAvailable = async ({ data }) => {\n    if (data.size > 0) {\n      remainingGlobal=durationGlobal - this.state.remainingTime\n      await this.setState({\n        recordedChunks: this.state.recordedChunks.concat(data),\n      });\n      // setTimeout(()=>{\n      if (this.state.current === this.state.totalLength) {\n        this.handleFinish(this.state.McqData);\n      } else {\n        this.handleNext(this.state.McqData);\n      }\n      // },2000)\n    }\n  };\n  handleFinish = async (questiondata) => {\n    this.setState({\n      submitClicked: true,\n    });\n    await this.handleDownload(questiondata);\n    let quesdata = [];\n\n    questiondata.map((item) => {\n      quesdata.push(item.id);\n    });\n    const question = [];\n    question.push(this.getStepContent(this.state.current));\n\n    this.props.submitClickedHandler();\n  };\n\n  getStepContent(questiondata, stepIndex) {\n    if (questiondata.length > 0) {\n      let steparray = [];\n      questiondata.map((item) => {\n        steparray.push(item.QuestionText);\n      });\n      const value = steparray[this.state.current];\n      switch (this.state.activeStep) {\n        case this.state.activeStep:\n          return (\n            <div>\n              <div className=\"question-text\">\n                Q{this.state.activeStep + 1}. {value}\n              </div>\n            </div>\n          );\n        default:\n          return \"Unknown stepIndex\";\n      }\n    }\n  }\n  handleNext = async (questiondata) => {\n    await this.setState({\n      restartTimer: true,\n      isPlaying: true,\n      // remainingTime: remainingGlobal,\n    });\n\n    await this.handleDownload(questiondata);\n    let quesdata = [];\n\n    questiondata.map((item) => {\n      quesdata.push(item.id);\n    });\n    this.handleStartCaptureClick();\n    this.getStepContent(questiondata, this.state.current);\n    const { totalLength, current, McqData } = this.state;\n\n    if (current < totalLength && McqData && McqData[current]) {\n      let options =\n        McqData[current].metadata &&\n        McqData[current].metadata.option &&\n        McqData[current].metadata.option.length > 0 &&\n        McqData[current].metadata.option.map((el) => ({\n          label: el.text,\n          value: false,\n        }));\n      this.setState({\n        current: current + 1,\n        currentData: McqData[current],\n        options: options,\n        disablebtn: true,\n      });\n\n     activeStep=current+1\n    }\n  };\n  handleStopCaptureClick = () => {\n    if (\n      this.mediaRecorderRef &&\n      this.mediaRecorderRef.current &&\n      this.mediaRecorderRef.current.state == \"recording\"\n    ) {\n      this.mediaRecorderRef.current.stop();\n      this.setState({\n        capturing: false,\n      });\n    }\n  };\n\n  handleDownload = (questiondata) => {\n    let quesdata = [];\n\n    questiondata.map((item) => {\n      quesdata.push(item.id);\n    });\n    if (this.state.recordedChunks.length) {\n      const blob = new Blob(this.state.recordedChunks, {\n        type: \"video/webm\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      window.URL.revokeObjectURL(url);\n      this.setState({ recordedChunks: [] });\n      var file = new File(\n        [blob],\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`\n      );\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`;\n\n      this.setState({ videofilename: filedata });\n      this.handlePriorUpload(\n        file,\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`,\n        quesdata\n      );\n    }\n  };\n\n  handlePriorUpload = async (file, name, quesdata) => {\n    if (!this.state.disablebtn) {\n      this.setState({\n        disablebtn: true,\n      });\n      let time = mcqSkipableValue * 1000;\n\n      setTimeout(() => {\n        this.setState({\n          disablebtn: false,\n        });\n      }, time);\n    } else {\n      let time = mcqSkipableValue * 1000;\n\n      setTimeout(() => {\n        this.setState({\n          disablebtn: false,\n        });\n      }, time);\n    }\n    const { options } = this.state;\n    let chosenOption = \"No option Selected\";\n    options &&\n      options.length > 0 &&\n      options.map((el) => {\n        if (el.value) {\n          chosenOption = el.label;\n        }\n      });\n    var formdata = new FormData();\n    if(ScreenFileGlobal){\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\n     }\n    formdata.append(\"video\", file, name);\n    formdata.append(\"timeTaken\", remainingGlobal);\n    formdata.append(\"chosenOption\", chosenOption);\n    const payload = {\n      questionId: this.state.currentData.id,\n      responseId: this.state.responseId,\n      type: \"mcq\",\n      questionStatus: 3,\n      chosenOption: chosenOption,\n      timeTaken: remainingGlobal,\n      // videoFile: file,\n      // videoFileName: name,\n    };\n    let quesNo = this.state.current;\n    let questionType = \"mcq\";\n    let indexDbData = {\n      questionId: this.state.currentData.id,\n      responseId: this.state.responseId,\n      type: \"mcq\",\n      questionStatus: 3,\n      chosenOption: chosenOption,\n      timeTaken: remainingGlobal,\n      videoFile: file,\n      videoFileName: name,\n      screenFile : ScreenFileGlobal,\n      screenFileName : ScreenFileNameGlobal\n    };\n\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\n\n    this.setState({\n      faceNotDetected: 0,\n    });\n  };\n\n  handleTimer = async () => {\n    // clearInterval(Interval);\n    await this.setState({\n      restartTimer: false,\n      isPlaying: false,\n      disablebtn: true,\n    });\n    setTimeout(() => {\n      this.handleStopCaptureClick();\n    }, 2000);\n    \n    this.childRef.current.stopCapture()\n  };\n\n  onScreenAccess(){\n    console.log(\"got Screen access\");\n}\n onRecordStart(){\n    console.log(\"started recording\");\n}\n onRecordStop(){\n    console.log(\"stopped recording\");\n}\n onUserStop(){\n    console.log(\"user stopped screen access\");\n    ScreenFileGlobal=\"\";\n    ScreenFileNameGlobal=\"\"\n}\nasync onVideoFile(blob){\n  console.log(blob)\n    let ScreenFileTemp = new File(\n      [blob],\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\n    );\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\n \n      ScreenFileGlobal = ScreenFileTemp;\n      ScreenFileNameGlobal = ScreenFileNameTemp\n\n\n    \n\n}\n onAbort(){\n    console.log(\"recieved abort callback\");\n}\nhandleTimeUpdate = (time,remainingTime)=>{\n  if(this.state.time!=time){\n    this.setState({time:time,remainingTime:remainingTime});\n  }\n}\n  render() {\n    // console.log(process.env)\n    const {\n      disablebtn,\n      current,\n      currentData,\n      options,\n      restartTimer,\n      isPlaying,\n    } = this.state;\n\n    const duration =\n      currentData && currentData.suggestedDuration\n        ? currentData.suggestedDuration\n        : 0;\n        durationGlobal=duration;\n    let width = 10;\n    options &&\n      options.length > 0 &&\n      options.map((item) => {\n        if (item.label.length * 14 > width) {\n          width = item.label.length * 14 + 60;\n        }\n      });\n\n    return (\n      <div className=\"InterViewMcqMain\">\n          <ScreenRecording ref={this.childRef} onScreenAccess={this.onScreenAccess} onUserStop={this.onUserStop}\n       onRecordStart={this.onRecordStart} onRecordStop={this.onRecordStop} onVideoFile={this.onVideoFile} onAbort={this.onAbort} />\n        <div className=\"McqHeadingMain\">Live Interview</div>\n\n        <div className=\"McqQuestionArea\">\n          <div className=\"QuestionNumber\">Q.{current}</div>\n          <div className=\"QuestionArea\">\n            <div\n              className=\"QuestionText\"\n              dangerouslySetInnerHTML={{\n                __html: currentData && currentData.text,\n              }}\n            ></div>\n            <div\n              className=\"QuestionOptions\"\n              style={{\n                display: width > 360 ? \"flex\" : \"block\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              {options &&\n                options.length > 0 &&\n                options.map((item) => (\n                  <div\n                    className=\"OptionArea\"\n                    style={{\n                      width: width < 360 ? `${width}px` : \"360px\",\n                    }}\n                  >\n                    <Checkbox\n                      className=\"checkbox\"\n                      checked={item.value}\n                      onChange={(e) => this.changeOption(e, item.label)}\n                      label={item.label}\n                    />\n                    <span className=\"textLabel\">{item.label}</span>\n                  </div>\n                ))}\n            </div>\n          </div>\n          <div className=\"VideoArea\">\n            <div className=\"Timer\">\n              {duration ? (\n                <TimerComponent\n                  durationTime={duration}\n                  className=\"timer-new\"\n                  isPlaying={isPlaying}\n                  disableBtn={restartTimer}\n                  nextBtn={true}\n                  //   handleTimer={() => null}\n                  handleTimer={this.handleTimer}\n                  remainingTimeHandler={this.remainingTimeHandler}\n                  onTick={(time,remainingTime)=>{this.handleTimeUpdate(time,remainingTime)}}\n                />\n              ) : null}\n            </div>\n            <div className=\"VideoRecord\">\n              {\" \"}\n              <WebcamComponent\n                handleStartCaptureClick={this.handleStartCaptureClick}\n                // handleAbort={this.handleAbort}\n                handleDataAvailable={this.handleDataAvailable}\n                handleStopCaptureClick={this.handleStopCaptureClick}\n                capturing={this.state.capturing}\n                webcamRef={this.webcamRef}\n                recordedChunks={this.state.recordedChunks}\n                handleDownload={this.handleDownload}\n              />\n              <div className=\"audioDiv\">\n                <div className=\"audio-img\">\n                  <img src={audio} />{\" \"}\n                </div>\n                {this.state.audioNew ? (\n                  <div className=\"audio-analyser\">\n                    <AudioAnalyser audio={this.state.audioNew} />\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"NextBtn\">\n              <Button\n                disabled={disablebtn}\n                variant=\"contained\"\n                className={`Button-next ${disablebtn ? \"disabled\" : \"normal\"}`}\n                onClick={this.handleTimer}\n              >\n                <span>Next Question</span>\n                <span>\n                  <ArrowForwardIcon style={{ height: \"15px\", width: \"15px\" }} />\n                </span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  UserReducer: state.UserReducer,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(McqQuestions);\n","export function secondsToMinutes(time){\n    let min=Math.floor(time/60);\n    let sec=Math.floor(time % 60);\n    if(min<10){\n        min=`0${min}`\n    }\n    if(sec<10){\n        sec=`0${sec}`\n    }\n    return min+':'+sec;\n}\n\n\nexport function secondsToHours(time){\n    let hours = Math.floor(time / 3600);\ntime %= 3600;\n    let min=Math.floor(time/60);\n    let sec=Math.floor(time % 60);\n    if(hours<10 && hours!=0){\n        hours=`0${hours}`\n    }\n    if(hours==0){\n        hours=`00`\n    }\n    if(min<10){\n        min=`0${min}`\n    }\n    if(sec<10){\n        sec=`0${sec}`\n    }\n    return hours+':'+min+':'+sec;\n}\n\n\n// export const verbalSkipableValue=10;\n\n// export const mcqSkipableValue=5;","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./previewInstructionsVerbal.scss\";\nimport birballogo from \"../../assets/images/login_page_logo.png\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { secondsToHours } from \"../../utils/utility\";\nimport Button from \"@material-ui/core/Button\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { connect } from \"react-redux\";\n\nexport class Instructions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0,\n      totalTime: \"\",\n      responseId: localStorage.getItem(\"responseId\"),\n    };\n  }\n\n  componentDidMount() {\n    // if (this.props.totalCount && this.props.duration) {\n    this.setState({\n      count: this.props.totalCount,\n      totalTime: this.props.duration,\n    });\n\n    this.state.responseIdresponseId &&\n      this.props.UserAction.addEvent({\n        responseId: this.state.responseId,\n        event: {\n          type: \"debug\",\n          level: 3,\n          metadata: { Page: \"Verbal Introduction Page\" },\n          timestamp: new Date().toISOString(),\n        },\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"instruction-main-div\">\n        <div className=\"main-wrapper\">\n          <div className=\"left-content\">\n            <div className=\"instructions-heading\">\n              <Typography>Instructions</Typography>\n            </div>\n            <div className=\"instructions-subHeading\">\n              <Typography>Read and follow the given Instructions</Typography>\n            </div>\n          </div>\n\n          <div className=\"right-content\">\n            <div className=\"instructions-logo\">\n              <img alt=\"\" src={birballogo}></img>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"page-content\">\n          <div className=\"contents-verbal\">\n            <div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Question Type : Verbal\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\n                {this.state.count}\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Total Time :{\" \"}\n                {secondsToHours(this.state.totalTime)}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"continue-button-wrapper\">\n          <Button className=\"continue-button\" onClick={this.props.continue}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  UserReducer: state.UserReducer,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructions);\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./previewInstructionsVerbal.scss\";\nimport birballogo from \"../../assets/images/login_page_logo.png\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { secondsToHours } from \"../../utils/utility\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { connect } from \"react-redux\";\n\nexport class PreviewInstructionsMCQ extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0,\n      totalTime: \"\",\n      responseId: localStorage.getItem(\"responseId\"),\n    };\n  }\n\n  componentDidMount() {\n    // if (this.props.totalCount && this.props.duration) {\n    this.setState({\n      count: this.props.totalCount,\n      totalTime: this.props.duration,\n    });\n    // }\n\n    this.state.responseIdresponseId &&\n      this.props.UserAction.addEvent({\n        responseId: this.state.responseId,\n        event: {\n          type: \"debug\",\n          level: 3,\n          metadata: { Page: \"Verbal Introduction Page\" },\n          timestamp: new Date().toISOString(),\n        },\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"instruction-main-div\">\n        <div className=\"main-wrapper\">\n          <div className=\"left-content\">\n            <div className=\"instructions-heading\">\n              <Typography>Instructions</Typography>\n            </div>\n            <div className=\"instructions-subHeading\">\n              <Typography>Read and follow the given Instructions</Typography>\n            </div>\n          </div>\n\n          <div className=\"right-content\">\n            <div className=\"instructions-logo\">\n              <img alt=\"\" src={birballogo}></img>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"page-content\">\n          <div className=\"contents-verbal\">\n            <div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Question Type : MCQ\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\n                {this.state.count}\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Total Time :{\" \"}\n                {secondsToHours(this.state.totalTime)}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"continue-button-wrapper\">\n          <Button className=\"continue-button\" onClick={this.props.continue}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  UserReducer: state.UserReducer,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PreviewInstructionsMCQ);\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./previewInstructionsVerbal.scss\";\nimport birballogo from \"../../assets/images/login_page_logo.png\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { secondsToHours } from \"../../utils/utility\";\nimport Button from \"@material-ui/core/Button\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { connect } from \"react-redux\";\n\nexport class CodingInstructions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0,\n      totalTime: \"\",\n      responseId: localStorage.getItem(\"responseId\"),\n    };\n  }\n\n  componentDidMount() {\n    // if (this.props.totalCount && this.props.duration) {\n\n    this.setState({\n      count: this.props.totalCount,\n      totalTime: this.props.duration,\n    });\n\n    this.state.responseIdresponseId &&\n      this.props.UserAction.addEvent({\n        responseId: this.state.responseId,\n        event: {\n          type: \"debug\",\n          level: 3,\n          metadata: { Page: \"Coding Introduction Page\" },\n          timestamp: new Date().toISOString(),\n        },\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"instruction-main-div\">\n        <div className=\"main-wrapper\">\n          <div className=\"left-content\">\n            <div className=\"instructions-heading\">\n              <Typography>Instructions</Typography>\n            </div>\n            <div className=\"instructions-subHeading\">\n              <Typography>Read and follow the given Instructions</Typography>\n            </div>\n          </div>\n\n          <div className=\"right-content\">\n            <div className=\"instructions-logo\">\n              <img alt=\"\" src={birballogo}></img>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"page-content\">\n          <div className=\"contents-verbal\">\n            <div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Question Type : Coding\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\n                {this.state.count}\n              </div>\n              <div className=\"li-2\">\n                <div className=\"dot\"></div> Total Time :{\" \"}\n                {secondsToHours(this.state.totalTime)}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"continue-button-wrapper\">\n          <Button className=\"continue-button\" onClick={this.props.continue}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  UserReducer: state.UserReducer,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CodingInstructions);\n","import React from \"react\";\nimport { Interview } from \"../../utils/LazyLoaded\";\nimport interview from \"./interview\";\nimport Submitting from \"./submitting\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../store/User/UserAction\";\nimport { connect } from \"react-redux\";\nimport { store } from \"react-notifications-component\";\nimport serverAddress from \"../../config\";\nimport ReactGA from \"react-ga\";\nimport McqInteview from \"./mcqQuestions\";\nimport VerbalSummary from \"./PreviewInstructionsVerbal\";\nimport McqSummary from \"./PreviewInstructionsMCQ\";\nimport CodingSummary from \"./PreviewInstructionsCoding\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport warning from \"../../assets/images/warning.svg\";\nimport \"./parent.scss\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CodingInterview from \"./CodeEditor\";\n\nlet indexedDB =\n    window.indexedDB ||\n    window.webkitIndexedDB ||\n    window.mozIndexedDB ||\n    window.OIndexedDB ||\n    window.msIndexedDB,\n  IDBTransaction =\n    window.IDBTransaction ||\n    window.webkitIDBTransaction ||\n    window.OIDBTransaction ||\n    window.msIDBTransaction,\n  dbVersion = 2;\n\nlet request = indexedDB.open(\"elephantFiles\", dbVersion);\n\nrequest.onsuccess = function (event) {\n  let db = event.target.result;\n\n  db.onerror = function (event) {\n    console.log(\"Error creating/accessing IndexedDB database\");\n  };\n};\nrequest.onupgradeneeded = function (event) {\n  let db = event.target.result;\n  let objectStore = db.createObjectStore(\"videoAnswers\", {\n    keyPath: \"questionId\",\n  });\n};\n\nlet reTrial = 3;\nclass Parent extends React.Component {\n  state = {\n    submitClicked: false,\n    submittedQuestions: [],\n    totalQuestions: 0,\n    progress: 0,\n    submissionInProgress: false,\n    submissionQueue: [],\n    currentQuestion: \"\",\n    data: null,\n    totalMcq: 0,\n    totalVerbal: 0,\n    totalCoding: 0,\n    mcqQuestions: [],\n    sequenceOrder: \"\",\n    verbalQuestions: [],\n    verbalNew: false,\n    mcqNew: false,\n    codingNew: false,\n    suggestedVerbalDuration: 0,\n    suggestedCodingDuration: 0,\n    showDialog: false,\n    order: [],\n  };\n\n  componentDidMount() {\n    window.history.pushState(null, \"\", window.location.href);\n    window.onpopstate = function () {\n      window.history.pushState(null, \"\", window.location.href);\n    };\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\n    ReactGA.pageview(window.location.pathname);\n    const stateData =\n      this.props.history &&\n      this.props.history.location &&\n      this.props.history.location.state;\n    const totalMcq = stateData && stateData.totalMcq;\n    const totalVerbal = stateData && stateData.totalVerbal;\n    const totalCoding = stateData && stateData.totalCoding;\n    const newResponse =\n      stateData && stateData.data && stateData.data.newResponse;\n    let verbalCount = 0;\n    let mcqCount = 0;\n    let codingCount = 0;\n    let verbalDuration = 0,\n      codingDuration = 0,\n      mcqDuration = 0;\n    if (stateData) {\n      const { response } = stateData && stateData.data;\n      const { verbalQuestions, mcqQuestions, codingQuestions } = stateData;\n      verbalCount =\n        response && response.verbalQuestions && response.verbalQuestions.length;\n      mcqCount =\n        response && response.mcqQuestions && response.mcqQuestions.length;\n      codingCount =\n        response && response.codingQuestions && response.codingQuestions.length;\n      verbalQuestions &&\n        verbalQuestions.length > 0 &&\n        verbalQuestions.map((el) => {\n          verbalDuration += el.suggestedDuration;\n        });\n\n      mcqQuestions &&\n        mcqQuestions.length > 0 &&\n        mcqQuestions.map((el) => {\n          mcqDuration += el.suggestedDuration;\n        });\n      codingQuestions &&\n        codingQuestions.length > 0 &&\n        codingQuestions.map((el) => {\n          codingDuration += el.suggestedDuration;\n        });\n    }\n    this.setState({\n      ...stateData,\n      totalQuestions: totalMcq + totalVerbal + totalCoding,\n      verbalNew: newResponse\n        ? true\n        : verbalCount === totalVerbal\n        ? true\n        : false,\n      mcqNew: newResponse ? true : mcqCount === totalMcq ? true : false,\n      codingNew: newResponse\n        ? true\n        : codingCount === totalCoding\n        ? true\n        : false,\n      suggestedMcqDuration: mcqDuration,\n      suggestedVerbalDuration: verbalDuration,\n      suggestedCodingDuration: codingDuration,\n      order: stateData && stateData.order,\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\n  }\n\n  keepOnPage(e) {\n    var message =\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\n    e.returnValue = message;\n    return message;\n  }\n\n  submitClickedHandler = () => {\n    this.setState({\n      submitClicked: true,\n      progress: 0,\n    });\n  };\n\n  totalQuestionsHandler = (val) => {\n    this.setState({\n      totalQuestions: val,\n    });\n  };\n\n  addToQueue = (body, quesData) => {\n    let submissionQueue = this.state.submissionQueue;\n    submissionQueue.push(body);\n\n    this.setState({\n      submissionQueue: submissionQueue,\n      currentQuestion: quesData.quesNo,\n    });\n\n    this.callSubmitApi();\n  };\n\n  callSubmitApi = () => {\n    let _this = this;\n    let submissionQueue = this.state.submissionQueue;\n\n    if (\n      submissionQueue.length > 0 &&\n      this.state.submissionInProgress == false\n    ) {\n      // console.log('insideeee call submit api')\n      this.setState({\n        submissionInProgress: true,\n      });\n      let body = submissionQueue.shift();\n      _this.setState({\n        submissionQueue: submissionQueue,\n      });\n      reTrial -= 1;\n      let formdata = body.formdata;\n      let payload = body.payload;\n\n      localStorage.setItem(\"questionId\", body.payload.questionId);\n      localStorage.setItem(\"questionStatus\", body.payload.questionStatus);\n      localStorage.setItem(\"type\", body.payload.type);\n      var ajax = new XMLHttpRequest();\n      ajax.timeout = 1000 * 60 * 10; // time in milliseconds\n      ajax.upload.addEventListener(\n        \"progress\",\n        function progressHandler(event) {\n          var percent = (event.loaded / event.total) * 100;\n          _this.props.UserAction.addsingleanswerProgress({ progress: percent });\n        },\n        false\n      );\n      ajax.addEventListener(\n        \"load\",\n        async function completeHandler(event) {\n          if (event.target.status == 200) {\n            _this.props.UserAction.addsingleanswerSuccess(\n              JSON.parse(event.target.responseText)\n            );\n          } else {\n            if (reTrial) {\n              let submissionQueue = _this.state.submissionQueue;\n              submissionQueue.unshift(body);\n              await _this.setState({\n                submissionQueue: submissionQueue,\n                submissionInProgress: false,\n                showDialog: true,\n              });\n              _this.callSubmitApi();\n            } else {\n              _this.props.UserAction.addsingleanswerError({\n                singleAnswerError: true,\n              });\n\n              setTimeout(() => {\n                _this.setState({\n                  showDialog: false,\n                });\n              }, 2000);\n            }\n          }\n\n          _this.setState({\n            progress: 0,\n          });\n          _this.callSubmitApi();\n        },\n        false\n      );\n\n      ajax.addEventListener(\n        \"error\",\n        async function errorHandler(event) {\n          if (reTrial) {\n            let submissionQueue = _this.state.submissionQueue;\n            submissionQueue.unshift(body);\n            await _this.setState({\n              submissionQueue: submissionQueue,\n              submissionInProgress: false,\n              showDialog: true,\n            });\n            _this.callSubmitApi();\n          } else {\n            _this.props.UserAction.addsingleanswerError({\n              singleAnswerError: true,\n            });\n            setTimeout(() => {\n              _this.setState({\n                showDialog: false,\n              });\n            }, 2000);\n          }\n\n          // store.addNotification({\n          //   title: \"Error\",\n          //   message: \"Error Occured!\",\n          //   type: \"danger\",\n          //   container: \"top-center\",\n          //   animationIn: [\"animated\", \"fadeIn\"],\n          //   animationOut: [\"animated\", \"fadeOut\"],\n          //   dismiss: {\n          //     duration: 2000,\n          //   },\n          // });\n        },\n        false\n      );\n      ajax.addEventListener(\n        \"abort\",\n        function abortHandler(event) {\n          // _(\"status\").innerHTML = \"Upload Aborted\";\n        },\n        false\n      );\n      ajax.open(\n        \"PATCH\",\n        `${serverAddress}/response/submission?responseId=${payload.responseId}&questionId=${payload.questionId}&questionStatus=${payload.questionStatus}&type=${payload.type}`\n      );\n      ajax.setRequestHeader(\"Authorization\", localStorage.getItem(\"tokenNew\"));\n      ajax.send(formdata);\n    } else {\n      this.setState({\n        submissionInProgress: false,\n      });\n    }\n  };\n\n  upload = async (formdata, payload, indexDbData, quesNo, questionType) => {\n    // console.log(\n    //   \"insideee upload\",\n    //   formdata,\n    //   payload,\n    //   indexDbData,\n    //   quesNo,\n    //   questionType\n    // );\n    console.log('insideee upload')\n\n    this.addToQueue(\n      {\n        formdata: formdata,\n        payload: payload,\n      },\n      { no: quesNo, type: questionType }\n    );\n\n    this.decreaseCountHandler(questionType);\n\n    let request = indexedDB.open(\"elephantFiles\", dbVersion);\n\n    request.onsuccess = function (event) {\n      let db = event.target.result;\n      let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\n      // console.log(indexDbData);\n      transaction\n        .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\n        .add(indexDbData);\n\n      db.onerror = function (event) {\n        console.log(\"Error creating/accessing IndexedDB database\");\n      };\n    };\n  };\n\n  static getDerivedStateFromProps(nextProps, currentState) {\n    if (\n      nextProps &&\n      nextProps.UserReducer &&\n      nextProps.UserReducer.singleAnswerProgress &&\n      !nextProps.UserReducer.isUserquestionDataAdded\n    ) {\n      currentState.progress = nextProps.UserReducer.singleAnswerProgress;\n    }\n\n    if (\n      nextProps &&\n      nextProps.UserReducer &&\n      nextProps.UserReducer.isUserquestionDataAdded &&\n      nextProps.UserReducer.singleAnswerData\n    ) {\n      console.log(\n        \"singleee answer data\",\n        nextProps.UserReducer.singleAnswerData\n      );\n      nextProps.UserReducer.isUserquestionDataAdded = false;\n      reTrial = 3;\n      currentState.showDialog = false;\n      nextProps.UserAction.addEvent({\n        responseId:\n          currentState &&\n          currentState.data &&\n          currentState.data.response &&\n          currentState.data.response.id,\n        event: {\n          type: \"api\",\n          level: 1,\n          metadata: {\n            detail: {\n              questionId: localStorage.getItem(\"questionId\"),\n              status: localStorage.getItem(\"questionStatus\"),\n              type: localStorage.getItem(\"type\"),\n            },\n            type: \"success\",\n            response: nextProps.UserReducer.singleAnswerData,\n          },\n          timestamp: new Date().toISOString(),\n        },\n      });\n      let request = indexedDB.open(\"elephantFiles\", 1);\n\n      request.onsuccess = function (event) {\n        let db = event.target.result;\n        let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\n        transaction\n          .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\n          .delete(`${localStorage.getItem(\"questionId\")}`);\n\n        db.onerror = function (event) {\n          console.log(\"Error creating/accessing IndexedDB database\");\n        };\n      };\n\n      let submittedQuestions = currentState.submittedQuestions;\n      submittedQuestions.push(currentState.currentQuestion);\n      currentState.submittedQuestions = submittedQuestions;\n      if (\n        currentState.submittedQuestions.length < currentState.totalQuestions\n      ) {\n        currentState.progress = 0;\n      }\n\n      // store.addNotification({\n      //   title: \"Success\",\n      //   message: `Question ${submittedQuestions.length} Submitted successfully`,\n      //   type: \"success\",\n      //   container: \"top-center\",\n      //   animationIn: [\"animated\", \"fadeIn\"],\n      //   animationOut: [\"animated\", \"fadeOut\"],\n      //   dismiss: {\n      //     duration: 2000,\n      //   },\n      // });\n      if (\n        currentState.submittedQuestions.length == currentState.totalQuestions\n      ) {\n        const payload = {\n          responseId:\n            currentState.data &&\n            currentState.data.response &&\n            currentState.data.response.id,\n          formdata: { status: \"FINISHED\" },\n        };\n        nextProps.UserAction.updateResponse(payload);\n        nextProps.UserAction.addEvent({\n          responseId:\n            currentState &&\n            currentState.data &&\n            currentState.data.response &&\n            currentState.data.response.id,\n          event: {\n            type: \"debug\",\n            level: 3,\n            metadata: {\n              Page: \"Congratulation\",\n            },\n            timestamp: new Date().toISOString(),\n          },\n        });\n        setTimeout(() => {\n          nextProps.history.push({\n            pathname: \"/congratulation\",\n          });\n        }, 200);\n      }\n    }\n\n    if (\n      nextProps &&\n      nextProps.UserReducer &&\n      nextProps.UserReducer.singleAnswerError\n    ) {\n      nextProps.UserReducer.singleAnswerError = false;\n      nextProps.UserAction.addEvent({\n        responseId:\n          currentState &&\n          currentState.data &&\n          currentState.data.response &&\n          currentState.data.response.id,\n        event: {\n          type: \"api\",\n          level: 1,\n          metadata: {\n            detail: {\n              questionId: localStorage.getItem(\"questionId\"),\n              status: localStorage.getItem(\"questionStatus\"),\n              type: localStorage.getItem(\"type\"),\n            },\n            type: \"error\",\n            response: nextProps.UserReducer.singleAnswerError,\n          },\n          timestamp: new Date().toISOString(),\n        },\n      });\n      setTimeout(() => {\n        nextProps.UserAction.addEvent({\n          responseId:\n            currentState &&\n            currentState.data &&\n            currentState.data.response &&\n            currentState.data.response.id,\n          event: {\n            type: \"debug\",\n            level: 3,\n            metadata: {\n              Page: \"Error Page\",\n            },\n            timestamp: new Date().toISOString(),\n          },\n        });\n        nextProps.history.push({\n          pathname: \"/error\",\n        });\n      }, 2000);\n    }\n\n    return currentState;\n  }\n  changeSequence = (type) => {\n    const { order } = this.state;\n    const id =\n      order && order.length > 0 && order.findIndex((el) => el === type);\n    if (id !== -1 || id !== order.length - 1)\n      setTimeout(() => {\n        this.setState({ sequenceOrder: order[id + 1] });\n      }, 2000);\n  };\n  decreaseCountHandler = (type) => {\n    type === \"verbal\"\n      ? this.setState({ totalVerbal: this.state.totalVerbal - 1 })\n      : type === \"coding\"\n      ? this.setState({ totalCoding: this.state.totalCoding - 1 })\n      : this.setState({ totalMcq: this.state.totalMcq - 1 });\n  };\n\n  render() {\n    // console.log('dataaaaa',this.state)\n    const {\n      sequenceOrder,\n      totalMcq,\n      totalVerbal,\n      totalCoding,\n      submitClicked,\n      totalQuestions,\n      submittedQuestions,\n      progress,\n      verbalNew,\n      mcqNew,\n      codingNew,\n      suggestedMcqDuration,\n      suggestedVerbalDuration,\n      suggestedCodingDuration,\n      order,\n    } = this.state;\n\n    return (\n      <div className=\"main-parent\">\n        <Dialog\n          className=\"warning-dialog-submit\"\n          open={this.state.showDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <div className=\"warning-dialog-main\">\n            <div className=\"unstable-image\">\n              <img src={warning} />\n            </div>\n            <div className=\"warning-dialog-heading\">\n              Failed to submit response, Being retried\n            </div>\n          </div>\n        </Dialog>\n\n        {submitClicked && totalMcq < 1 && totalVerbal < 1 && totalCoding < 1 ? (\n          <Submitting\n            progress={this.state.progress}\n            submittedQuestions={this.state.submittedQuestions}\n            totalQuestions={this.state.totalQuestions}\n          />\n        ) : verbalNew && sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\n          <VerbalSummary\n            totalCount={totalVerbal}\n            duration={suggestedVerbalDuration}\n            continue={() => this.setState({ verbalNew: false })}\n          />\n        ) : sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\n          <Interview\n            submitClickedHandler={() =>\n              totalMcq === 0 && totalCoding === 0\n                ? this.submitClickedHandler()\n                : this.changeSequence(\"verbal\")\n            }\n            addToQueue={this.addToQueue}\n            totalQuestionsHandler={this.totalQuestionsHandler}\n            callSubmitApi={this.callSubmitApi}\n            decreaseCountHandler={() => this.decreaseCountHandler(\"verbal\")}\n            data={this.state}\n            upload={this.upload}\n          />\n        ) : codingNew && sequenceOrder === \"coding\" && totalCoding > 0 ? (\n          <CodingSummary\n            totalCount={totalCoding}\n            duration={suggestedCodingDuration}\n            continue={() => this.setState({ codingNew: false })}\n          />\n        ) : sequenceOrder === \"coding\" && totalCoding > 0 ? (\n          <CodingInterview\n            submitClickedHandler={() =>\n              totalVerbal === 0 && totalMcq === 0\n                ? this.submitClickedHandler()\n                : this.changeSequence(\"coding\")\n            }\n            decreaseCountHandler={() => this.decreaseCountHandler(\"coding\")}\n            addToQueue={this.addToQueue}\n            totalQuestionsHandler={this.totalQuestionsHandler}\n            callSubmitApi={this.callSubmitApi}\n            data={this.state}\n            upload={this.upload}\n          />\n        ) : mcqNew && sequenceOrder === \"mcq\" && totalMcq > 0 ? (\n          <McqSummary\n            totalCount={totalMcq}\n            duration={suggestedMcqDuration}\n            continue={() => this.setState({ mcqNew: false })}\n          />\n        ) : sequenceOrder === \"mcq\" && totalMcq > 0 ? (\n          <McqInteview\n            submitClickedHandler={() =>\n              totalVerbal == 0 && totalCoding === 0\n                ? this.submitClickedHandler()\n                : this.changeSequence(\"mcq\")\n            }\n            decreaseCountHandler={() => this.decreaseCountHandler(\"mcq\")}\n            addToQueue={this.addToQueue}\n            totalQuestionsHandler={this.totalQuestionsHandler}\n            callSubmitApi={this.callSubmitApi}\n            data={this.state}\n            upload={this.upload}\n          />\n        ) : (\n          <div\n            style={{\n              padding: \"20px 0\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <CircularProgress style={{ color: \"#04724D\" }} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  UserReducer: state.UserReducer,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    UserAction: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Parent));\n","module.exports = __webpack_public_path__ + \"static/media/login_page_logo.d598eaad.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.d58f1327.svg\";","module.exports = __webpack_public_path__ + \"static/media/Submitting.a188991a.svg\";"],"sourceRoot":""}
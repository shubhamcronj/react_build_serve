{"version":3,"sources":["containers/Interview/ReadQuestion.js","containers/Interview/interview.js","containers/Interview/submitting.js","containers/Interview/mcqQuestions.js","utils/utility.js","containers/Interview/PreviewInstructionsVerbal.js","containers/Interview/PreviewInstructionsMCQ.js","containers/Interview/PreviewInstructionsCoding.js","containers/Interview/Parent.js","assets/images/login_page_logo.png","assets/images/warning.svg","assets/images/Submitting.svg"],"names":["ReadQuestion","props","remainingTimeHandler","remainingTime","state","this","responseId","type","question","payload","questionId","id","questionStatus","UserAction","updateResponse","className","durationTime","nextBtn","handleTimer","readQuestionTimerEnds","isPlaying","quesNo","QuestionText","Component","connect","UserReducer","dispatch","bindActionCreators","Actions","withRouter","verbalSkipableValue","parseInt","process","readQuestionTime","remainingGlobal","scheduleIdGlobal","candidateIdGlobal","timedate","activeStep","ScreenFileGlobal","ScreenFileNameGlobal","Interview","handleStart","clockRef","current","start","handleTimeUpdate","time","setState","handleNext","questiondata","a","retake","restartTimer","handleDownload","quesdata","map","item","push","getStepContent","showReadQuestion","retakesAvailable","totalRetakes","questionData","length","val","Questionstime","timerInput","Number","handleFinish","submitClicked","submitClickedHandler","handlePriorUpload","file","name","skipable","setTimeout","formdata","FormData","append","timeTaken","indexDbData","videoFile","videoFileName","screenFile","screenFileName","addEvent","event","level","metadata","timestamp","Date","toISOString","upload","faceNotDetected","handleStartCaptureClick","isSafari","test","navigator","userAgent","mediaRecorderRef","MediaRecorder","webcamRef","stream","mimeType","audioBitsPerSecond","videoBitsPerSecond","capturing","childRef","startCapture","addEventListener","handleDataAvailable","handleAbort","abortCapture","stop","recordedChunks","handleStopCaptureClick","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","style","href","window","revokeObjectURL","File","ScheduleId","CandidateId","filedata","videofilename","data","size","concat","showDialog","stopCapture","capture","imgSrc","getScreenshot","image","substring","screenShot","verifyScreenshot","base64","retakeHandler","showRetakeDialog","retakeClicked","handleEarlySubmit","handleTimerEnd","React","createRef","timer","audioNew","ques","audio","video","questions","isDataArrived","submittedQuestions","totalQuestions","submissionQueue","noOfRetakes","vid","response","candidateId","scheduleId","verbalQuestions","text","suggestedDuration","questionType","toLowerCase","getMicrophone","today","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","mediaDevices","getUserMedia","stepIndex","steparray","value","console","log","ScreenFileTemp","ScreenFileNameTemp","localStorage","setItem","JSON","stringify","xyz","parse","getItem","questiondata1","quesreadtime","steps","i","ref","onScreenAccess","onUserStop","onRecordStart","onRecordStop","onVideoFile","onAbort","open","aria-labelledby","aria-describedby","onClick","screen","width","class","height","margin","onTick","src","amplitude","disableBtn","display","fontSize","marginLeft","variant","justifyContent","marginRight","marginTop","nextProps","currentState","isScreenShotDataArrived","faces","Submitting","show","history","pushState","location","onpopstate","keepOnPage","onbeforeunload","removeEventListener","e","message","returnValue","submitting","color","padding","transform","progress","backgroundColor","borderRadius","textAlign","toFixed","mcqSkipableValue","durationGlobal","McqQuestions","changeOption","label","options","isMultiCheck","el","index","currentData","totalLength","McqData","option","disablebtn","chosenOption","isSkipped","find","details","mcqQuestions","multi","correct","timeOut","duration","dangerouslySetInnerHTML","__html","flexWrap","checked","onChange","disabled","secondsToHours","hours","Math","floor","min","sec","Instructions","count","totalTime","totalCount","responseIdresponseId","Page","Typography","alt","birballogo","Button","continue","PreviewInstructionsMCQ","CodingInstructions","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","request","IDBTransaction","webkitIDBTransaction","OIDBTransaction","msIDBTransaction","onsuccess","target","result","onerror","onupgradeneeded","createObjectStore","keyPath","reTrial","Parent","submissionInProgress","currentQuestion","totalMcq","totalVerbal","totalCoding","sequenceOrder","verbalNew","mcqNew","codingNew","suggestedVerbalDuration","suggestedCodingDuration","order","totalQuestionsHandler","addToQueue","quesData","callSubmitApi","_this","shift","ajax","XMLHttpRequest","timeout","percent","loaded","total","addsingleanswerProgress","status","addsingleanswerSuccess","responseText","unshift","addsingleanswerError","singleAnswerError","serverAddress","setRequestHeader","send","no","decreaseCountHandler","db","transaction","objectStore","add","changeSequence","findIndex","ReactGA","pageview","pathname","stateData","newResponse","verbalCount","mcqCount","codingCount","verbalDuration","codingDuration","mcqDuration","codingQuestions","suggestedMcqDuration","Dialog","warning","CircularProgress","singleAnswerProgress","isUserquestionDataAdded","singleAnswerData","detail","delete","module","exports"],"mappings":"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","file":"static/js/6.4efd7a25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './readQuestion.scss';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TimerComponent } from './timerComponent';\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport class ReadQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n       if(this.props && this.props.responseId && this.props.type && this.props.question){\r\n        const payload={\r\n            questionId:this.props.question.id,\r\n            responseId:this.props.responseId,\r\n            type:this.props.type,\r\n            questionStatus:2\r\n\r\n        }\r\n           this.props.UserAction.updateResponse(payload)\r\n       }\r\n    };\r\n\r\n    remainingTimeHandler=(remainingTime)=>{\r\n       return remainingTime;\r\n      }\r\n\r\n    render() {\r\n        // console.log(this.props.question,this.props.quesNo)\r\n        return (\r\n            <div className=\"read-question-main\">\r\n                <div className=\"read-question-heading\">\r\n                    Live Interview\r\n                </div>\r\n                <div className=\"read-question-body\">\r\n                    <div className=\"read-question-timer\">\r\n                        <TimerComponent durationTime={this.props.durationTime}\r\n                            className=\"timer-new\"\r\n                            nextBtn={true}\r\n                            handleTimer={this.props.readQuestionTimerEnds}\r\n                            remainingTimeHandler={this.remainingTimeHandler}\r\n                            isPlaying={true}\r\n                         \r\n                        />\r\n                    </div>\r\n                    <div className=\"read-question-time-left\">Time left to read the question</div>\r\n                    <div className=\"read-question-ques-div\">\r\n                    <div className=\"read-question-time-left\">Please Read Question / Prepare Answer</div>\r\n                    <div className=\"ques-wrapper\">\r\n                    <div className=\"question-number\">Q.{this.props.quesNo} </div>\r\n                    <div className=\"question-text-new\">{this.props.question.QuestionText} </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      UserReducer: state.UserReducer,\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n      UserAction: bindActionCreators(Actions, dispatch),\r\n    };\r\n  };\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(ReadQuestion));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../styles/interview.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ReadQuestion from \"./ReadQuestion\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet verbalSkipableValue = parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  : 10;\r\n\r\nlet readQuestionTime = parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  ? parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  : 10;\r\n\r\nlet remainingGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\nexport class Interview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      restartTimer: false,\r\n      audioNew: null,\r\n      ques: [],\r\n      capturing: false,\r\n      activeStep: 0,\r\n      audio: false,\r\n      video: false,\r\n      recordedChunks: [],\r\n      question: [],\r\n      questions: [],\r\n      videofilename: \"\",\r\n      isDataArrived: true,\r\n      questionData: [],\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      submittedQuestions: [],\r\n      totalQuestions: 0,\r\n      submissionQueue: [],\r\n      responseId: \"\",\r\n      noOfRetakes: 0,\r\n      showDialog: false,\r\n      showReadQuestion: false,\r\n      totalRetakes: 0,\r\n      retakesAvailable: 0,\r\n      retake: false,\r\n      showRetakeDialog: false,\r\n      remainingTime: 0,\r\n      isPlaying: true,\r\n      skipable: false,\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timerInput: 0,\r\n      time: \"\",\r\n      // ScreenFile:'',\r\n      // ScreenFileName:''\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // console.log(\"dataa\", this.props.data);\r\n    if (this.props && this.props.data) {\r\n      // console.log(this.props.history.location.state.response)\r\n      const { id, candidateId, scheduleId } =\r\n        this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response;\r\n      await this.setState({\r\n        responseId: id,\r\n        ScheduleId: scheduleId,\r\n        CandidateId: candidateId,\r\n      });\r\n\r\n      scheduleIdGlobal = scheduleId;\r\n      candidateIdGlobal = candidateId;\r\n      let questionData = [];\r\n      this.props.data &&\r\n        this.props.data.verbalQuestions &&\r\n        this.props.data.verbalQuestions.map((item) => {\r\n          questionData.push({\r\n            id: item.id,\r\n            QuestionText: item.text,\r\n            Questionstime: item.suggestedDuration,\r\n          });\r\n        });\r\n      this.setState({\r\n        questionData: questionData,\r\n        totalQuestions: questionData.length,\r\n        showReadQuestion: true,\r\n      });\r\n\r\n      let timerInput = 0;\r\n      if (questionData.length > 0) {\r\n        const val = questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n\r\n      this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response &&\r\n        this.props.data.data.response.questionType &&\r\n        this.props.data.data.response.questionType.length > 0 &&\r\n        this.props.data.data.response.questionType.map((item) => {\r\n          if (item.name.toLowerCase() == \"verbal\") {\r\n            if (item.retake) {\r\n              this.setState({\r\n                totalRetakes: item.retake,\r\n                retakesAvailable: item.retake - 1,\r\n              });\r\n            }\r\n            if (item.skipable && this.state.timerInput) {\r\n              let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n              setTimeout(() => {\r\n                this.setState({\r\n                  skipable: true,\r\n                });\r\n              }, time);\r\n            }\r\n          }\r\n        });\r\n    }\r\n    this.getMicrophone();\r\n\r\n    var today = new Date();\r\n    var date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n\r\n    var time =\r\n      today.getHours() + \"-\" + today.getMinutes() + \"-\" + today.getSeconds();\r\n\r\n    var dateTime = date + \"-\" + time;\r\n    this.setState({\r\n      timedate: dateTime,\r\n      // disble_next_button: true,\r\n    });\r\n    timedate = dateTime;\r\n  }\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    // console.log('Helloo',nextProps && nextProps.history && nextProps.history.location && nextProps.history.location.state &&  nextProps.history.location.state.response )\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isScreenShotDataArrived &&\r\n      nextProps.UserReducer.screenShot &&\r\n      nextProps.UserReducer.screenShot.data\r\n    ) {\r\n      nextProps.UserReducer.isScreenShotDataArrived = false;\r\n      if (!nextProps.UserReducer.screenShot.data.faces) {\r\n        currentState.faceNotDetected = currentState.faceNotDetected + 1;\r\n      }\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n\r\n  // isStepSkipped = (step) => {\r\n  //   return this.state.skipped.has(step);\r\n  // };\r\n\r\n  handleStart = () => {\r\n    this.clockRef.current.start();\r\n  };\r\n\r\n  handleTimeUpdate = (time, remainingTime) => {\r\n    if (this.state.time != time) {\r\n      this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  handleNext = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      await this.setState({ restartTimer: true, isPlaying: true });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n\r\n      this.getStepContent(questiondata, this.state.activeStep);\r\n\r\n      await this.setState({\r\n        activeStep: this.state.activeStep + 1,\r\n        showReadQuestion: true,\r\n        retakesAvailable: this.state.totalRetakes - 1,\r\n      });\r\n      activeStep = activeStep + 1;\r\n      let timerInput = 0;\r\n      if (this.state.questionData.length > 0) {\r\n        const val =\r\n          this.state.questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.activeStep];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}. {value}\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFinish = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      this.setState({\r\n        submitClicked: true,\r\n        // isPlaying: true,\r\n      });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n      const question = [];\r\n      question.push(this.getStepContent(this.state.activeStep));\r\n\r\n      this.props.submitClickedHandler();\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (this.state.skipable && this.state.timerInput) {\r\n      this.setState({\r\n        skipable: false,\r\n      });\r\n      let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          skipable: true,\r\n        });\r\n      }, time);\r\n    }\r\n\r\n    // console.log('name',name,ScreenFileNameGlobal)\r\n    var formdata = new FormData();\r\n    formdata.append(\"video\", file, name);\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    const payload = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n      // screenFile : ScreenFileGlobal,\r\n      // screenFileName : ScreenFileNameGlobal\r\n    };\r\n    let quesNo = this.state.activeStep + 1;\r\n    let questionType = \"verbal\";\r\n    let indexDbData = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: quesdata[this.state.activeStep],\r\n          responseId: this.state.responseId,\r\n          type: \"verbal\",\r\n          questionStatus: 3,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    });\r\n    // remainingGlobal = 0;\r\n    // clearInterval(Interval);\r\n\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n    // setTimeout(()=>{\r\n    //   this.childRef.current.startCapture()\r\n    // },1000)\r\n    // remainingGlobal = 0;\r\n\r\n    // clearInterval(Interval);\r\n    // Interval = setInterval(() => {\r\n    //   remainingGlobal += 1;\r\n    // }, 1000);\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAbort = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.childRef.current.abortCapture();\r\n      this.mediaRecorderRef.current.stop();\r\n      this.mediaRecorderRef.current.addEventListener(\"stop\", () => {\r\n        this.setState({\r\n          recordedChunks: [],\r\n        });\r\n      });\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n\r\n      this.handleStartCaptureClick();\r\n    }\r\n  };\r\n\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n\r\n    // console.log('Hellooo',this.state.recordedChunks.length ,ScreenFileGlobal ,ScreenFileNameGlobal)\r\n\r\n    //  let IntervalScreen = setInterval(() => {\r\n    if (this.state.recordedChunks.length) {\r\n      // console.log(\"insideee download condition\");\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`;\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`,\r\n        quesdata\r\n      );\r\n      // clearInterval(IntervalScreen)\r\n    }\r\n    // }, 1000);\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    if (data.size > 0) {\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      remainingGlobal = this.state.timerInput - this.state.remainingTime;\r\n\r\n      // setTimeout(()=>{\r\n      if (this.state.activeStep == this.state.questionData.length - 1) {\r\n        this.handleFinish(this.state.questionData);\r\n      } else {\r\n        this.handleNext(this.state.questionData);\r\n      }\r\n      // },2000)\r\n    }\r\n  };\r\n\r\n  handleTimer = async (questionData) => {\r\n    await this.setState({\r\n      restartTimer: false,\r\n      showDialog: false,\r\n      retake: false,\r\n      isPlaying: false,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick(questionData);\r\n    }, 2000);\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  capture = () => {\r\n    const imgSrc =\r\n      this.webcamRef &&\r\n      this.webcamRef.current &&\r\n      this.webcamRef.current.getScreenshot();\r\n    let image =\r\n      imgSrc && imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        ? imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        : null;\r\n    this.setState({\r\n      screenShot: image,\r\n    });\r\n\r\n    this.props.UserAction.verifyScreenshot({\r\n      base64: image,\r\n    });\r\n  };\r\n\r\n  readQuestionTimerEnds = () => {\r\n    this.setState({ showReadQuestion: false });\r\n  };\r\n\r\n  retakeHandler = async () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      await this.setState({\r\n        retakesAvailable: this.state.retakesAvailable - 1,\r\n        showRetakeDialog: false,\r\n        restartTimer: true,\r\n        retake: true,\r\n        showDialog: false,\r\n      });\r\n      const payload = {\r\n        questionId: this.state.questionData[this.state.activeStep].id,\r\n        responseId: this.state.responseId,\r\n        type: \"verbal\",\r\n        questionStatus: 2,\r\n      };\r\n      this.props.UserAction.updateResponse(payload);\r\n      this.handleAbort();\r\n      this.setState({\r\n        restartTimer: false,\r\n      });\r\n      if (\r\n        this.state.skipable &&\r\n        this.state.timerInput &&\r\n        !this.state.showReadQuestion\r\n      ) {\r\n        this.setState({\r\n          skipable: false,\r\n        });\r\n        let time = verbalSkipableValue * 1000;\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            skipable: true,\r\n          });\r\n        }, time);\r\n      }\r\n    }\r\n  };\r\n\r\n  retakeClicked = () => {\r\n    if (\r\n      !(\r\n        this.state.totalRetakes - this.state.retakesAvailable ===\r\n        this.state.totalRetakes\r\n      ) &&\r\n      this.state.totalRetakes - this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({ showRetakeDialog: true });\r\n    }\r\n  };\r\n\r\n  handleEarlySubmit = () => {\r\n    if (\r\n      this.state.skipable &&\r\n      this.state.retakesAvailable &&\r\n      this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else if (this.state.skipable) {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  handleTimerEnd = () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    console.log(blob);\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n\r\n  render() {\r\n    let questiondata = this.state.questionData;\r\n    localStorage.setItem(\"questiondata\", JSON.stringify(questiondata));\r\n    var xyz = JSON.parse(localStorage.getItem(\"questiondata\"));\r\n    let questiondata1 = [];\r\n    let quesreadtime = [];\r\n    xyz.map((item) => {\r\n      questiondata1.push(parseInt(item.Questionstime));\r\n      quesreadtime.push(10000);\r\n    });\r\n\r\n    // var n = questiondata1[this.state.act_num];\r\n    // var r = quesreadtime[this.state.act_num];\r\n\r\n    const steps = [];\r\n    for (let i = 1; i <= questiondata.length; i++) {\r\n      steps.push(i);\r\n    }\r\n\r\n    // const videoConstraints = {\r\n    //   facingMode: { exact: \"user\" },\r\n    // };\r\n\r\n    return (\r\n      <div>\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        {localStorage.getItem(\"login\") && localStorage.getItem(\"preview\") ? (\r\n          this.state.showReadQuestion ? (\r\n            <ReadQuestion\r\n              durationTime={readQuestionTime}\r\n              question={this.state.questionData[this.state.activeStep]}\r\n              quesNo={this.state.activeStep + 1}\r\n              responseId={this.state.responseId}\r\n              type='verbal'\r\n              readQuestionTimerEnds={this.readQuestionTimerEnds}\r\n            />\r\n          ) : (\r\n            <div className='interview-main-div'>\r\n              <Dialog\r\n                className='first-dialog-submit'\r\n                open={this.state.showDialog}\r\n                // onClose={() => {\r\n                //   this.setState({\r\n                //     showDialog: false,\r\n                //   });\r\n                // }}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n              >\r\n                <div className='main-dialog-heading'>\r\n                  Do you want to retake or submit?\r\n                </div>\r\n                <div className='main-dialog-sub-heading'>\r\n                  You have {this.state.retakesAvailable} retakes left.\r\n                </div>\r\n                <div className='main-dialog-buttons-wrapper'>\r\n                  <div\r\n                    className='dialog-retry-button'\r\n                    onClick={this.retakeHandler}\r\n                  >\r\n                    Retake\r\n                  </div>\r\n                  <div\r\n                    className='dialog-submit-button'\r\n                    onClick={this.handleTimer}\r\n                  >\r\n                    Submit\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n\r\n              {this.state.retakesAvailable &&\r\n              this.state.retakesAvailable > 0 ? (\r\n                <Dialog\r\n                  className='first-dialog-submit'\r\n                  open={this.state.showRetakeDialog}\r\n                  aria-labelledby='alert-dialog-title'\r\n                  aria-describedby='alert-dialog-description'\r\n                >\r\n                  <div className='main-dialog-heading'>\r\n                    Are you sure you want to retake?\r\n                  </div>\r\n                  <div className='main-dialog-sub-heading'>\r\n                    You have {this.state.retakesAvailable} retakes left.\r\n                  </div>\r\n                  <div className='main-dialog-buttons-wrapper'>\r\n                    <div\r\n                      className='dialog-retry-button'\r\n                      onClick={() => {\r\n                        this.setState({ showRetakeDialog: false });\r\n                      }}\r\n                    >\r\n                      No\r\n                    </div>\r\n                    <div\r\n                      className='dialog-submit-button'\r\n                      onClick={this.retakeHandler}\r\n                    >\r\n                      Yes\r\n                    </div>\r\n                  </div>\r\n                </Dialog>\r\n              ) : null}\r\n              <div className='interview-row-wrapper'>\r\n                <div className='Inter-1'>\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-heading'>\r\n                      <Typography>Live Interview</Typography>\r\n                    </div>\r\n                  ) : null}\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-subHeading1'>\r\n                      {/* <Typography>Please don't try to refer anything from any other means.</Typography> */}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className='inter-2 total-questions'>\r\n                  <div>\r\n                    <div className='questions-wrapper'>\r\n                      <div className='total'> Total Questions</div>\r\n                      <div className='circle-interview'>\r\n                        {this.state.activeStep + 1}/{questiondata.length}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class='fluid-container'>\r\n                <div className='interview-row-wrapper-new'>\r\n                  <div className='left-interview'>\r\n                    <div className='video-div'>\r\n                      <div className='interview-video-new'>\r\n                        <WebcamComponent\r\n                          handleStartCaptureClick={this.handleStartCaptureClick}\r\n                          handleAbort={this.handleAbort}\r\n                          handleDataAvailable={this.handleDataAvailable}\r\n                          handleStopCaptureClick={this.handleStopCaptureClick}\r\n                          capturing={this.state.capturing}\r\n                          webcamRef={this.webcamRef}\r\n                          recordedChunks={this.state.recordedChunks}\r\n                          handleDownload={this.handleDownload}\r\n                        />\r\n\r\n                        <div className='bottom-video-div'>\r\n                          <div className='retake-button-div'>\r\n                            <div\r\n                              className={\r\n                                !this.state.totalRetakes ||\r\n                                this.state.totalRetakes -\r\n                                  this.state.retakesAvailable ==\r\n                                  this.state.totalRetakes\r\n                                  ? \"retake-disabled-button\"\r\n                                  : \"retake-button\"\r\n                              }\r\n                              onClick={this.retakeClicked}\r\n                            >\r\n                              <span>\r\n                                <ReplayIcon\r\n                                  style={{\r\n                                    height: \"20px\",\r\n                                    width: \"20px\",\r\n                                    margin: \"0 5px\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                              Retake{\" \"}\r\n                              {this.state.totalRetakes ? (\r\n                                <span>\r\n                                  {\" \"}\r\n                                  {this.state.totalRetakes -\r\n                                    this.state.retakesAvailable}{\" \"}\r\n                                  / {this.state.totalRetakes}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className='timer-button-div'>\r\n                            <div className='timer-button'>\r\n                              <TimerComponent\r\n                                // nextBtn={this.state.disble_next_button}\r\n                                durationTime={this.state.timerInput}\r\n                                // disableBtn={this.state.restartTimer}\r\n                                // remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  // this.handleTimer(questiondata)\r\n                                  console.log(\"handle\");\r\n                                }}\r\n                                isPlaying={true}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                              {this.state.time}\r\n                            </div>\r\n                          </div>\r\n                          <div className='audio-analyser-div'>\r\n                            <div className='audio-img'>\r\n                              {\" \"}\r\n                              <img src={audio} />{\" \"}\r\n                            </div>\r\n                            {this.state.audioNew ? (\r\n                              <div>\r\n                                {\" \"}\r\n                                <AudioAnalyser\r\n                                  amplitude={() => null}\r\n                                  audio={this.state.audioNew}\r\n                                />{\" \"}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                          <div className='submit-button-div'>\r\n                            <div\r\n                              className={\r\n                                this.state.skipable\r\n                                  ? \"submit-button\"\r\n                                  : \"submit-button-disabled\"\r\n                              }\r\n                              onClick={this.handleEarlySubmit}\r\n                            >\r\n                              Submit\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='total-questions-new'>\r\n                          <div>\r\n                            <div className='questions-wrapper'>\r\n                              <div className='total'>Total Questions</div>\r\n                              <div className='circle-interview'>\r\n                                {this.state.activeStep + 1}/\r\n                                {questiondata.length}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {this.state.timerInput !== 0 &&\r\n                            window.screen.width <= 1024 && (\r\n                              <TimerComponent\r\n                                durationTime={this.state.timerInput}\r\n                                disableBtn={this.state.restartTimer}\r\n                                remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  this.handleTimerEnd();\r\n                                }}\r\n                                isPlaying={this.state.isPlaying}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='right-interview'>\r\n                    <div className='question-div'>\r\n                      {this.state.timerInput !== 0 &&\r\n                        window.screen.width > 1024 && (\r\n                          <TimerComponent\r\n                            // nextBtn={this.state.disble_next_button}\r\n                            durationTime={this.state.timerInput}\r\n                            remainingTimeHandler={this.remainingTimeHandler}\r\n                            disableBtn={this.state.restartTimer}\r\n                            handleTimer={() => {\r\n                              this.handleTimerEnd();\r\n                            }}\r\n                            isPlaying={this.state.isPlaying}\r\n                            className='timer-1'\r\n                          />\r\n                        )}\r\n\r\n                      <div className='content-div'>\r\n                        <div className='qustion-content-div'>\r\n                          {this.state.activeStep === steps.length ? (\r\n                            <div></div>\r\n                          ) : (\r\n                            <div>\r\n                              <span\r\n                                className='laptop-only'\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  fontSize: \"12px\",\r\n                                  marginLeft: \"20px\",\r\n                                }}\r\n                              >\r\n                                Read your question\r\n                              </span>\r\n                              <div className='question'>\r\n                                <div>\r\n                                  {this.getStepContent(\r\n                                    questiondata,\r\n                                    this.state.activeStep\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className='buttons-wrapper'>\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className={\r\n                              this.state.skipable\r\n                                ? \"Button-next\"\r\n                                : \"Button-next-disabled\"\r\n                            }\r\n                            onClick={this.handleEarlySubmit}\r\n                          >\r\n                            <span>Next Question</span>\r\n                            <span>\r\n                              <ArrowForwardIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className='Button-retry'\r\n                            onClick={this.retakeClicked}\r\n                          >\r\n                            <span>Retake</span>\r\n                            <span>\r\n                              <ReplayIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"end\",\r\n                  marginRight: \"30px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n                className='interview-logo'\r\n              >\r\n                {/* <img style={{maxWidth:'100px'}} src={birballogo}></img> */}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div>Access Blocked</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // CandidateReducer: state.CandidateReducer\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // candidateActions: bindActionCreators(Actions, dispatch),\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Interview));\r\n","import React, { Component } from \"react\";\r\nimport './submitting.scss';\r\nimport { connect } from \"react-redux\";\r\nimport submitting from '../../assets/images/Submitting.svg';\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nexport class Submitting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\nshow:false\r\n    \r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n    \r\n    window.addEventListener('beforeunload', this.keepOnPage);\r\n\r\nsetTimeout(()=>{\r\nthis.setState({\r\n  show:true\r\n})\r\n},1000)\r\n\r\n  }\r\n\r\n\r\n  componentDidUnmount() {\r\n    window.onbeforeunload = null;\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.keepOnPage);\r\n  }\r\n  \r\n  keepOnPage(e) {\r\n    var message = 'Warning!\\n\\nNavigating away from this page will clear your response.';\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n   console.log('insideee submitting')\r\n    return (\r\n    <div className=\"submitting-main\">\r\n         <div className=\"submitting-gif\">\r\n        <img src={submitting}  />\r\n        </div>\r\n        <div className=\"submitting-text\">\r\n         \r\n          Submitting <span style={{color:'#04724d'}}> {\r\n        this.props.submittedQuestions && this.props.totalQuestions && this.props.submittedQuestions.length==this.props.totalQuestions ? this.props.totalQuestions : this.props.submittedQuestions.length+1\r\n          }</span> of {this.props.totalQuestions}, Please Wait...\r\n\r\n      <div style={{padding:'20px', transform:'rotate(180deg)'}}>\r\n    {\r\n      this.props.progress && this.props.progress>0  && this.state.show?   <LinearProgress\r\n      className=\"linearProgressInternetLanding\"\r\n      variant=\"determinate\"\r\n      value={this.props.progress}\r\n      style={{\r\n          backgroundColor: '#fff',\r\n          borderRadius: '15px',\r\n          height: '5px',\r\n      }}\r\n  /> : null\r\n    }\r\n                                               \r\n      </div>\r\n     {\r\n       this.state.show ?  <div style={{ fontSize:'13px',textAlign:'center' }}>Uploading {this.props.progress && this.props.progress.toFixed(1)}%...</div> : null\r\n     }\r\n             \r\n        </div>\r\n\r\n     \r\n\r\n                                    \r\n                                           \r\n        \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      UserReducer: state.UserReducer,\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      UserAction: bindActionCreators(Actions, dispatch),\r\n    };\r\n  };\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withRouter(Submitting));\r\n","import React, { Component } from \"react\";\r\nimport \"./mcqQuestions.scss\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet mcqSkipableValue = parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  : 5;\r\n\r\nlet remainingGlobal = 0,\r\n  durationGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\nclass McqQuestions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      capturing: false,\r\n      recordedChunks: [],\r\n      videofilename: \"\",\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      responseId: \"\",\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timedate: new Date().toISOString(),\r\n      remainingTime: 0,\r\n      McqData: [],\r\n      totalLength: 0,\r\n      current: 0,\r\n      currentData: null,\r\n      options: null,\r\n      disablebtn: true,\r\n      restartTimer: false,\r\n      isPlaying: true,\r\n      audio: false,\r\n      audioNew: null,\r\n      isMultiCheck: false,\r\n      isSkipped: 0,\r\n      time: \"\",\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    timedate = this.state.timedate;\r\n    const { questionType, id, candidateId, scheduleId } =\r\n      this.props &&\r\n      this.props.data &&\r\n      this.props.data.data &&\r\n      this.props.data.data.response;\r\n    const isSkipped =\r\n      questionType &&\r\n      questionType.length > 0 &&\r\n      questionType.find((el) => el.name && el.name.toLowerCase() === \"mcq\");\r\n    const details = this.props && this.props.data;\r\n    const data = details && details.mcqQuestions;\r\n    const responseId = id;\r\n    let multi = 0;\r\n    let options =\r\n      data &&\r\n      data[0] &&\r\n      data[0].metadata &&\r\n      data[0].metadata.option &&\r\n      data[0].metadata.option.length > 0 &&\r\n      data[0].metadata.option.map((el) => {\r\n        multi = el.correct ? multi + 1 : multi;\r\n        return { label: el.text, value: false };\r\n      });\r\n\r\n    this.setState({\r\n      McqData: data,\r\n      totalLength: data.length,\r\n      current: 1,\r\n      currentData: data[0],\r\n      options: options,\r\n      responseId: responseId,\r\n      isMultiCheck: multi > 1 ? true : false,\r\n      isSkipped: isSkipped && isSkipped.skipable ? isSkipped.skipable : 0,\r\n      ScheduleId: scheduleId,\r\n      CandidateId: candidateId,\r\n    });\r\n    activeStep = 1;\r\n    scheduleIdGlobal = scheduleId;\r\n    candidateIdGlobal = candidateId;\r\n    let timeOut = isSkipped && isSkipped.skipable ? isSkipped.skipable : 0;\r\n    timeOut = timeOut ? mcqSkipableValue * 1000 : 0;\r\n    timeOut &&\r\n      setTimeout(() => {\r\n        this.setState({ disablebtn: false });\r\n      }, timeOut);\r\n    this.getMicrophone();\r\n  }\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n\r\n  changeOption = (e, label) => {\r\n    let { options, isMultiCheck } = this.state;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el, index) => {\r\n        if (isMultiCheck) {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          }\r\n        } else {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          } else {\r\n            options[index].value = false;\r\n          }\r\n        }\r\n      });\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 2,\r\n    };\r\n    this.props.UserAction.updateResponse(payload);\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    if (data.size > 0) {\r\n      remainingGlobal = durationGlobal - this.state.remainingTime;\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      // setTimeout(()=>{\r\n      if (this.state.current === this.state.totalLength) {\r\n        this.handleFinish(this.state.McqData);\r\n      } else {\r\n        this.handleNext(this.state.McqData);\r\n      }\r\n      // },2000)\r\n    }\r\n  };\r\n  handleFinish = async (questiondata) => {\r\n    this.setState({\r\n      submitClicked: true,\r\n    });\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    const question = [];\r\n    question.push(this.getStepContent(this.state.current));\r\n\r\n    this.props.submitClickedHandler();\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.current];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}. {value}\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n  handleNext = async (questiondata) => {\r\n    await this.setState({\r\n      restartTimer: true,\r\n      isPlaying: true,\r\n      // remainingTime: remainingGlobal,\r\n    });\r\n\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    this.handleStartCaptureClick();\r\n    this.getStepContent(questiondata, this.state.current);\r\n    const { totalLength, current, McqData } = this.state;\r\n\r\n    if (current < totalLength && McqData && McqData[current]) {\r\n      let options =\r\n        McqData[current].metadata &&\r\n        McqData[current].metadata.option &&\r\n        McqData[current].metadata.option.length > 0 &&\r\n        McqData[current].metadata.option.map((el) => ({\r\n          label: el.text,\r\n          value: false,\r\n        }));\r\n      this.setState({\r\n        current: current + 1,\r\n        currentData: McqData[current],\r\n        options: options,\r\n        disablebtn: true,\r\n      });\r\n\r\n      activeStep = current + 1;\r\n    }\r\n  };\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    if (this.state.recordedChunks.length) {\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`;\r\n\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`,\r\n        quesdata\r\n      );\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (!this.state.disablebtn) {\r\n      this.setState({\r\n        disablebtn: true,\r\n      });\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    } else {\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    }\r\n    const { options } = this.state;\r\n    let chosenOption = \"No option Selected\";\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el) => {\r\n        if (el.value) {\r\n          chosenOption = el.label;\r\n        }\r\n      });\r\n    var formdata = new FormData();\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"video\", file, name);\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    formdata.append(\"chosenOption\", chosenOption);\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n    };\r\n    let quesNo = this.state.current;\r\n    let questionType = \"mcq\";\r\n    let indexDbData = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: this.state.currentData.id,\r\n          responseId: this.state.responseId,\r\n          type: \"mcq\",\r\n          questionStatus: 3,\r\n          chosenOption: chosenOption,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    });\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleTimer = async () => {\r\n    // clearInterval(Interval);\r\n    await this.setState({\r\n      restartTimer: false,\r\n      isPlaying: false,\r\n      disablebtn: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick();\r\n    }, 2000);\r\n\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    console.log(blob);\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n  handleTimeUpdate = (time, remainingTime) => {\r\n    if (this.state.time != time) {\r\n      this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  render() {\r\n    // console.log(process.env)\r\n    const {\r\n      disablebtn,\r\n      current,\r\n      currentData,\r\n      options,\r\n      restartTimer,\r\n      isPlaying,\r\n    } = this.state;\r\n\r\n    const duration =\r\n      currentData && currentData.suggestedDuration\r\n        ? currentData.suggestedDuration\r\n        : 0;\r\n    durationGlobal = duration;\r\n    let width = 10;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((item) => {\r\n        if (item.label.length * 14 > width) {\r\n          width = item.label.length * 14 + 60;\r\n        }\r\n      });\r\n\r\n    return (\r\n      <div className='InterViewMcqMain'>\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        <div className='McqHeadingMain'>Live Interview</div>\r\n\r\n        <div className='McqQuestionArea'>\r\n          <div className='QuestionNumber'>Q.{current}</div>\r\n          <div className='QuestionArea'>\r\n            <div\r\n              className='QuestionText'\r\n              dangerouslySetInnerHTML={{\r\n                __html: currentData && currentData.text,\r\n              }}\r\n            ></div>\r\n            <div\r\n              className='QuestionOptions'\r\n              style={{\r\n                display: width > 360 ? \"flex\" : \"block\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {options &&\r\n                options.length > 0 &&\r\n                options.map((item) => (\r\n                  <div\r\n                    className='OptionArea'\r\n                    style={{\r\n                      width: width < 360 ? `${width}px` : \"360px\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      className='checkbox'\r\n                      checked={item.value}\r\n                      onChange={(e) => this.changeOption(e, item.label)}\r\n                      label={item.label}\r\n                    />\r\n                    <span className='textLabel'>{item.label}</span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className='VideoArea'>\r\n            <div className='Timer'>\r\n              {duration ? (\r\n                <TimerComponent\r\n                  durationTime={duration}\r\n                  className='timer-new'\r\n                  isPlaying={isPlaying}\r\n                  disableBtn={restartTimer}\r\n                  nextBtn={true}\r\n                  //   handleTimer={() => null}\r\n                  handleTimer={this.handleTimer}\r\n                  remainingTimeHandler={this.remainingTimeHandler}\r\n                  onTick={(time, remainingTime) => {\r\n                    this.handleTimeUpdate(time, remainingTime);\r\n                  }}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className='VideoRecord'>\r\n              {\" \"}\r\n              <WebcamComponent\r\n                handleStartCaptureClick={this.handleStartCaptureClick}\r\n                // handleAbort={this.handleAbort}\r\n                handleDataAvailable={this.handleDataAvailable}\r\n                handleStopCaptureClick={this.handleStopCaptureClick}\r\n                capturing={this.state.capturing}\r\n                webcamRef={this.webcamRef}\r\n                recordedChunks={this.state.recordedChunks}\r\n                handleDownload={this.handleDownload}\r\n              />\r\n              <div className='audioDiv'>\r\n                <div className='audio-img'>\r\n                  <img src={audio} />{\" \"}\r\n                </div>\r\n                {this.state.audioNew ? (\r\n                  <div className='audio-analyser'>\r\n                    <AudioAnalyser\r\n                      amplitude={() => null}\r\n                      audio={this.state.audioNew}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className='NextBtn'>\r\n              <Button\r\n                disabled={disablebtn}\r\n                variant='contained'\r\n                className={`Button-next ${disablebtn ? \"disabled\" : \"normal\"}`}\r\n                onClick={this.handleTimer}\r\n              >\r\n                <span>Next Question</span>\r\n                <span>\r\n                  <ArrowForwardIcon style={{ height: \"15px\", width: \"15px\" }} />\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqQuestions);\r\n","export function secondsToMinutes(time){\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return min+':'+sec;\r\n}\r\n\r\n\r\nexport function secondsToHours(time){\r\n    let hours = Math.floor(time / 3600);\r\ntime %= 3600;\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(hours<10 && hours!=0){\r\n        hours=`0${hours}`\r\n    }\r\n    if(hours==0){\r\n        hours=`00`\r\n    }\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return hours+':'+min+':'+sec;\r\n}\r\n\r\n\r\n// export const verbalSkipableValue=10;\r\n\r\n// export const mcqSkipableValue=5;","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Instructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Verbal\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructions);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class PreviewInstructionsMCQ extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n    // }\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : MCQ\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PreviewInstructionsMCQ);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class CodingInstructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Coding Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Coding\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodingInstructions);\r\n","import React from \"react\";\r\nimport { Interview } from \"../../utils/LazyLoaded\";\r\nimport interview from \"./interview\";\r\nimport Submitting from \"./submitting\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"react-notifications-component\";\r\nimport serverAddress from \"../../config\";\r\nimport ReactGA from \"react-ga\";\r\nimport McqInteview from \"./mcqQuestions\";\r\nimport VerbalSummary from \"./PreviewInstructionsVerbal\";\r\nimport McqSummary from \"./PreviewInstructionsMCQ\";\r\nimport CodingSummary from \"./PreviewInstructionsCoding\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport warning from \"../../assets/images/warning.svg\";\r\nimport \"./parent.scss\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CodingInterview from \"./CodeEditor\";\r\n\r\nlet indexedDB =\r\n    window.indexedDB ||\r\n    window.webkitIndexedDB ||\r\n    window.mozIndexedDB ||\r\n    window.OIndexedDB ||\r\n    window.msIndexedDB,\r\n  IDBTransaction =\r\n    window.IDBTransaction ||\r\n    window.webkitIDBTransaction ||\r\n    window.OIDBTransaction ||\r\n    window.msIDBTransaction,\r\n  dbVersion = 2;\r\n\r\nlet request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\nrequest.onsuccess = function (event) {\r\n  let db = event.target.result;\r\n\r\n  db.onerror = function (event) {\r\n    console.log(\"Error creating/accessing IndexedDB database\");\r\n  };\r\n};\r\nrequest.onupgradeneeded = function (event) {\r\n  let db = event.target.result;\r\n  let objectStore = db.createObjectStore(\"videoAnswers\", {\r\n    keyPath: \"questionId\",\r\n  });\r\n};\r\n\r\nlet reTrial = 3;\r\nclass Parent extends React.Component {\r\n  state = {\r\n    submitClicked: false,\r\n    submittedQuestions: [],\r\n    totalQuestions: 0,\r\n    progress: 0,\r\n    submissionInProgress: false,\r\n    submissionQueue: [],\r\n    currentQuestion: \"\",\r\n    data: null,\r\n    totalMcq: 0,\r\n    totalVerbal: 0,\r\n    totalCoding: 0,\r\n    mcqQuestions: [],\r\n    sequenceOrder: \"\",\r\n    verbalQuestions: [],\r\n    verbalNew: false,\r\n    mcqNew: false,\r\n    codingNew: false,\r\n    suggestedVerbalDuration: 0,\r\n    suggestedCodingDuration: 0,\r\n    showDialog: false,\r\n    order: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n      window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\r\n    ReactGA.pageview(window.location.pathname);\r\n    const stateData =\r\n      this.props.history &&\r\n      this.props.history.location &&\r\n      this.props.history.location.state;\r\n    const totalMcq = stateData && stateData.totalMcq;\r\n    const totalVerbal = stateData && stateData.totalVerbal;\r\n    const totalCoding = stateData && stateData.totalCoding;\r\n    const newResponse =\r\n      stateData && stateData.data && stateData.data.newResponse;\r\n    let verbalCount = 0;\r\n    let mcqCount = 0;\r\n    let codingCount = 0;\r\n    let verbalDuration = 0,\r\n      codingDuration = 0,\r\n      mcqDuration = 0;\r\n    if (stateData) {\r\n      const { response } = stateData && stateData.data;\r\n      const { verbalQuestions, mcqQuestions, codingQuestions } = stateData;\r\n      verbalCount =\r\n        response && response.verbalQuestions && response.verbalQuestions.length;\r\n      mcqCount =\r\n        response && response.mcqQuestions && response.mcqQuestions.length;\r\n      codingCount =\r\n        response && response.codingQuestions && response.codingQuestions.length;\r\n      verbalQuestions &&\r\n        verbalQuestions.length > 0 &&\r\n        verbalQuestions.map((el) => {\r\n          verbalDuration += el.suggestedDuration;\r\n        });\r\n\r\n      mcqQuestions &&\r\n        mcqQuestions.length > 0 &&\r\n        mcqQuestions.map((el) => {\r\n          mcqDuration += el.suggestedDuration;\r\n        });\r\n      codingQuestions &&\r\n        codingQuestions.length > 0 &&\r\n        codingQuestions.map((el) => {\r\n          codingDuration += el.suggestedDuration;\r\n        });\r\n    }\r\n    this.setState({\r\n      ...stateData,\r\n      totalQuestions: totalMcq + totalVerbal + totalCoding,\r\n      verbalNew: newResponse\r\n        ? true\r\n        : verbalCount === totalVerbal\r\n        ? true\r\n        : false,\r\n      mcqNew: newResponse ? true : mcqCount === totalMcq ? true : false,\r\n      codingNew: newResponse\r\n        ? true\r\n        : codingCount === totalCoding\r\n        ? true\r\n        : false,\r\n      suggestedMcqDuration: mcqDuration,\r\n      suggestedVerbalDuration: verbalDuration,\r\n      suggestedCodingDuration: codingDuration,\r\n      order: stateData && stateData.order,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\r\n  }\r\n\r\n  keepOnPage(e) {\r\n    var message =\r\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  submitClickedHandler = () => {\r\n    this.setState({\r\n      submitClicked: true,\r\n      progress: 0,\r\n    });\r\n  };\r\n\r\n  totalQuestionsHandler = (val) => {\r\n    this.setState({\r\n      totalQuestions: val,\r\n    });\r\n  };\r\n\r\n  addToQueue = (body, quesData) => {\r\n    let submissionQueue = this.state.submissionQueue;\r\n    submissionQueue.push(body);\r\n\r\n    this.setState({\r\n      submissionQueue: submissionQueue,\r\n      currentQuestion: quesData.quesNo,\r\n    });\r\n\r\n    this.callSubmitApi();\r\n  };\r\n\r\n  callSubmitApi = () => {\r\n    let _this = this;\r\n    let submissionQueue = this.state.submissionQueue;\r\n\r\n    if (\r\n      submissionQueue.length > 0 &&\r\n      this.state.submissionInProgress == false\r\n    ) {\r\n      // console.log('insideeee call submit api')\r\n      this.setState({\r\n        submissionInProgress: true,\r\n      });\r\n      let body = submissionQueue.shift();\r\n      _this.setState({\r\n        submissionQueue: submissionQueue,\r\n      });\r\n      reTrial -= 1;\r\n      let formdata = body.formdata;\r\n      let payload = body.payload;\r\n\r\n      localStorage.setItem(\"questionId\", body.payload.questionId);\r\n      localStorage.setItem(\"questionStatus\", body.payload.questionStatus);\r\n      localStorage.setItem(\"type\", body.payload.type);\r\n      var ajax = new XMLHttpRequest();\r\n      ajax.timeout = 1000 * 60 * 10; // time in milliseconds\r\n      ajax.upload.addEventListener(\r\n        \"progress\",\r\n        function progressHandler(event) {\r\n          var percent = (event.loaded / event.total) * 100;\r\n          _this.props.UserAction.addsingleanswerProgress({ progress: percent });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"load\",\r\n        async function completeHandler(event) {\r\n          if (event.target.status == 200) {\r\n            _this.props.UserAction.addsingleanswerSuccess(\r\n              JSON.parse(event.target.responseText)\r\n            );\r\n          } else {\r\n            if (reTrial) {\r\n              let submissionQueue = _this.state.submissionQueue;\r\n              submissionQueue.unshift(body);\r\n              await _this.setState({\r\n                submissionQueue: submissionQueue,\r\n                submissionInProgress: false,\r\n                showDialog: true,\r\n              });\r\n              _this.callSubmitApi();\r\n            } else {\r\n              _this.props.UserAction.addsingleanswerError({\r\n                singleAnswerError: true,\r\n              });\r\n\r\n              setTimeout(() => {\r\n                _this.setState({\r\n                  showDialog: false,\r\n                });\r\n              }, 2000);\r\n            }\r\n          }\r\n\r\n          _this.setState({\r\n            progress: 0,\r\n          });\r\n          _this.callSubmitApi();\r\n        },\r\n        false\r\n      );\r\n\r\n      ajax.addEventListener(\r\n        \"error\",\r\n        async function errorHandler(event) {\r\n          if (reTrial) {\r\n            let submissionQueue = _this.state.submissionQueue;\r\n            submissionQueue.unshift(body);\r\n            await _this.setState({\r\n              submissionQueue: submissionQueue,\r\n              submissionInProgress: false,\r\n              showDialog: true,\r\n            });\r\n            _this.callSubmitApi();\r\n          } else {\r\n            _this.props.UserAction.addsingleanswerError({\r\n              singleAnswerError: true,\r\n            });\r\n            setTimeout(() => {\r\n              _this.setState({\r\n                showDialog: false,\r\n              });\r\n            }, 2000);\r\n          }\r\n\r\n          // store.addNotification({\r\n          //   title: \"Error\",\r\n          //   message: \"Error Occured!\",\r\n          //   type: \"danger\",\r\n          //   container: \"top-center\",\r\n          //   animationIn: [\"animated\", \"fadeIn\"],\r\n          //   animationOut: [\"animated\", \"fadeOut\"],\r\n          //   dismiss: {\r\n          //     duration: 2000,\r\n          //   },\r\n          // });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"abort\",\r\n        function abortHandler(event) {\r\n          // _(\"status\").innerHTML = \"Upload Aborted\";\r\n        },\r\n        false\r\n      );\r\n      ajax.open(\r\n        \"PATCH\",\r\n        `${serverAddress}/response/submission?responseId=${payload.responseId}&questionId=${payload.questionId}&questionStatus=${payload.questionStatus}&type=${payload.type}`\r\n      );\r\n      ajax.setRequestHeader(\"Authorization\", localStorage.getItem(\"tokenNew\"));\r\n      ajax.send(formdata);\r\n    } else {\r\n      this.setState({\r\n        submissionInProgress: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  upload = async (formdata, payload, indexDbData, quesNo, questionType) => {\r\n    // console.log(\r\n    //   \"insideee upload\",\r\n    //   formdata,\r\n    //   payload,\r\n    //   indexDbData,\r\n    //   quesNo,\r\n    //   questionType\r\n    // );\r\n    console.log(\"insideee upload\");\r\n\r\n    this.addToQueue(\r\n      {\r\n        formdata: formdata,\r\n        payload: payload,\r\n      },\r\n      { no: quesNo, type: questionType }\r\n    );\r\n\r\n    this.decreaseCountHandler(questionType);\r\n\r\n    let request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\n    request.onsuccess = function (event) {\r\n      let db = event.target.result;\r\n      let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n      // console.log(indexDbData);\r\n      transaction\r\n        .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n        .add(indexDbData);\r\n\r\n      db.onerror = function (event) {\r\n        console.log(\"Error creating/accessing IndexedDB database\");\r\n      };\r\n    };\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerProgress &&\r\n      !nextProps.UserReducer.isUserquestionDataAdded\r\n    ) {\r\n      currentState.progress = nextProps.UserReducer.singleAnswerProgress;\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isUserquestionDataAdded &&\r\n      nextProps.UserReducer.singleAnswerData\r\n    ) {\r\n      console.log(\r\n        \"singleee answer data\",\r\n        nextProps.UserReducer.singleAnswerData\r\n      );\r\n      nextProps.UserReducer.isUserquestionDataAdded = false;\r\n      reTrial = 3;\r\n      currentState.showDialog = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"success\",\r\n            response: nextProps.UserReducer.singleAnswerData,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      let request = indexedDB.open(\"elephantFiles\", 1);\r\n\r\n      request.onsuccess = function (event) {\r\n        let db = event.target.result;\r\n        let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n        transaction\r\n          .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n          .delete(`${localStorage.getItem(\"questionId\")}`);\r\n\r\n        db.onerror = function (event) {\r\n          console.log(\"Error creating/accessing IndexedDB database\");\r\n        };\r\n      };\r\n\r\n      let submittedQuestions = currentState.submittedQuestions;\r\n      submittedQuestions.push(currentState.currentQuestion);\r\n      currentState.submittedQuestions = submittedQuestions;\r\n      if (\r\n        currentState.submittedQuestions.length < currentState.totalQuestions\r\n      ) {\r\n        currentState.progress = 0;\r\n      }\r\n\r\n      // store.addNotification({\r\n      //   title: \"Success\",\r\n      //   message: `Question ${submittedQuestions.length} Submitted successfully`,\r\n      //   type: \"success\",\r\n      //   container: \"top-center\",\r\n      //   animationIn: [\"animated\", \"fadeIn\"],\r\n      //   animationOut: [\"animated\", \"fadeOut\"],\r\n      //   dismiss: {\r\n      //     duration: 2000,\r\n      //   },\r\n      // });\r\n      if (\r\n        currentState.submittedQuestions.length == currentState.totalQuestions\r\n      ) {\r\n        const payload = {\r\n          responseId:\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          formdata: { status: \"FINISHED\" },\r\n        };\r\n        nextProps.UserAction.updateResponse(payload);\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Congratulation\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          nextProps.history.push({\r\n            pathname: \"/congratulation\",\r\n          });\r\n        }, 200);\r\n      }\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerError\r\n    ) {\r\n      nextProps.UserReducer.singleAnswerError = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"error\",\r\n            response: nextProps.UserReducer.singleAnswerError,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      setTimeout(() => {\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Error Page\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        nextProps.history.push({\r\n          pathname: \"/error\",\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n  changeSequence = (type) => {\r\n    const { order } = this.state;\r\n    const id =\r\n      order && order.length > 0 && order.findIndex((el) => el === type);\r\n    if (id !== -1 || id !== order.length - 1)\r\n      setTimeout(() => {\r\n        this.setState({ sequenceOrder: order[id + 1] });\r\n      }, 2000);\r\n  };\r\n  decreaseCountHandler = (type) => {\r\n    type === \"verbal\"\r\n      ? this.setState({ totalVerbal: this.state.totalVerbal - 1 })\r\n      : type === \"coding\"\r\n      ? this.setState({ totalCoding: this.state.totalCoding - 1 })\r\n      : this.setState({ totalMcq: this.state.totalMcq - 1 });\r\n  };\r\n\r\n  render() {\r\n    // console.log('dataaaaa',this.state)\r\n    const {\r\n      sequenceOrder,\r\n      totalMcq,\r\n      totalVerbal,\r\n      totalCoding,\r\n      submitClicked,\r\n      totalQuestions,\r\n      submittedQuestions,\r\n      progress,\r\n      verbalNew,\r\n      mcqNew,\r\n      codingNew,\r\n      suggestedMcqDuration,\r\n      suggestedVerbalDuration,\r\n      suggestedCodingDuration,\r\n      order,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className='main-parent'>\r\n        <Dialog\r\n          className='warning-dialog-submit'\r\n          open={this.state.showDialog}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'\r\n        >\r\n          <div className='warning-dialog-main'>\r\n            <div className='unstable-image'>\r\n              <img src={warning} />\r\n            </div>\r\n            <div className='warning-dialog-heading'>\r\n              Failed to submit response, Being retried\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n\r\n        {submitClicked && totalMcq < 1 && totalVerbal < 1 && totalCoding < 1 ? (\r\n          <Submitting\r\n            progress={this.state.progress}\r\n            submittedQuestions={this.state.submittedQuestions}\r\n            totalQuestions={this.state.totalQuestions}\r\n          />\r\n        ) : verbalNew && sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <VerbalSummary\r\n            totalCount={totalVerbal}\r\n            duration={suggestedVerbalDuration}\r\n            continue={() => this.setState({ verbalNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <Interview\r\n            submitClickedHandler={() =>\r\n              totalMcq === 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"verbal\")\r\n            }\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"verbal\")}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : codingNew && sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingSummary\r\n            totalCount={totalCoding}\r\n            duration={suggestedCodingDuration}\r\n            continue={() => this.setState({ codingNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingInterview\r\n            submitClickedHandler={() =>\r\n              totalVerbal === 0 && totalMcq === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"coding\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"coding\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : mcqNew && sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqSummary\r\n            totalCount={totalMcq}\r\n            duration={suggestedMcqDuration}\r\n            continue={() => this.setState({ mcqNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqInteview\r\n            submitClickedHandler={() =>\r\n              totalVerbal == 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"mcq\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"mcq\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : (\r\n          <div\r\n            style={{\r\n              padding: \"20px 0\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress style={{ color: \"#04724D\" }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Parent));\r\n","module.exports = __webpack_public_path__ + \"static/media/login_page_logo.d598eaad.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.a736dff5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Submitting.baee2f23.svg\";"],"sourceRoot":""}
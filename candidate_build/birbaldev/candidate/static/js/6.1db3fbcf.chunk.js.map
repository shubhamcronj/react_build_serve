{"version":3,"sources":["containers/Interview/ReadQuestion.js","containers/Interview/interview.js","containers/Interview/submitting.js","containers/Interview/mcqQuestions.js","utils/utility.js","containers/Interview/PreviewInstructionsVerbal.js","containers/Interview/PreviewInstructionsMCQ.js","containers/Interview/PreviewInstructionsCoding.js","containers/Interview/Parent.js","assets/images/login_page_logo.png","assets/images/warning.svg","assets/images/Submitting.svg"],"names":["ReadQuestion","props","remainingTimeHandler","remainingTime","state","this","responseId","type","question","payload","questionId","id","questionStatus","UserAction","updateResponse","className","durationTime","nextBtn","handleTimer","readQuestionTimerEnds","isPlaying","quesNo","dangerouslySetInnerHTML","__html","QuestionText","Component","connect","UserReducer","dispatch","bindActionCreators","Actions","withRouter","verbalSkipableValue","parseInt","process","readQuestionTime","remainingGlobal","scheduleIdGlobal","candidateIdGlobal","timedate","activeStep","ScreenFileGlobal","ScreenFileNameGlobal","Interview","selectionOperation","events","data","level","metadata","timestamp","Date","toISOString","push","time","timerInput","setState","addEventProctoring","addEvent","event","handleStart","clockRef","current","start","handleTimeUpdate","handleNext","questiondata","a","retake","restartTimer","detail","handleDownload","quesdata","map","item","getStepContent","showReadQuestion","retakesAvailable","totalRetakes","questionData","length","val","Questionstime","Number","console","log","handleFinish","submitClicked","submitClickedHandler","handlePriorUpload","file","name","skipable","setTimeout","formdata","FormData","append","JSON","stringify","timeTaken","indexDbData","videoFile","videoFileName","screenFile","screenFileName","upload","faceNotDetected","handleStartCaptureClick","isSafari","test","navigator","userAgent","mediaRecorderRef","MediaRecorder","webcamRef","stream","mimeType","audioBitsPerSecond","videoBitsPerSecond","capturing","childRef","startCapture","addEventListener","handleDataAvailable","handleAbort","abortCapture","stop","recordedChunks","handleStopCaptureClick","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","style","href","window","revokeObjectURL","File","ScheduleId","CandidateId","filedata","videofilename","size","dataSize","concat","showDialog","stopCapture","capture","imgSrc","getScreenshot","image","substring","screenShot","verifyScreenshot","base64","retakeHandler","showRetakeDialog","retakeClicked","handleEarlySubmit","handleTimerEnd","React","createRef","timer","audioNew","ques","audio","video","questions","isDataArrived","submittedQuestions","totalQuestions","submissionQueue","noOfRetakes","skipableArrived","vid","response","candidateId","scheduleId","verbalQuestions","text","suggestedDuration","questionType","toLowerCase","e","preventDefault","location","pathname","includes","visibilityState","getMicrophone","today","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","mediaDevices","getUserMedia","stepIndex","steparray","value","ScreenFileTemp","ScreenFileNameTemp","localStorage","setItem","xyz","parse","getItem","questiondata1","quesreadtime","steps","i","onCopy","onCut","onPaste","ref","onScreenAccess","onUserStop","onRecordStart","onRecordStop","onVideoFile","onAbort","open","aria-labelledby","aria-describedby","onClick","screen","width","class","height","margin","onTick","src","amplitude","disableBtn","display","fontSize","marginLeft","variant","justifyContent","marginRight","marginTop","nextProps","currentState","isScreenShotDataArrived","faces","Submitting","show","history","pushState","onpopstate","keepOnPage","onbeforeunload","Page","removeEventListener","message","returnValue","submitting","color","padding","transform","progress","backgroundColor","borderRadius","textAlign","toFixed","mcqSkipableValue","durationGlobal","McqQuestions","changeOption","label","options","isMultiCheck","el","index","currentData","totalLength","McqData","option","disablebtn","chosenOption","isSkipped","find","details","mcqQuestions","multi","correct","timeOut","duration","flexWrap","checked","onChange","disabled","secondsToHours","hours","Math","floor","min","sec","Instructions","count","totalTime","totalCount","responseIdresponseId","Typography","alt","birballogo","Button","continue","PreviewInstructionsMCQ","CodingInstructions","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","request","IDBTransaction","webkitIDBTransaction","OIDBTransaction","msIDBTransaction","onsuccess","target","result","onerror","onupgradeneeded","createObjectStore","keyPath","reTrial","Parent","submissionInProgress","totalMcq","totalVerbal","totalCoding","sequenceOrder","verbalNew","mcqNew","codingNew","suggestedVerbalDuration","suggestedCodingDuration","order","totalQuestionsHandler","addToQueue","quesData","callSubmitApi","_this","shift","ajax","XMLHttpRequest","timeout","percent","loaded","total","addsingleanswerProgress","status","addsingleanswerSuccess","responseText","unshift","addsingleanswerError","singleAnswerError","serverAddress","setRequestHeader","send","no","decreaseCountHandler","db","transaction","objectStore","add","changeSequence","findIndex","ReactGA","pageview","stateData","newResponse","verbalCount","mcqCount","codingCount","verbalDuration","codingDuration","mcqDuration","codingQuestions","suggestedMcqDuration","Dialog","warning","CircularProgress","singleAnswerProgress","isUserquestionDataAdded","singleAnswerData","delete","isError","module","exports"],"mappings":"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","file":"static/js/6.1db3fbcf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./readQuestion.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport class ReadQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    if (\r\n      this.props &&\r\n      this.props.responseId &&\r\n      this.props.type &&\r\n      this.props.question\r\n    ) {\r\n      const payload = {\r\n        questionId: this.props.question.id,\r\n        responseId: this.props.responseId,\r\n        type: this.props.type,\r\n        questionStatus: 2,\r\n      };\r\n      this.props.UserAction.updateResponse(payload);\r\n    }\r\n  }\r\n\r\n  remainingTimeHandler = (remainingTime) => {\r\n    return remainingTime;\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.question,this.props.quesNo)\r\n    return (\r\n      <div className='read-question-main'>\r\n        <div className='read-question-heading'>Live Interview</div>\r\n        <div className='read-question-body'>\r\n          <div className='read-question-timer'>\r\n            <TimerComponent\r\n              durationTime={this.props.durationTime}\r\n              className='timer-new'\r\n              nextBtn={true}\r\n              handleTimer={this.props.readQuestionTimerEnds}\r\n              remainingTimeHandler={this.remainingTimeHandler}\r\n              isPlaying={true}\r\n            />\r\n          </div>\r\n          <div className='read-question-time-left'>\r\n            Time left to read the question\r\n          </div>\r\n          <div className='read-question-ques-div'>\r\n            <div className='read-question-time-left'>\r\n              Please Read Question / Prepare Answer\r\n            </div>\r\n            <div className='ques-wrapper'>\r\n              <div className='question-number'>Q.{this.props.quesNo} </div>\r\n              <div\r\n                className='question-text-new'\r\n                dangerouslySetInnerHTML={{\r\n                  __html:\r\n                    this.props.question && this.props.question.QuestionText,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ReadQuestion));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../styles/interview.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ReadQuestion from \"./ReadQuestion\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet verbalSkipableValue = parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  : 10;\r\n\r\nlet readQuestionTime = parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  ? parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  : 10;\r\n\r\nlet remainingGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\n\r\nexport class Interview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      restartTimer: false,\r\n      audioNew: null,\r\n      ques: [],\r\n      capturing: false,\r\n      activeStep: 0,\r\n      audio: false,\r\n      video: false,\r\n      recordedChunks: [],\r\n      question: [],\r\n      questions: [],\r\n      videofilename: \"\",\r\n      isDataArrived: true,\r\n      questionData: [],\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      submittedQuestions: [],\r\n      totalQuestions: 0,\r\n      submissionQueue: [],\r\n      responseId: \"\",\r\n      noOfRetakes: 0,\r\n      showDialog: false,\r\n      showReadQuestion: false,\r\n      totalRetakes: 0,\r\n      retakesAvailable: 0,\r\n      retake: false,\r\n      showRetakeDialog: false,\r\n      remainingTime: 0,\r\n      isPlaying: true,\r\n      skipable: false,\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timerInput: 0,\r\n      time: \"\",\r\n      events: [],\r\n      skipableArrived: false,\r\n      // ScreenFile:'',\r\n      // ScreenFileName:''\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props && this.props.data) {\r\n      const { id, candidateId, scheduleId } =\r\n        this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response;\r\n      await this.setState({\r\n        responseId: id,\r\n        ScheduleId: scheduleId,\r\n        CandidateId: candidateId,\r\n      });\r\n\r\n      scheduleIdGlobal = scheduleId;\r\n      candidateIdGlobal = candidateId;\r\n      let questionData = [];\r\n      this.props.data &&\r\n        this.props.data.verbalQuestions &&\r\n        this.props.data.verbalQuestions.map((item) => {\r\n          questionData.push({\r\n            id: item.id,\r\n            QuestionText: item.text,\r\n            Questionstime: item.suggestedDuration,\r\n          });\r\n        });\r\n      this.setState({\r\n        questionData: questionData,\r\n        totalQuestions: questionData.length,\r\n        showReadQuestion: true,\r\n      });\r\n\r\n      let timerInput = 0;\r\n      if (questionData.length > 0) {\r\n        const val = questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n\r\n      this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response &&\r\n        this.props.data.data.response.questionType &&\r\n        this.props.data.data.response.questionType.length > 0 &&\r\n        this.props.data.data.response.questionType.map((item) => {\r\n          if (item.name.toLowerCase() == \"verbal\") {\r\n            if (item.retake) {\r\n              this.setState({\r\n                totalRetakes: item.retake,\r\n                retakesAvailable: item.retake - 1,\r\n              });\r\n            }\r\n            if (item.skipable && this.state.timerInput) {\r\n              this.setState({\r\n                skipableArrived: true,\r\n              });\r\n              let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n              setTimeout(() => {\r\n                this.setState({\r\n                  skipable: true,\r\n                });\r\n              }, time);\r\n            }\r\n          }\r\n        });\r\n      document.addEventListener(\"contextmenu\", (e) => {\r\n        e.preventDefault();\r\n        const { events } = this.state;\r\n        const data = {\r\n          type: \"browser\",\r\n          level: 2,\r\n          metadata: \"Right click triggered\",\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n        events.push({\r\n          ...data,\r\n          time: this.state.timerInput - this.state.remainingTime,\r\n        });\r\n        id && this.setState({ events: events });\r\n        id && this.addEventProctoring(id, data);\r\n      });\r\n      document.addEventListener(\"visibilitychange\", (event) => {\r\n        if (window.location.pathname.includes(\"/interview-process\")) {\r\n          if (document.visibilityState == \"visible\") {\r\n            const { events } = this.state;\r\n            const data = {\r\n              type: \"browser\",\r\n              level: 2,\r\n              metadata: \"tab is active\",\r\n              timestamp: new Date().toISOString(),\r\n            };\r\n            events.push({\r\n              ...data,\r\n              time: this.state.timerInput - this.state.remainingTime,\r\n            });\r\n            id && this.setState({ events: events });\r\n            id && this.addEventProctoring(id, data);\r\n          } else {\r\n            const { events } = this.state;\r\n            const data = {\r\n              type: \"browser\",\r\n              level: 2,\r\n              metadata: \"tab is inactive\",\r\n              timestamp: new Date().toISOString(),\r\n            };\r\n            events.push({\r\n              ...data,\r\n              time: this.state.timerInput - this.state.remainingTime,\r\n            });\r\n            id && this.setState({ events: events });\r\n            id && this.addEventProctoring(id, data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.getMicrophone();\r\n\r\n    var today = new Date();\r\n    var date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n\r\n    var time =\r\n      today.getHours() + \"-\" + today.getMinutes() + \"-\" + today.getSeconds();\r\n\r\n    var dateTime = date + \"-\" + time;\r\n    this.setState({\r\n      timedate: dateTime,\r\n      // disble_next_button: true,\r\n    });\r\n    timedate = dateTime;\r\n  }\r\n\r\n  selectionOperation = (type) => {\r\n    const { responseId } = this.state;\r\n    const { events } = this.state;\r\n    const data = {\r\n      type: \"browser\",\r\n      level: 2,\r\n      metadata: `${type} action triggered`,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    events.push({\r\n      ...data,\r\n      time: this.state.timerInput - this.state.remainingTime,\r\n    });\r\n    responseId && this.setState({ events: events });\r\n    responseId && this.addEventProctoring(responseId, data);\r\n  };\r\n\r\n  addEventProctoring = (id, data) => {\r\n    this.props.UserAction.addEvent({\r\n      responseId: id,\r\n      event: data,\r\n    });\r\n  };\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isScreenShotDataArrived &&\r\n      nextProps.UserReducer.screenShot &&\r\n      nextProps.UserReducer.screenShot.data\r\n    ) {\r\n      nextProps.UserReducer.isScreenShotDataArrived = false;\r\n      if (!nextProps.UserReducer.screenShot.data.faces) {\r\n        currentState.faceNotDetected = currentState.faceNotDetected + 1;\r\n      }\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n\r\n  // isStepSkipped = (step) => {\r\n  //   return this.state.skipped.has(step);\r\n  // };\r\n\r\n  handleStart = () => {\r\n    this.clockRef.current.start();\r\n  };\r\n\r\n  handleTimeUpdate = (time, remainingTime) => {\r\n    if (this.state.time !== time) {\r\n      // console.log('timeee',this.state.time,time,remainingTime)\r\n      this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  handleNext = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      await this.setState({ restartTimer: true, isPlaying: true });\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { detail: `Inside HandleNext for Question ${this.state.activeStep+1}`,\r\n          isPlaying : this.state.isPlaying\r\n         },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n     \r\n      });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n\r\n      this.getStepContent(questiondata, this.state.activeStep);\r\n\r\n      await this.setState({\r\n        activeStep: this.state.activeStep + 1,\r\n        showReadQuestion: true,\r\n        retakesAvailable: this.state.totalRetakes - 1,\r\n      });\r\n      activeStep = activeStep + 1;\r\n      let timerInput = 0;\r\n      if (this.state.questionData.length > 0) {\r\n        const val =\r\n          this.state.questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n\r\n      console.log(\"isPlaying\",this.state.isPlaying,\"RemainingTime\",this.state.remainingTime)\r\n    }\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.activeStep];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}.\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: value,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFinish = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      this.setState({\r\n        submitClicked: true,\r\n        isPlaying: true,\r\n      });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n      const question = [];\r\n      question.push(this.getStepContent(this.state.activeStep));\r\n\r\n      this.props.submitClickedHandler();\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (this.state.skipable && this.state.timerInput) {\r\n      this.setState({\r\n        skipable: false,\r\n      });\r\n      let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          skipable: true,\r\n        });\r\n      }, time);\r\n    }\r\n    var formdata = new FormData();\r\n    formdata.append(\"video\", file, name);\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    formdata.append(\"events\", JSON.stringify(this.state.events));\r\n    const payload = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n      // screenFile : ScreenFileGlobal,\r\n      // screenFileName : ScreenFileNameGlobal\r\n    };\r\n    let quesNo = this.state.activeStep + 1;\r\n    let questionType = \"verbal\";\r\n    let indexDbData = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n      events: JSON.stringify(this.state.events),\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: quesdata[this.state.activeStep],\r\n          responseId: this.state.responseId,\r\n          type: \"verbal\",\r\n          questionStatus: 3,\r\n          events: this.state.events,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n      questionId: quesdata[this.state.activeStep],\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n    });\r\n    // remainingGlobal = 0;\r\n    // clearInterval(Interval);\r\n\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n    // setTimeout(()=>{\r\n    //   this.childRef.current.startCapture()\r\n    // },1000)\r\n    // remainingGlobal = 0;\r\n\r\n    // clearInterval(Interval);\r\n    // Interval = setInterval(() => {\r\n    //   remainingGlobal += 1;\r\n    // }, 1000);\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAbort = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.childRef.current.abortCapture();\r\n      this.mediaRecorderRef.current.stop();\r\n      this.mediaRecorderRef.current.addEventListener(\"stop\", () => {\r\n        this.setState({\r\n          recordedChunks: [],\r\n        });\r\n      });\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n\r\n      this.handleStartCaptureClick();\r\n    }\r\n  };\r\n\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    //  let IntervalScreen = setInterval(() => {\r\n    if (this.state.recordedChunks.length) {\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`;\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`,\r\n        quesdata\r\n      );\r\n      // clearInterval(IntervalScreen)\r\n    }\r\n    // }, 1000);\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    console.log(`data sizee of question ${this.state.activeStep+1}`,data.size)\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: { detail: `data sizee of question ${this.state.activeStep+1} insideHandleDataAvailable`,\r\n        dataSize : data.size \r\n       },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n   \r\n    });\r\n    // if (data.size > 0) {\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      remainingGlobal = this.state.timerInput - this.state.remainingTime;\r\n\r\n      \r\n      if (this.state.activeStep == this.state.questionData.length - 1) {\r\n        this.handleFinish(this.state.questionData);\r\n      } else {\r\n        this.handleNext(this.state.questionData);\r\n      }\r\n\r\n    // }\r\n  };\r\n\r\n  handleTimer = async (questionData) => {\r\n    await this.setState({\r\n      restartTimer: false,\r\n      showDialog: false,\r\n      retake: false,\r\n      isPlaying: false,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick(questionData);\r\n    }, 2000);\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  capture = () => {\r\n    const imgSrc =\r\n      this.webcamRef &&\r\n      this.webcamRef.current &&\r\n      this.webcamRef.current.getScreenshot();\r\n    let image =\r\n      imgSrc && imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        ? imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        : null;\r\n    this.setState({\r\n      screenShot: image,\r\n    });\r\n\r\n    this.props.UserAction.verifyScreenshot({\r\n      base64: image,\r\n    });\r\n  };\r\n\r\n  readQuestionTimerEnds = () => {\r\n    this.setState({ showReadQuestion: false });\r\n  };\r\n\r\n  retakeHandler = async () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      await this.setState({\r\n        retakesAvailable: this.state.retakesAvailable - 1,\r\n        showRetakeDialog: false,\r\n        restartTimer: true,\r\n        retake: true,\r\n        showDialog: false,\r\n        events: [],\r\n      });\r\n      const payload = {\r\n        questionId: this.state.questionData[this.state.activeStep].id,\r\n        responseId: this.state.responseId,\r\n        type: \"verbal\",\r\n        questionStatus: 2,\r\n      };\r\n      this.props.UserAction.updateResponse(payload);\r\n      this.handleAbort();\r\n      this.setState({\r\n        restartTimer: false,\r\n      });\r\n      if (\r\n        this.state.skipable &&\r\n        this.state.timerInput &&\r\n        !this.state.showReadQuestion\r\n      ) {\r\n        this.setState({\r\n          skipable: false,\r\n        });\r\n        let time = verbalSkipableValue * 1000;\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            skipable: true,\r\n          });\r\n        }, time);\r\n      }\r\n    }\r\n  };\r\n\r\n  retakeClicked = () => {\r\n    if (\r\n      !(\r\n        this.state.totalRetakes - this.state.retakesAvailable ===\r\n        this.state.totalRetakes\r\n      ) &&\r\n      this.state.totalRetakes - this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({ showRetakeDialog: true });\r\n    }\r\n  };\r\n\r\n  handleEarlySubmit = () => {\r\n    if (\r\n      this.state.skipable &&\r\n      this.state.retakesAvailable &&\r\n      this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else if (this.state.skipable) {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  handleTimerEnd = () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n\r\n  render() {\r\n    let questiondata = this.state.questionData;\r\n    localStorage.setItem(\"questiondata\", JSON.stringify(questiondata));\r\n    var xyz = JSON.parse(localStorage.getItem(\"questiondata\"));\r\n    let questiondata1 = [];\r\n    let quesreadtime = [];\r\n    xyz.map((item) => {\r\n      questiondata1.push(parseInt(item.Questionstime));\r\n      quesreadtime.push(10000);\r\n    });\r\n\r\n    // var n = questiondata1[this.state.act_num];\r\n    // var r = quesreadtime[this.state.act_num];\r\n\r\n    const steps = [];\r\n    for (let i = 1; i <= questiondata.length; i++) {\r\n      steps.push(i);\r\n    }\r\n\r\n    // const videoConstraints = {\r\n    //   facingMode: { exact: \"user\" },\r\n    // };\r\n\r\n    return (\r\n      <div\r\n        onCopy={() => this.selectionOperation(\"Copy\")}\r\n        onCut={() => this.selectionOperation(\"Cut\")}\r\n        onPaste={() => this.selectionOperation(\"Paste\")}\r\n      >\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        {localStorage.getItem(\"login\") && localStorage.getItem(\"preview\") ? (\r\n          this.state.showReadQuestion ? (\r\n            <ReadQuestion\r\n              durationTime={readQuestionTime}\r\n              question={this.state.questionData[this.state.activeStep]}\r\n              quesNo={this.state.activeStep + 1}\r\n              responseId={this.state.responseId}\r\n              type='verbal'\r\n              readQuestionTimerEnds={this.readQuestionTimerEnds}\r\n            />\r\n          ) : (\r\n            <div className='interview-main-div'>\r\n              <Dialog\r\n                className='first-dialog-submit'\r\n                open={this.state.showDialog}\r\n                // onClose={() => {\r\n                //   this.setState({\r\n                //     showDialog: false,\r\n                //   });\r\n                // }}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n              >\r\n                <div className='main-dialog-heading'>\r\n                  Do you want to retake or submit?\r\n                </div>\r\n                <div className='main-dialog-sub-heading'>\r\n                  You have {this.state.retakesAvailable} retakes left.\r\n                </div>\r\n                <div className='main-dialog-buttons-wrapper'>\r\n                  <div\r\n                    className='dialog-retry-button'\r\n                    onClick={this.retakeHandler}\r\n                  >\r\n                    Retake\r\n                  </div>\r\n                  <div\r\n                    className='dialog-submit-button'\r\n                    onClick={this.handleTimer}\r\n                  >\r\n                    Submit\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n\r\n              {this.state.retakesAvailable &&\r\n              this.state.retakesAvailable > 0 ? (\r\n                <Dialog\r\n                  className='first-dialog-submit'\r\n                  open={this.state.showRetakeDialog}\r\n                  aria-labelledby='alert-dialog-title'\r\n                  aria-describedby='alert-dialog-description'\r\n                >\r\n                  <div className='main-dialog-heading'>\r\n                    Are you sure you want to retake?\r\n                  </div>\r\n                  <div className='main-dialog-sub-heading'>\r\n                    You have {this.state.retakesAvailable} retakes left.\r\n                  </div>\r\n                  <div className='main-dialog-buttons-wrapper'>\r\n                    <div\r\n                      className='dialog-retry-button'\r\n                      onClick={() => {\r\n                        this.setState({ showRetakeDialog: false });\r\n                      }}\r\n                    >\r\n                      No\r\n                    </div>\r\n                    <div\r\n                      className='dialog-submit-button'\r\n                      onClick={this.retakeHandler}\r\n                    >\r\n                      Yes\r\n                    </div>\r\n                  </div>\r\n                </Dialog>\r\n              ) : null}\r\n              <div className='interview-row-wrapper'>\r\n                <div className='Inter-1'>\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-heading'>\r\n                      <Typography>Live Interview</Typography>\r\n                    </div>\r\n                  ) : null}\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-subHeading1'>\r\n                      {/* <Typography>Please don't try to refer anything from any other means.</Typography> */}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className='inter-2 total-questions'>\r\n                  <div>\r\n                    <div className='questions-wrapper'>\r\n                      <div className='total'> Total Questions</div>\r\n                      <div className='circle-interview'>\r\n                        {this.state.activeStep + 1}/{questiondata.length}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class='fluid-container'>\r\n                <div className='interview-row-wrapper-new'>\r\n                  <div className='left-interview'>\r\n                    <div className='video-div'>\r\n                      <div className='interview-video-new'>\r\n                        <WebcamComponent\r\n                          handleStartCaptureClick={this.handleStartCaptureClick}\r\n                          handleAbort={this.handleAbort}\r\n                          handleDataAvailable={this.handleDataAvailable}\r\n                          handleStopCaptureClick={this.handleStopCaptureClick}\r\n                          capturing={this.state.capturing}\r\n                          webcamRef={this.webcamRef}\r\n                          recordedChunks={this.state.recordedChunks}\r\n                          handleDownload={this.handleDownload}\r\n                        />\r\n\r\n                        <div className='bottom-video-div'>\r\n                          <div className='retake-button-div'>\r\n                            <div\r\n                              className={\r\n                                !this.state.totalRetakes ||\r\n                                this.state.totalRetakes -\r\n                                  this.state.retakesAvailable ==\r\n                                  this.state.totalRetakes\r\n                                  ? \"retake-disabled-button\"\r\n                                  : \"retake-button\"\r\n                              }\r\n                              onClick={this.retakeClicked}\r\n                            >\r\n                              <span>\r\n                                <ReplayIcon\r\n                                  style={{\r\n                                    height: \"20px\",\r\n                                    width: \"20px\",\r\n                                    margin: \"0 5px\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                              Retake{\" \"}\r\n                              {this.state.totalRetakes ? (\r\n                                <span>\r\n                                  {\" \"}\r\n                                  {this.state.totalRetakes -\r\n                                    this.state.retakesAvailable}{\" \"}\r\n                                  / {this.state.totalRetakes}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className='timer-button-div'>\r\n                            <div className='timer-button'>\r\n                              <TimerComponent\r\n                                // nextBtn={this.state.disble_next_button}\r\n                                durationTime={this.state.timerInput}\r\n                                // disableBtn={this.state.restartTimer}\r\n                                // remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  // this.handleTimer(questiondata)\r\n                                  console.log(\"handle\");\r\n                                }}\r\n                                isPlaying={this.state.isPlaying}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                              {this.state.time}\r\n                            </div>\r\n                          </div>\r\n                          <div className='audio-analyser-div'>\r\n                            <div className='audio-img'>\r\n                              {\" \"}\r\n                              <img src={audio} />{\" \"}\r\n                            </div>\r\n                            {this.state.audioNew ? (\r\n                              <div>\r\n                                {\" \"}\r\n                                <AudioAnalyser\r\n                                  amplitude={() => null}\r\n                                  audio={this.state.audioNew}\r\n                                />{\" \"}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                          <div className='submit-button-div'>\r\n                            <div\r\n                              className={\r\n                                this.state.skipable\r\n                                  ? \"submit-button\"\r\n                                  : \"submit-button-disabled\"\r\n                              }\r\n                              onClick={this.handleEarlySubmit}\r\n                            >\r\n                              Submit\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='total-questions-new'>\r\n                          <div>\r\n                            <div className='questions-wrapper'>\r\n                              <div className='total'>Total Questions</div>\r\n                              <div className='circle-interview'>\r\n                                {this.state.activeStep + 1}/\r\n                                {questiondata.length}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {this.state.timerInput !== 0 &&\r\n                            window.screen.width <= 1024 && (\r\n                              <TimerComponent\r\n                                durationTime={this.state.timerInput}\r\n                                disableBtn={this.state.restartTimer}\r\n                                remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  this.handleTimerEnd();\r\n                                }}\r\n                                isPlaying={this.state.isPlaying}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='right-interview'>\r\n                    <div className='question-div'>\r\n                      {this.state.timerInput !== 0 &&\r\n                        window.screen.width > 1024 && (\r\n                          <TimerComponent\r\n                            // nextBtn={this.state.disble_next_button}\r\n                            durationTime={this.state.timerInput}\r\n                            remainingTimeHandler={this.remainingTimeHandler}\r\n                            disableBtn={this.state.restartTimer}\r\n                            handleTimer={() => {\r\n                              this.handleTimerEnd();\r\n                            }}\r\n                            isPlaying={this.state.isPlaying}\r\n                            className='timer-1'\r\n                          />\r\n                        )}\r\n\r\n                      <div className='content-div'>\r\n                        <div className='qustion-content-div'>\r\n                          {this.state.activeStep === steps.length ? (\r\n                            <div></div>\r\n                          ) : (\r\n                            <div>\r\n                              <span\r\n                                className='laptop-only'\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  fontSize: \"12px\",\r\n                                  marginLeft: \"20px\",\r\n                                }}\r\n                              >\r\n                                Please Answer\r\n                              </span>\r\n                              <div className='question'>\r\n                                <div>\r\n                                  {this.getStepContent(\r\n                                    questiondata,\r\n                                    this.state.activeStep\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className='buttons-wrapper'>\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className={\r\n                              this.state.skipable\r\n                                ? \"Button-next\"\r\n                                : \"Button-next-disabled\"\r\n                            }\r\n                            style={{\r\n                              width: this.state.skipableArrived\r\n                                ? \"200px\"\r\n                                : \"350px\",\r\n                            }}\r\n                            onClick={this.handleEarlySubmit}\r\n                          >\r\n                            {this.state.skipableArrived ? (\r\n                              <span>Next Question</span>\r\n                            ) : (\r\n                              <span>\r\n                                Next Question{\" \"}\r\n                                {`in ${this.state.remainingTime} seconds`}\r\n                              </span>\r\n                            )}\r\n                            <span>\r\n                              <ArrowForwardIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className='Button-retry'\r\n                            onClick={this.retakeClicked}\r\n                          >\r\n                            <span>Retake</span>\r\n                            <span>\r\n                              <ReplayIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"end\",\r\n                  marginRight: \"30px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n                className='interview-logo'\r\n              >\r\n                {/* <img style={{maxWidth:'100px'}} src={birballogo}></img> */}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div>Access Blocked</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // CandidateReducer: state.CandidateReducer\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // candidateActions: bindActionCreators(Actions, dispatch),\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Interview));\r\n","import React, { Component } from \"react\";\r\nimport \"./submitting.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport submitting from \"../../assets/images/Submitting.svg\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nexport class Submitting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n      window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        show: true,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  componentDidUnmount() {\r\n    window.onbeforeunload = null;\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.props.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: { Page: \"Submission Page\" },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\r\n  }\r\n\r\n  keepOnPage(e) {\r\n    var message =\r\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"insideee submitting\");\r\n    return (\r\n      <div className='submitting-main'>\r\n        <div className='submitting-gif'>\r\n          <img src={submitting} />\r\n        </div>\r\n        <div className='submitting-text'>\r\n          Submitting{\" \"}\r\n          <span style={{ color: \"#04724d\" }}>\r\n            {\" \"}\r\n            {this.props.submittedQuestions &&\r\n            this.props.totalQuestions &&\r\n            this.props.submittedQuestions.length == this.props.totalQuestions\r\n              ? this.props.totalQuestions\r\n              : this.props.submittedQuestions.length + 1}\r\n          </span>{\" \"}\r\n          of {this.props.totalQuestions}, Please Wait...\r\n          <div style={{ padding: \"20px\", transform: \"rotate(180deg)\" }}>\r\n            {this.props.progress &&\r\n            this.props.progress > 0 &&\r\n            this.state.show ? (\r\n              <LinearProgress\r\n                className='linearProgressInternetLanding'\r\n                variant='determinate'\r\n                value={this.props.progress}\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  borderRadius: \"15px\",\r\n                  height: \"5px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          {this.state.show ? (\r\n            <div style={{ fontSize: \"13px\", textAlign: \"center\" }}>\r\n              Uploading {this.props.progress && this.props.progress.toFixed(1)}\r\n              %...\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Submitting));\r\n","import React, { Component } from \"react\";\r\nimport \"./mcqQuestions.scss\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet mcqSkipableValue = parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  : 5;\r\n\r\nlet remainingGlobal = 0,\r\n  durationGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\nclass McqQuestions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      capturing: false,\r\n      recordedChunks: [],\r\n      videofilename: \"\",\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      responseId: \"\",\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timedate: new Date().toISOString(),\r\n      remainingTime: 0,\r\n      McqData: [],\r\n      totalLength: 0,\r\n      current: 0,\r\n      currentData: null,\r\n      options: null,\r\n      disablebtn: true,\r\n      restartTimer: false,\r\n      isPlaying: true,\r\n      audio: false,\r\n      audioNew: null,\r\n      isMultiCheck: false,\r\n      isSkipped: 0,\r\n      time: \"\",\r\n      events: [],\r\n      skipableArrived : false\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    timedate = this.state.timedate;\r\n    const { questionType, id, candidateId, scheduleId } =\r\n      this.props &&\r\n      this.props.data &&\r\n      this.props.data.data &&\r\n      this.props.data.data.response;\r\n    const isSkipped =\r\n      questionType &&\r\n      questionType.length > 0 &&\r\n      questionType.find((el) => el.name && el.name.toLowerCase() === \"mcq\");\r\n    const details = this.props && this.props.data;\r\n    const data = details && details.mcqQuestions;\r\n    const responseId = id;\r\n    let multi = 0;\r\n    let options =\r\n      data &&\r\n      data[0] &&\r\n      data[0].metadata &&\r\n      data[0].metadata.option &&\r\n      data[0].metadata.option.length > 0 &&\r\n      data[0].metadata.option.map((el) => {\r\n        multi = el.correct ? multi + 1 : multi;\r\n        return { label: el.text, value: false };\r\n      });\r\n\r\n    this.setState({\r\n      McqData: data,\r\n      totalLength: data.length,\r\n      current: 1,\r\n      currentData: data[0],\r\n      options: options,\r\n      responseId: responseId,\r\n      isMultiCheck: multi > 1 ? true : false,\r\n      isSkipped: isSkipped && isSkipped.skipable ? isSkipped.skipable : 0,\r\n      ScheduleId: scheduleId,\r\n      CandidateId: candidateId,\r\n    });\r\n    activeStep = 1;\r\n    scheduleIdGlobal = scheduleId;\r\n    candidateIdGlobal = candidateId;\r\n    let timeOut = isSkipped && isSkipped.skipable ? isSkipped.skipable : 0;\r\n    timeOut = timeOut ? mcqSkipableValue * 1000 : 0;\r\n    if(timeOut){\r\n      this.setState({\r\n        skipableArrived:true\r\n      })\r\n    }\r\n    timeOut &&\r\n      setTimeout(() => {\r\n        this.setState({ disablebtn: false });\r\n      }, timeOut);\r\n    this.getMicrophone();\r\n    document.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n      const { events } = this.state;\r\n      const data = {\r\n        type: \"browser\",\r\n        level: 2,\r\n        metadata: \"Right click triggered\",\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      events.push({\r\n        ...data,\r\n        time: durationGlobal - this.state.remainingTime,\r\n      });\r\n      id && this.setState({ events: events });\r\n      id && this.addEventProctoring(id, data);\r\n    });\r\n    console.log(window.location);\r\n\r\n    document.addEventListener(\"visibilitychange\", (event) => {\r\n      if (window.location.pathname.includes(\"/interview-process\")) {\r\n        if (document.visibilityState == \"visible\") {\r\n          const { events } = this.state;\r\n          const data = {\r\n            type: \"browser\",\r\n            level: 2,\r\n            metadata: \"tab is active\",\r\n            timestamp: new Date().toISOString(),\r\n          };\r\n          events.push({\r\n            ...data,\r\n            time: durationGlobal - this.state.remainingTime,\r\n          });\r\n          id && this.setState({ events: events });\r\n          id && this.addEventProctoring(id, data);\r\n        } else {\r\n          const { events } = this.state;\r\n          const data = {\r\n            type: \"browser\",\r\n            level: 2,\r\n            metadata: \"tab is inactive\",\r\n            timestamp: new Date().toISOString(),\r\n          };\r\n          events.push({\r\n            ...data,\r\n            time: durationGlobal - this.state.remainingTime,\r\n          });\r\n          id && this.setState({ events: events });\r\n          id && this.addEventProctoring(id, data);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  selectionOperation = (type) => {\r\n    const { responseId } = this.state;\r\n    const { events } = this.state;\r\n    const data = {\r\n      type: \"browser\",\r\n      level: 2,\r\n      metadata: `${type} action triggered`,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    events.push({\r\n      ...data,\r\n      time: durationGlobal - this.state.remainingTime,\r\n    });\r\n    responseId && this.setState({ events: events });\r\n    responseId && this.addEventProctoring(responseId, data);\r\n  };\r\n\r\n  addEventProctoring = (id, data) => {\r\n    this.props.UserAction.addEvent({\r\n      responseId: id,\r\n      event: data,\r\n    });\r\n  };\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n\r\n  changeOption = (e, label) => {\r\n    let { options, isMultiCheck } = this.state;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el, index) => {\r\n        if (isMultiCheck) {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          }\r\n        } else {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          } else {\r\n            options[index].value = false;\r\n          }\r\n        }\r\n      });\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n    this.setState({ events: [] });\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 2,\r\n    };\r\n    this.props.UserAction.updateResponse(payload);\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    if (data.size > 0) {\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      if(this.state.remainingTime<durationGlobal){\r\n        remainingGlobal = durationGlobal - this.state.remainingTime;\r\n      }else{\r\n        remainingGlobal=durationGlobal\r\n      }\r\n      // setTimeout(()=>{\r\n      if (this.state.current === this.state.totalLength) {\r\n        this.handleFinish(this.state.McqData);\r\n      } else {\r\n        this.handleNext(this.state.McqData);\r\n      }\r\n      // },2000)\r\n    }\r\n  };\r\n  handleFinish = async (questiondata) => {\r\n    this.setState({\r\n      submitClicked: true,\r\n    });\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    const question = [];\r\n    question.push(this.getStepContent(this.state.current));\r\n\r\n    this.props.submitClickedHandler();\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.current];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}. {value}\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n  handleNext = async (questiondata) => {\r\n    await this.setState({\r\n      restartTimer: true,\r\n      isPlaying: true,\r\n      // remainingTime: remainingGlobal,\r\n    });\r\n\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    this.handleStartCaptureClick();\r\n    this.getStepContent(questiondata, this.state.current);\r\n    const { totalLength, current, McqData } = this.state;\r\n\r\n    if (current < totalLength && McqData && McqData[current]) {\r\n      let options =\r\n        McqData[current].metadata &&\r\n        McqData[current].metadata.option &&\r\n        McqData[current].metadata.option.length > 0 &&\r\n        McqData[current].metadata.option.map((el) => ({\r\n          label: el.text,\r\n          value: false,\r\n        }));\r\n      this.setState({\r\n        current: current + 1,\r\n        currentData: McqData[current],\r\n        options: options,\r\n        disablebtn: true,\r\n      });\r\n\r\n      activeStep = current + 1;\r\n    }\r\n  };\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    if (this.state.recordedChunks.length) {\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`;\r\n\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`,\r\n        quesdata\r\n      );\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (!this.state.disablebtn) {\r\n      this.setState({\r\n        disablebtn: true,\r\n      });\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    } else {\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    }\r\n    const { options } = this.state;\r\n    let chosenOption = \"No option Selected\";\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el) => {\r\n        if (el.value) {\r\n          chosenOption = el.label;\r\n        }\r\n      });\r\n    var formdata = new FormData();\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"video\", file, name);\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    formdata.append(\"chosenOption\", chosenOption);\r\n    formdata.append(\"events\", JSON.stringify(this.state.events));\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n    };\r\n    let quesNo = this.state.current;\r\n    let questionType = \"mcq\";\r\n    let indexDbData = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n      events: JSON.stringify(this.state.events),\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: this.state.currentData.id,\r\n          responseId: this.state.responseId,\r\n          type: \"mcq\",\r\n          questionStatus: 3,\r\n          chosenOption: chosenOption,\r\n          events: this.state.events,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n      questionId: this.state.currentData.id,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n    });\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleTimer = async () => {\r\n    // clearInterval(Interval);\r\n    await this.setState({\r\n      restartTimer: false,\r\n      isPlaying: false,\r\n      disablebtn: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick();\r\n    }, 2000);\r\n\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n  handleTimeUpdate = async (time, remainingTime) => {\r\n    if (this.state.time != time) {\r\n    await this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      disablebtn,\r\n      current,\r\n      currentData,\r\n      options,\r\n      restartTimer,\r\n      isPlaying,\r\n    } = this.state;\r\n\r\n    const duration =\r\n      currentData && currentData.suggestedDuration\r\n        ? currentData.suggestedDuration\r\n        : 0;\r\n    durationGlobal = duration;\r\n    let width = 10;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((item) => {\r\n        if (item.label.length * 14 > width) {\r\n          width = item.label.length * 14 + 60;\r\n        }\r\n      });\r\n\r\n    return (\r\n      <div\r\n        className='InterViewMcqMain'\r\n        onCopy={() => this.selectionOperation(\"Copy\")}\r\n        onCut={() => this.selectionOperation(\"Cut\")}\r\n        onPaste={() => this.selectionOperation(\"Paste\")}\r\n      >\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        <div className='McqHeadingMain'>Live Interview</div>\r\n\r\n        <div className='McqQuestionArea'>\r\n          <div className='QuestionNumber'>Q.{current}</div>\r\n          <div className='QuestionArea'>\r\n            <div\r\n              className='QuestionText'\r\n              dangerouslySetInnerHTML={{\r\n                __html: currentData && currentData.text,\r\n              }}\r\n            ></div>\r\n            <div\r\n              className='QuestionOptions'\r\n              style={{\r\n                display: width > 360 ? \"flex\" : \"block\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {options &&\r\n                options.length > 0 &&\r\n                options.map((item) => (\r\n                  <div\r\n                    className='OptionArea'\r\n                    style={{\r\n                      width: width < 360 ? `${width}px` : \"360px\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      className='checkbox'\r\n                      checked={item.value}\r\n                      onChange={(e) => this.changeOption(e, item.label)}\r\n                      label={item.label}\r\n                    />\r\n                    <span className='textLabel'>{item.label}</span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className='VideoArea'>\r\n            <div className='Timer'>\r\n              {duration ? (\r\n                <TimerComponent\r\n                  durationTime={duration}\r\n                  className='timer-new'\r\n                  isPlaying={isPlaying}\r\n                  disableBtn={restartTimer}\r\n                  nextBtn={true}\r\n                  //   handleTimer={() => null}\r\n                  handleTimer={this.handleTimer}\r\n                  onTick={(time, remainingTime) => {\r\n                    this.handleTimeUpdate(time, remainingTime);\r\n                  }}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className='VideoRecord'>\r\n              {\" \"}\r\n              <WebcamComponent\r\n                handleStartCaptureClick={this.handleStartCaptureClick}\r\n                // handleAbort={this.handleAbort}\r\n                handleDataAvailable={this.handleDataAvailable}\r\n                handleStopCaptureClick={this.handleStopCaptureClick}\r\n                capturing={this.state.capturing}\r\n                webcamRef={this.webcamRef}\r\n                recordedChunks={this.state.recordedChunks}\r\n                handleDownload={this.handleDownload}\r\n              />\r\n              <div className='audioDiv'>\r\n                <div className='audio-img'>\r\n                  <img src={audio} />{\" \"}\r\n                </div>\r\n                {this.state.audioNew ? (\r\n                  <div className='audio-analyser'>\r\n                    <AudioAnalyser\r\n                      amplitude={() => null}\r\n                      audio={this.state.audioNew}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className='NextBtn'>\r\n              <Button\r\n                disabled={disablebtn}\r\n                variant='contained'\r\n                width={ this.state.skipableArrived ? '200px' : '350px'}\r\n                className={`Button-next ${disablebtn ? \"disabled\" : \"normal\"}`}\r\n                onClick={this.handleTimer}\r\n              >\r\n                {\r\n                             this.state.skipableArrived  ? <span>Next Question</span>\r\n                             :  <span>Next Question{' '}{`in ${this.state.remainingTime} seconds`}</span>\r\n                           }\r\n                <span>\r\n                  <ArrowForwardIcon style={{ height: \"15px\", width: \"15px\" }} />\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqQuestions);\r\n","export function secondsToMinutes(time){\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return min+':'+sec;\r\n}\r\n\r\n\r\nexport function secondsToHours(time){\r\n    let hours = Math.floor(time / 3600);\r\ntime %= 3600;\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(hours<10 && hours!=0){\r\n        hours=`0${hours}`\r\n    }\r\n    if(hours==0){\r\n        hours=`00`\r\n    }\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return hours+':'+min+':'+sec;\r\n}\r\n\r\n\r\n// export const verbalSkipableValue=10;\r\n\r\n// export const mcqSkipableValue=5;","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Instructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Verbal\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructions);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class PreviewInstructionsMCQ extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n    // }\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : MCQ with verbal explanation \r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> {\" \"}\r\n                Please explain the choice made while making the choice\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PreviewInstructionsMCQ);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class CodingInstructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Coding Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Coding\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodingInstructions);\r\n","import React from \"react\";\r\nimport { Interview } from \"../../utils/LazyLoaded\";\r\nimport interview from \"./interview\";\r\nimport Submitting from \"./submitting\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"react-notifications-component\";\r\nimport { serverAddress } from \"../../config\";\r\nimport ReactGA from \"react-ga\";\r\nimport McqInteview from \"./mcqQuestions\";\r\nimport VerbalSummary from \"./PreviewInstructionsVerbal\";\r\nimport McqSummary from \"./PreviewInstructionsMCQ\";\r\nimport CodingSummary from \"./PreviewInstructionsCoding\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport warning from \"../../assets/images/warning.svg\";\r\nimport \"./parent.scss\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CodingInterview from \"./CodeEditor\";\r\n\r\nlet indexedDB =\r\n  window.indexedDB ||\r\n  window.webkitIndexedDB ||\r\n  window.mozIndexedDB ||\r\n  window.OIndexedDB ||\r\n  window.msIndexedDB,\r\n  IDBTransaction =\r\n    window.IDBTransaction ||\r\n    window.webkitIDBTransaction ||\r\n    window.OIDBTransaction ||\r\n    window.msIDBTransaction,\r\n  dbVersion = 2;\r\n\r\nlet request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\nrequest.onsuccess = function (event) {\r\n  let db = event.target.result;\r\n\r\n  db.onerror = function (event) {\r\n    console.log(\"Error creating/accessing IndexedDB database\");\r\n  };\r\n};\r\nrequest.onupgradeneeded = function (event) {\r\n  let db = event.target.result;\r\n  let objectStore = db.createObjectStore(\"videoAnswers\", {\r\n    keyPath: \"questionId\",\r\n  });\r\n};\r\n\r\nlet reTrial = 3;\r\nclass Parent extends React.Component {\r\n  state = {\r\n    submitClicked: false,\r\n    submittedQuestions: [],\r\n    totalQuestions: 0,\r\n    progress: 0,\r\n    submissionInProgress: false,\r\n    submissionQueue: [],\r\n    // currentQuestion: \"\",\r\n    data: null,\r\n    totalMcq: 0,\r\n    totalVerbal: 0,\r\n    totalCoding: 0,\r\n    mcqQuestions: [],\r\n    sequenceOrder: \"\",\r\n    verbalQuestions: [],\r\n    verbalNew: false,\r\n    mcqNew: false,\r\n    codingNew: false,\r\n    suggestedVerbalDuration: 0,\r\n    suggestedCodingDuration: 0,\r\n    showDialog: false,\r\n    order: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n      window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\r\n    ReactGA.pageview(window.location.pathname);\r\n    const stateData =\r\n      this.props.history &&\r\n      this.props.history.location &&\r\n      this.props.history.location.state;\r\n    const totalMcq = stateData && stateData.totalMcq;\r\n    const totalVerbal = stateData && stateData.totalVerbal;\r\n    const totalCoding = stateData && stateData.totalCoding;\r\n    const newResponse =\r\n      stateData && stateData.data && stateData.data.newResponse;\r\n    let verbalCount = 0;\r\n    let mcqCount = 0;\r\n    let codingCount = 0;\r\n    let verbalDuration = 0,\r\n      codingDuration = 0,\r\n      mcqDuration = 0;\r\n    if (stateData) {\r\n      const { response } = stateData && stateData.data;\r\n      const { verbalQuestions, mcqQuestions, codingQuestions } = stateData;\r\n      verbalCount =\r\n        response && response.verbalQuestions && response.verbalQuestions.length;\r\n      mcqCount =\r\n        response && response.mcqQuestions && response.mcqQuestions.length;\r\n      codingCount =\r\n        response && response.codingQuestions && response.codingQuestions.length;\r\n      verbalQuestions &&\r\n        verbalQuestions.length > 0 &&\r\n        verbalQuestions.map((el) => {\r\n          verbalDuration += el.suggestedDuration;\r\n        });\r\n\r\n      mcqQuestions &&\r\n        mcqQuestions.length > 0 &&\r\n        mcqQuestions.map((el) => {\r\n          mcqDuration += el.suggestedDuration;\r\n        });\r\n      codingQuestions &&\r\n        codingQuestions.length > 0 &&\r\n        codingQuestions.map((el) => {\r\n          codingDuration += el.suggestedDuration;\r\n        });\r\n    }\r\n    this.setState({\r\n      ...stateData,\r\n      totalQuestions: totalMcq + totalVerbal + totalCoding,\r\n      verbalNew: newResponse\r\n        ? true\r\n        : verbalCount === totalVerbal\r\n          ? true\r\n          : false,\r\n      mcqNew: newResponse ? true : mcqCount === totalMcq ? true : false,\r\n      codingNew: newResponse\r\n        ? true\r\n        : codingCount === totalCoding\r\n          ? true\r\n          : false,\r\n      suggestedMcqDuration: mcqDuration,\r\n      suggestedVerbalDuration: verbalDuration,\r\n      suggestedCodingDuration: codingDuration,\r\n      order: stateData && stateData.order,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\r\n  }\r\n\r\n  keepOnPage(e) {\r\n    var message =\r\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  submitClickedHandler = () => {\r\n    this.setState({\r\n      submitClicked: true,\r\n      progress: 0,\r\n    });\r\n  };\r\n\r\n  totalQuestionsHandler = (val) => {\r\n    this.setState({\r\n      totalQuestions: val,\r\n    });\r\n  };\r\n\r\n  addToQueue = (body, quesData) => {\r\n    let submissionQueue = this.state.submissionQueue;\r\n    submissionQueue.push(body);\r\n\r\n    this.setState({\r\n      submissionQueue: submissionQueue,\r\n      // currentQuestion: quesData.quesNo,\r\n    });\r\n\r\n    this.callSubmitApi();\r\n  };\r\n\r\n  callSubmitApi = () => {\r\n    let _this = this;\r\n    let submissionQueue = this.state.submissionQueue;\r\n\r\n    if (\r\n      submissionQueue.length > 0 &&\r\n      this.state.submissionInProgress == false\r\n    ) {\r\n      console.log('insidee')\r\n      this.setState({\r\n        submissionInProgress: true,\r\n      });\r\n      let body = submissionQueue.shift();\r\n      _this.setState({\r\n        submissionQueue: submissionQueue,\r\n      });\r\n      reTrial -= 1;\r\n      let formdata = body.formdata;\r\n      let payload = body.payload;\r\n\r\n      localStorage.setItem(\"questionId\", body.payload.questionId);\r\n      localStorage.setItem(\"questionStatus\", body.payload.questionStatus);\r\n      localStorage.setItem(\"type\", body.payload.type);\r\n      var ajax = new XMLHttpRequest();\r\n      ajax.timeout = 1000 * 60 * 10; // time in milliseconds\r\n      ajax.upload.addEventListener(\r\n        \"progress\",\r\n        function progressHandler(event) {\r\n          var percent = (event.loaded / event.total) * 100;\r\n          _this.props.UserAction.addsingleanswerProgress({ progress: percent });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"load\",\r\n        async function completeHandler(event) {\r\n          console.log('complete Handler')\r\n          if (event.target.status == 200) {\r\n            _this.props.UserAction.addsingleanswerSuccess(\r\n              JSON.parse(event.target.responseText)\r\n            );\r\n            _this.setState({\r\n              submissionInProgress: false\r\n            })\r\n          } else {\r\n            if (reTrial) {\r\n              let submissionQueue = _this.state.submissionQueue;\r\n              submissionQueue.unshift(body);\r\n              await _this.setState({\r\n                submissionQueue: submissionQueue,\r\n                submissionInProgress: false,\r\n                showDialog: true,\r\n              });\r\n              _this.callSubmitApi();\r\n            } else {\r\n              _this.props.UserAction.addsingleanswerError({\r\n                singleAnswerError: true,\r\n              });\r\n\r\n              setTimeout(() => {\r\n                _this.setState({\r\n                  showDialog: false,\r\n                });\r\n              }, 2000);\r\n            }\r\n          }\r\n\r\n          _this.setState({\r\n            progress: 0,\r\n          });\r\n          _this.callSubmitApi();\r\n        },\r\n        false\r\n      );\r\n\r\n      ajax.addEventListener(\r\n        \"error\",\r\n        async function errorHandler(event) {\r\n          console.log('error Handler')\r\n          if (reTrial) {\r\n            let submissionQueue = _this.state.submissionQueue;\r\n            submissionQueue.unshift(body);\r\n            await _this.setState({\r\n              submissionQueue: submissionQueue,\r\n              submissionInProgress: false,\r\n              showDialog: true,\r\n            });\r\n            _this.callSubmitApi();\r\n          } else {\r\n            _this.props.UserAction.addsingleanswerError({\r\n              singleAnswerError: true,\r\n            });\r\n            setTimeout(() => {\r\n              _this.setState({\r\n                showDialog: false,\r\n              });\r\n            }, 2000);\r\n          }\r\n\r\n          // store.addNotification({\r\n          //   title: \"Error\",\r\n          //   message: \"Error Occured!\",\r\n          //   type: \"danger\",\r\n          //   container: \"top-center\",\r\n          //   animationIn: [\"animated\", \"fadeIn\"],\r\n          //   animationOut: [\"animated\", \"fadeOut\"],\r\n          //   dismiss: {\r\n          //     duration: 2000,\r\n          //   },\r\n          // });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"abort\",\r\n        function abortHandler(event) {\r\n          // _(\"status\").innerHTML = \"Upload Aborted\";\r\n        },\r\n        false\r\n      );\r\n      ajax.open(\r\n        \"PATCH\",\r\n        `${serverAddress}/response/submission?responseId=${payload.responseId}&questionId=${payload.questionId}&questionStatus=${payload.questionStatus}&type=${payload.type}`\r\n      );\r\n      ajax.setRequestHeader(\"Authorization\", localStorage.getItem(\"tokenNew\"));\r\n      ajax.send(formdata);\r\n    } else {\r\n      // this.setState({\r\n      //   submissionInProgress: false,\r\n      // });\r\n    }\r\n  };\r\n\r\n  upload = async (formdata, payload, indexDbData, quesNo, questionType) => {\r\n    // formdata.forEach(item => { console.log(item) })\r\n    this.addToQueue(\r\n      {\r\n        formdata: formdata,\r\n        payload: payload,\r\n      },\r\n      { no: quesNo, type: questionType }\r\n    );\r\n\r\n    this.decreaseCountHandler(questionType);\r\n\r\n    let request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\n    request.onsuccess = function (event) {\r\n      let db = event.target.result;\r\n      let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n      transaction\r\n        .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n        .add(indexDbData);\r\n\r\n      db.onerror = function (event) {\r\n        console.log(\"Error creating/accessing IndexedDB database\");\r\n      };\r\n    };\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerProgress &&\r\n      !nextProps.UserReducer.isUserquestionDataAdded\r\n    ) {\r\n      currentState.progress = nextProps.UserReducer.singleAnswerProgress;\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isUserquestionDataAdded &&\r\n      nextProps.UserReducer.singleAnswerData\r\n    ) {\r\n      nextProps.UserReducer.isUserquestionDataAdded = false;\r\n      reTrial = 3;\r\n      currentState.showDialog = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"success\",\r\n            // response: nextProps.UserReducer.singleAnswerData,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      let request = indexedDB.open(\"elephantFiles\", 1);\r\n\r\n      request.onsuccess = function (event) {\r\n        let db = event.target.result;\r\n        let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n        transaction\r\n          .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n          .delete(`${localStorage.getItem(\"questionId\")}`);\r\n\r\n        db.onerror = function (event) {\r\n          console.log(\"Error creating/accessing IndexedDB database\");\r\n        };\r\n      };\r\n\r\n      let submittedQuestions = currentState.submittedQuestions;\r\n      submittedQuestions.push(localStorage.getItem('questionId'));\r\n      currentState.submittedQuestions = submittedQuestions;\r\n      if (\r\n        currentState.submittedQuestions.length < currentState.totalQuestions\r\n      ) {\r\n        currentState.progress = 0;\r\n      }\r\n\r\n      // store.addNotification({\r\n      //   title: \"Success\",\r\n      //   message: `Question ${submittedQuestions.length} Submitted successfully`,\r\n      //   type: \"success\",\r\n      //   container: \"top-center\",\r\n      //   animationIn: [\"animated\", \"fadeIn\"],\r\n      //   animationOut: [\"animated\", \"fadeOut\"],\r\n      //   dismiss: {\r\n      //     duration: 2000,\r\n      //   },\r\n      // });\r\n      if (\r\n        currentState.submittedQuestions.length == currentState.totalQuestions\r\n      ) {\r\n        const payload = {\r\n          responseId:\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          formdata: { status: \"FINISHED\" },\r\n        };\r\n        nextProps.UserAction.updateResponse(payload);\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Congratulation\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          nextProps.history.push({\r\n            pathname: \"/congratulation\",\r\n          });\r\n        }, 200);\r\n      }\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerError\r\n    ) {\r\n      nextProps.UserReducer.singleAnswerError = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        isError: true,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"error\",\r\n            response: nextProps.UserReducer.singleAnswerError,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      setTimeout(() => {\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Error Page\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        nextProps.history.push({\r\n          pathname: \"/error\",\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n  changeSequence = (type) => {\r\n    const { order } = this.state;\r\n    const id =\r\n      order && order.length > 0 && order.findIndex((el) => el === type);\r\n    if (id !== -1 || id !== order.length - 1)\r\n      setTimeout(() => {\r\n        this.setState({ sequenceOrder: order[id + 1] });\r\n      }, 2000);\r\n  };\r\n  decreaseCountHandler = (type) => {\r\n    type === \"verbal\"\r\n      ? this.setState({ totalVerbal: this.state.totalVerbal - 1 })\r\n      : type === \"coding\"\r\n        ? this.setState({ totalCoding: this.state.totalCoding - 1 })\r\n        : this.setState({ totalMcq: this.state.totalMcq - 1 });\r\n  };\r\n\r\n  render() {\r\n    // console.log('dataaaaa',this.state)\r\n    const {\r\n      sequenceOrder,\r\n      totalMcq,\r\n      totalVerbal,\r\n      totalCoding,\r\n      submitClicked,\r\n      totalQuestions,\r\n      submittedQuestions,\r\n      progress,\r\n      verbalNew,\r\n      mcqNew,\r\n      codingNew,\r\n      suggestedMcqDuration,\r\n      suggestedVerbalDuration,\r\n      suggestedCodingDuration,\r\n      order,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className='main-parent'>\r\n        <Dialog\r\n          className='warning-dialog-submit'\r\n          open={this.state.showDialog}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'\r\n        >\r\n          <div className='warning-dialog-main'>\r\n            <div className='unstable-image'>\r\n              <img src={warning} />\r\n            </div>\r\n            <div className='warning-dialog-heading'>\r\n              Failed to submit response, Being retried\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n\r\n        {submitClicked && totalMcq < 1 && totalVerbal < 1 && totalCoding < 1 ? (\r\n          <Submitting\r\n            progress={this.state.progress}\r\n            submittedQuestions={this.state.submittedQuestions}\r\n            totalQuestions={this.state.totalQuestions}\r\n            responseId={\r\n              this.state &&\r\n              this.state.data &&\r\n              this.state.data.response &&\r\n              this.state.data.response.id\r\n            }\r\n          />\r\n        ) : verbalNew && sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <VerbalSummary\r\n            totalCount={totalVerbal}\r\n            duration={suggestedVerbalDuration}\r\n            continue={() => this.setState({ verbalNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <Interview\r\n            submitClickedHandler={() =>\r\n              totalMcq === 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"verbal\")\r\n            }\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"verbal\")}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : codingNew && sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingSummary\r\n            totalCount={totalCoding}\r\n            duration={suggestedCodingDuration}\r\n            continue={() => this.setState({ codingNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingInterview\r\n            submitClickedHandler={() =>\r\n              totalVerbal === 0 && totalMcq === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"coding\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"coding\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : mcqNew && sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqSummary\r\n            totalCount={totalMcq}\r\n            duration={suggestedMcqDuration}\r\n            continue={() => this.setState({ mcqNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqInteview\r\n            submitClickedHandler={() =>\r\n              totalVerbal == 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"mcq\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"mcq\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : (\r\n          <div\r\n            style={{\r\n              padding: \"20px 0\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress style={{ color: \"#04724D\" }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Parent));\r\n","module.exports = __webpack_public_path__ + \"static/media/login_page_logo.d598eaad.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.a736dff5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Submitting.baee2f23.svg\";"],"sourceRoot":""}
{"version":3,"sources":["containers/Interview/ReadQuestion.js","containers/Interview/interview.js","containers/Interview/submitting.js","containers/Interview/mcqQuestions.js","utils/utility.js","containers/Interview/PreviewInstructionsVerbal.js","containers/Interview/PreviewInstructionsMCQ.js","containers/Interview/PreviewInstructionsCoding.js","containers/Interview/Parent.js","assets/images/login_page_logo.png","assets/images/warning.svg","assets/images/Submitting.svg"],"names":["ReadQuestion","props","remainingTimeHandler","remainingTime","state","this","responseId","type","question","payload","questionId","id","questionStatus","UserAction","updateResponse","className","durationTime","nextBtn","handleTimer","readQuestionTimerEnds","isPlaying","quesNo","dangerouslySetInnerHTML","__html","QuestionText","Component","connect","UserReducer","dispatch","bindActionCreators","Actions","withRouter","verbalSkipableValue","parseInt","process","readQuestionTime","remainingGlobal","scheduleIdGlobal","candidateIdGlobal","timedate","activeStep","ScreenFileGlobal","ScreenFileNameGlobal","Interview","selectionOperation","events","data","level","metadata","timestamp","Date","toISOString","push","time","timerInput","setState","addEventProctoring","addEvent","event","handleStart","clockRef","current","start","handleTimeUpdate","handleNext","questiondata","a","retake","restartTimer","handleDownload","quesdata","map","item","getStepContent","showReadQuestion","retakesAvailable","totalRetakes","questionData","length","val","Questionstime","Number","handleFinish","submitClicked","submitClickedHandler","handlePriorUpload","file","name","skipable","setTimeout","formdata","FormData","append","JSON","stringify","timeTaken","indexDbData","videoFile","videoFileName","screenFile","screenFileName","upload","faceNotDetected","handleStartCaptureClick","isSafari","test","navigator","userAgent","mediaRecorderRef","MediaRecorder","webcamRef","stream","mimeType","audioBitsPerSecond","videoBitsPerSecond","capturing","childRef","startCapture","addEventListener","handleDataAvailable","handleAbort","abortCapture","stop","recordedChunks","handleStopCaptureClick","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","style","href","window","revokeObjectURL","File","ScheduleId","CandidateId","filedata","videofilename","size","concat","showDialog","stopCapture","capture","imgSrc","getScreenshot","image","substring","screenShot","verifyScreenshot","base64","retakeHandler","showRetakeDialog","retakeClicked","handleEarlySubmit","handleTimerEnd","React","createRef","timer","audioNew","ques","audio","video","questions","isDataArrived","submittedQuestions","totalQuestions","submissionQueue","noOfRetakes","skipableArrived","vid","response","candidateId","scheduleId","verbalQuestions","text","suggestedDuration","questionType","toLowerCase","e","preventDefault","location","pathname","includes","visibilityState","getMicrophone","today","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","mediaDevices","getUserMedia","stepIndex","steparray","value","console","log","ScreenFileTemp","ScreenFileNameTemp","localStorage","setItem","xyz","parse","getItem","questiondata1","quesreadtime","steps","i","onCopy","onCut","onPaste","ref","onScreenAccess","onUserStop","onRecordStart","onRecordStop","onVideoFile","onAbort","open","aria-labelledby","aria-describedby","onClick","screen","width","class","height","margin","onTick","src","amplitude","disableBtn","display","fontSize","marginLeft","variant","justifyContent","marginRight","marginTop","nextProps","currentState","isScreenShotDataArrived","faces","Submitting","show","history","pushState","onpopstate","keepOnPage","onbeforeunload","Page","removeEventListener","message","returnValue","submitting","color","padding","transform","progress","backgroundColor","borderRadius","textAlign","toFixed","mcqSkipableValue","durationGlobal","McqQuestions","changeOption","label","options","isMultiCheck","el","index","currentData","totalLength","McqData","option","disablebtn","chosenOption","isSkipped","find","details","mcqQuestions","multi","correct","timeOut","duration","flexWrap","checked","onChange","disabled","secondsToHours","hours","Math","floor","min","sec","Instructions","count","totalTime","totalCount","responseIdresponseId","Typography","alt","birballogo","Button","continue","PreviewInstructionsMCQ","CodingInstructions","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","request","IDBTransaction","webkitIDBTransaction","OIDBTransaction","msIDBTransaction","onsuccess","target","result","onerror","onupgradeneeded","createObjectStore","keyPath","reTrial","Parent","submissionInProgress","currentQuestion","totalMcq","totalVerbal","totalCoding","sequenceOrder","verbalNew","mcqNew","codingNew","suggestedVerbalDuration","suggestedCodingDuration","order","totalQuestionsHandler","addToQueue","quesData","callSubmitApi","_this","shift","ajax","XMLHttpRequest","timeout","percent","loaded","total","addsingleanswerProgress","status","addsingleanswerSuccess","responseText","unshift","addsingleanswerError","singleAnswerError","serverAddress","setRequestHeader","send","no","decreaseCountHandler","db","transaction","objectStore","add","changeSequence","findIndex","ReactGA","pageview","stateData","newResponse","verbalCount","mcqCount","codingCount","verbalDuration","codingDuration","mcqDuration","codingQuestions","suggestedMcqDuration","Dialog","warning","CircularProgress","singleAnswerProgress","isUserquestionDataAdded","singleAnswerData","detail","delete","isError","module","exports"],"mappings":"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","file":"static/js/6.14d9058a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './readQuestion.scss';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TimerComponent } from './timerComponent';\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport class ReadQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n       if(this.props && this.props.responseId && this.props.type && this.props.question){\r\n        const payload={\r\n            questionId:this.props.question.id,\r\n            responseId:this.props.responseId,\r\n            type:this.props.type,\r\n            questionStatus:2\r\n\r\n        }\r\n           this.props.UserAction.updateResponse(payload)\r\n       }\r\n    };\r\n\r\n    remainingTimeHandler=(remainingTime)=>{\r\n       return remainingTime;\r\n      }\r\n\r\n    render() {\r\n        // console.log(this.props.question,this.props.quesNo)\r\n        return (\r\n            <div className=\"read-question-main\">\r\n                <div className=\"read-question-heading\">\r\n                    Live Interview\r\n                </div>\r\n                <div className=\"read-question-body\">\r\n                    <div className=\"read-question-timer\">\r\n                        <TimerComponent durationTime={this.props.durationTime}\r\n                            className=\"timer-new\"\r\n                            nextBtn={true}\r\n                            handleTimer={this.props.readQuestionTimerEnds}\r\n                            remainingTimeHandler={this.remainingTimeHandler}\r\n                            isPlaying={true}\r\n                         \r\n                        />\r\n                    </div>\r\n                    <div className=\"read-question-time-left\">Time left to read the question</div>\r\n                    <div className=\"read-question-ques-div\">\r\n                    <div className=\"read-question-time-left\">Please Read Question / Prepare Answer</div>\r\n                    <div className=\"ques-wrapper\">\r\n                    <div className=\"question-number\">Q.{this.props.quesNo} </div>\r\n                    <div className=\"question-text-new\"  dangerouslySetInnerHTML={{\r\n                __html: this.props.question && this.props.question.QuestionText,\r\n              }}></div>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      UserReducer: state.UserReducer,\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n      UserAction: bindActionCreators(Actions, dispatch),\r\n    };\r\n  };\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(ReadQuestion));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../styles/interview.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ReadQuestion from \"./ReadQuestion\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet verbalSkipableValue = parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_VERBAL_SKIP_TIME)\r\n  : 10;\r\n\r\nlet readQuestionTime = parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  ? parseInt(process.env.REACT_APP_READ_QUESTION)\r\n  : 10;\r\n\r\nlet remainingGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\n\r\nexport class Interview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      restartTimer: false,\r\n      audioNew: null,\r\n      ques: [],\r\n      capturing: false,\r\n      activeStep: 0,\r\n      audio: false,\r\n      video: false,\r\n      recordedChunks: [],\r\n      question: [],\r\n      questions: [],\r\n      videofilename: \"\",\r\n      isDataArrived: true,\r\n      questionData: [],\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      submittedQuestions: [],\r\n      totalQuestions: 0,\r\n      submissionQueue: [],\r\n      responseId: \"\",\r\n      noOfRetakes: 0,\r\n      showDialog: false,\r\n      showReadQuestion: false,\r\n      totalRetakes: 0,\r\n      retakesAvailable: 0,\r\n      retake: false,\r\n      showRetakeDialog: false,\r\n      remainingTime: 0,\r\n      isPlaying: true,\r\n      skipable: false,\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timerInput: 0,\r\n      time: \"\",\r\n      events: [],\r\n      skipableArrived:false\r\n      // ScreenFile:'',\r\n      // ScreenFileName:''\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props && this.props.data) {\r\n      const { id, candidateId, scheduleId } =\r\n        this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response;\r\n      await this.setState({\r\n        responseId: id,\r\n        ScheduleId: scheduleId,\r\n        CandidateId: candidateId,\r\n      });\r\n\r\n      scheduleIdGlobal = scheduleId;\r\n      candidateIdGlobal = candidateId;\r\n      let questionData = [];\r\n      this.props.data &&\r\n        this.props.data.verbalQuestions &&\r\n        this.props.data.verbalQuestions.map((item) => {\r\n          questionData.push({\r\n            id: item.id,\r\n            QuestionText: item.text,\r\n            Questionstime: item.suggestedDuration,\r\n          });\r\n        });\r\n      this.setState({\r\n        questionData: questionData,\r\n        totalQuestions: questionData.length,\r\n        showReadQuestion: true,\r\n      });\r\n\r\n      let timerInput = 0;\r\n      if (questionData.length > 0) {\r\n        const val = questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n\r\n      this.props &&\r\n        this.props.data &&\r\n        this.props.data.data &&\r\n        this.props.data.data.response &&\r\n        this.props.data.data.response.questionType &&\r\n        this.props.data.data.response.questionType.length > 0 &&\r\n        this.props.data.data.response.questionType.map((item) => {\r\n          if (item.name.toLowerCase() == \"verbal\") {\r\n            if (item.retake) {\r\n              this.setState({\r\n                totalRetakes: item.retake,\r\n                retakesAvailable: item.retake - 1,\r\n              });\r\n            }\r\n            if (item.skipable && this.state.timerInput) {\r\n              this.setState({\r\n                skipableArrived:true\r\n              })\r\n              let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n              setTimeout(() => {\r\n                this.setState({\r\n                  skipable: true,\r\n                });\r\n              }, time);\r\n            }\r\n          }\r\n        });\r\n      document.addEventListener(\"contextmenu\", (e) => {\r\n        e.preventDefault();\r\n        const { events } = this.state;\r\n        const data = {\r\n          type: \"browser\",\r\n          level: 2,\r\n          metadata: \"Right click triggered\",\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n        events.push({\r\n          ...data,\r\n          time: this.state.timerInput - this.state.remainingTime,\r\n        });\r\n        id && this.setState({ events: events });\r\n        id && this.addEventProctoring(id, data);\r\n      });\r\n      document.addEventListener(\"visibilitychange\", (event) => {\r\n        if (window.location.pathname.includes(\"/interview-process\")) {\r\n          if (document.visibilityState == \"visible\") {\r\n            const { events } = this.state;\r\n            const data = {\r\n              type: \"browser\",\r\n              level: 2,\r\n              metadata: \"tab is active\",\r\n              timestamp: new Date().toISOString(),\r\n            };\r\n            events.push({\r\n              ...data,\r\n              time: this.state.timerInput - this.state.remainingTime,\r\n            });\r\n            id && this.setState({ events: events });\r\n            id && this.addEventProctoring(id, data);\r\n          } else {\r\n            const { events } = this.state;\r\n            const data = {\r\n              type: \"browser\",\r\n              level: 2,\r\n              metadata: \"tab is inactive\",\r\n              timestamp: new Date().toISOString(),\r\n            };\r\n            events.push({\r\n              ...data,\r\n              time: this.state.timerInput - this.state.remainingTime,\r\n            });\r\n            id && this.setState({ events: events });\r\n            id && this.addEventProctoring(id, data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.getMicrophone();\r\n\r\n    var today = new Date();\r\n    var date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n\r\n    var time =\r\n      today.getHours() + \"-\" + today.getMinutes() + \"-\" + today.getSeconds();\r\n\r\n    var dateTime = date + \"-\" + time;\r\n    this.setState({\r\n      timedate: dateTime,\r\n      // disble_next_button: true,\r\n    });\r\n    timedate = dateTime;\r\n  }\r\n\r\n  selectionOperation = (type) => {\r\n    const { responseId } = this.state;\r\n    const { events } = this.state;\r\n    const data = {\r\n      type: \"browser\",\r\n      level: 2,\r\n      metadata: `${type} action triggered`,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    events.push({\r\n      ...data,\r\n      time: this.state.timerInput - this.state.remainingTime,\r\n    });\r\n    responseId && this.setState({ events: events });\r\n    responseId && this.addEventProctoring(responseId, data);\r\n  };\r\n\r\n  addEventProctoring = (id, data) => {\r\n    this.props.UserAction.addEvent({\r\n      responseId: id,\r\n      event: data,\r\n    });\r\n  };\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isScreenShotDataArrived &&\r\n      nextProps.UserReducer.screenShot &&\r\n      nextProps.UserReducer.screenShot.data\r\n    ) {\r\n      nextProps.UserReducer.isScreenShotDataArrived = false;\r\n      if (!nextProps.UserReducer.screenShot.data.faces) {\r\n        currentState.faceNotDetected = currentState.faceNotDetected + 1;\r\n      }\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n\r\n  // isStepSkipped = (step) => {\r\n  //   return this.state.skipped.has(step);\r\n  // };\r\n\r\n  handleStart = () => {\r\n    this.clockRef.current.start();\r\n  };\r\n\r\n  handleTimeUpdate = (time, remainingTime) => {\r\n    if (this.state.time != time) {\r\n      this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  handleNext = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      await this.setState({ restartTimer: true, isPlaying: true });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n\r\n      this.getStepContent(questiondata, this.state.activeStep);\r\n\r\n      await this.setState({\r\n        activeStep: this.state.activeStep + 1,\r\n        showReadQuestion: true,\r\n        retakesAvailable: this.state.totalRetakes - 1,\r\n      });\r\n      activeStep = activeStep + 1;\r\n      let timerInput = 0;\r\n      if (this.state.questionData.length > 0) {\r\n        const val =\r\n          this.state.questionData[this.state.activeStep].Questionstime;\r\n        timerInput = Number(val);\r\n        await this.setState({\r\n          timerInput: timerInput,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.activeStep];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}.\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: value,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFinish = async (questiondata) => {\r\n    if (!this.state.retake) {\r\n      this.setState({\r\n        submitClicked: true,\r\n        // isPlaying: true,\r\n      });\r\n      await this.handleDownload(questiondata);\r\n      let quesdata = [];\r\n\r\n      questiondata.map((item) => {\r\n        quesdata.push(item.id);\r\n      });\r\n      const question = [];\r\n      question.push(this.getStepContent(this.state.activeStep));\r\n\r\n      this.props.submitClickedHandler();\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (this.state.skipable && this.state.timerInput) {\r\n      this.setState({\r\n        skipable: false,\r\n      });\r\n      let time = (verbalSkipableValue + readQuestionTime) * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          skipable: true,\r\n        });\r\n      }, time);\r\n    }\r\n    var formdata = new FormData();\r\n    formdata.append(\"video\", file, name);\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    formdata.append(\"events\", JSON.stringify(this.state.events));\r\n    const payload = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n      // screenFile : ScreenFileGlobal,\r\n      // screenFileName : ScreenFileNameGlobal\r\n    };\r\n    let quesNo = this.state.activeStep + 1;\r\n    let questionType = \"verbal\";\r\n    let indexDbData = {\r\n      questionId: quesdata[this.state.activeStep],\r\n      responseId: this.state.responseId,\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n      events: JSON.stringify(this.state.events),\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: quesdata[this.state.activeStep],\r\n          responseId: this.state.responseId,\r\n          type: \"verbal\",\r\n          questionStatus: 3,\r\n          events: this.state.events,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n      questionId: quesdata[this.state.activeStep],\r\n      type: \"verbal\",\r\n      questionStatus: 3,\r\n    });\r\n    // remainingGlobal = 0;\r\n    // clearInterval(Interval);\r\n\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n    // setTimeout(()=>{\r\n    //   this.childRef.current.startCapture()\r\n    // },1000)\r\n    // remainingGlobal = 0;\r\n\r\n    // clearInterval(Interval);\r\n    // Interval = setInterval(() => {\r\n    //   remainingGlobal += 1;\r\n    // }, 1000);\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAbort = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.childRef.current.abortCapture();\r\n      this.mediaRecorderRef.current.stop();\r\n      this.mediaRecorderRef.current.addEventListener(\"stop\", () => {\r\n        this.setState({\r\n          recordedChunks: [],\r\n        });\r\n      });\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n\r\n      this.handleStartCaptureClick();\r\n    }\r\n  };\r\n\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    //  let IntervalScreen = setInterval(() => {\r\n    if (this.state.recordedChunks.length) {\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`;\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.activeStep}.mp4`,\r\n        quesdata\r\n      );\r\n      // clearInterval(IntervalScreen)\r\n    }\r\n    // }, 1000);\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    if (data.size > 0) {\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      remainingGlobal = this.state.timerInput - this.state.remainingTime;\r\n\r\n      // setTimeout(()=>{\r\n      if (this.state.activeStep == this.state.questionData.length - 1) {\r\n        this.handleFinish(this.state.questionData);\r\n      } else {\r\n        this.handleNext(this.state.questionData);\r\n      }\r\n      // },2000)\r\n    }\r\n  };\r\n\r\n  handleTimer = async (questionData) => {\r\n    await this.setState({\r\n      restartTimer: false,\r\n      showDialog: false,\r\n      retake: false,\r\n      isPlaying: false,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick(questionData);\r\n    }, 2000);\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  capture = () => {\r\n    const imgSrc =\r\n      this.webcamRef &&\r\n      this.webcamRef.current &&\r\n      this.webcamRef.current.getScreenshot();\r\n    let image =\r\n      imgSrc && imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        ? imgSrc.substring(\"data:image/jpeg;base64\".length + 1)\r\n        : null;\r\n    this.setState({\r\n      screenShot: image,\r\n    });\r\n\r\n    this.props.UserAction.verifyScreenshot({\r\n      base64: image,\r\n    });\r\n  };\r\n\r\n  readQuestionTimerEnds = () => {\r\n    this.setState({ showReadQuestion: false });\r\n  };\r\n\r\n  retakeHandler = async () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      await this.setState({\r\n        retakesAvailable: this.state.retakesAvailable - 1,\r\n        showRetakeDialog: false,\r\n        restartTimer: true,\r\n        retake: true,\r\n        showDialog: false,\r\n        events: [],\r\n      });\r\n      const payload = {\r\n        questionId: this.state.questionData[this.state.activeStep].id,\r\n        responseId: this.state.responseId,\r\n        type: \"verbal\",\r\n        questionStatus: 2,\r\n      };\r\n      this.props.UserAction.updateResponse(payload);\r\n      this.handleAbort();\r\n      this.setState({\r\n        restartTimer: false,\r\n      });\r\n      if (\r\n        this.state.skipable &&\r\n        this.state.timerInput &&\r\n        !this.state.showReadQuestion\r\n      ) {\r\n        this.setState({\r\n          skipable: false,\r\n        });\r\n        let time = verbalSkipableValue * 1000;\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            skipable: true,\r\n          });\r\n        }, time);\r\n      }\r\n    }\r\n  };\r\n\r\n  retakeClicked = () => {\r\n    if (\r\n      !(\r\n        this.state.totalRetakes - this.state.retakesAvailable ===\r\n        this.state.totalRetakes\r\n      ) &&\r\n      this.state.totalRetakes - this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({ showRetakeDialog: true });\r\n    }\r\n  };\r\n\r\n  handleEarlySubmit = () => {\r\n    if (\r\n      this.state.skipable &&\r\n      this.state.retakesAvailable &&\r\n      this.state.retakesAvailable > 0\r\n    ) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else if (this.state.skipable) {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  handleTimerEnd = () => {\r\n    if (this.state.retakesAvailable && this.state.retakesAvailable > 0) {\r\n      this.setState({\r\n        showDialog: true,\r\n      });\r\n    } else {\r\n      this.handleTimer(this.state.questionData);\r\n    }\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n\r\n  render() {\r\n    let questiondata = this.state.questionData;\r\n    localStorage.setItem(\"questiondata\", JSON.stringify(questiondata));\r\n    var xyz = JSON.parse(localStorage.getItem(\"questiondata\"));\r\n    let questiondata1 = [];\r\n    let quesreadtime = [];\r\n    xyz.map((item) => {\r\n      questiondata1.push(parseInt(item.Questionstime));\r\n      quesreadtime.push(10000);\r\n    });\r\n\r\n    // var n = questiondata1[this.state.act_num];\r\n    // var r = quesreadtime[this.state.act_num];\r\n\r\n    const steps = [];\r\n    for (let i = 1; i <= questiondata.length; i++) {\r\n      steps.push(i);\r\n    }\r\n\r\n    // const videoConstraints = {\r\n    //   facingMode: { exact: \"user\" },\r\n    // };\r\n\r\n    return (\r\n      <div\r\n        onCopy={() => this.selectionOperation(\"Copy\")}\r\n        onCut={() => this.selectionOperation(\"Cut\")}\r\n        onPaste={() => this.selectionOperation(\"Paste\")}\r\n      >\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        {localStorage.getItem(\"login\") && localStorage.getItem(\"preview\") ? (\r\n          this.state.showReadQuestion ? (\r\n            <ReadQuestion\r\n              durationTime={readQuestionTime}\r\n              question={this.state.questionData[this.state.activeStep]}\r\n              quesNo={this.state.activeStep + 1}\r\n              responseId={this.state.responseId}\r\n              type='verbal'\r\n              readQuestionTimerEnds={this.readQuestionTimerEnds}\r\n            />\r\n          ) : (\r\n            <div className='interview-main-div'>\r\n              <Dialog\r\n                className='first-dialog-submit'\r\n                open={this.state.showDialog}\r\n                // onClose={() => {\r\n                //   this.setState({\r\n                //     showDialog: false,\r\n                //   });\r\n                // }}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n              >\r\n                <div className='main-dialog-heading'>\r\n                  Do you want to retake or submit?\r\n                </div>\r\n                <div className='main-dialog-sub-heading'>\r\n                  You have {this.state.retakesAvailable} retakes left.\r\n                </div>\r\n                <div className='main-dialog-buttons-wrapper'>\r\n                  <div\r\n                    className='dialog-retry-button'\r\n                    onClick={this.retakeHandler}\r\n                  >\r\n                    Retake\r\n                  </div>\r\n                  <div\r\n                    className='dialog-submit-button'\r\n                    onClick={this.handleTimer}\r\n                  >\r\n                    Submit\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n\r\n              {this.state.retakesAvailable &&\r\n              this.state.retakesAvailable > 0 ? (\r\n                <Dialog\r\n                  className='first-dialog-submit'\r\n                  open={this.state.showRetakeDialog}\r\n                  aria-labelledby='alert-dialog-title'\r\n                  aria-describedby='alert-dialog-description'\r\n                >\r\n                  <div className='main-dialog-heading'>\r\n                    Are you sure you want to retake?\r\n                  </div>\r\n                  <div className='main-dialog-sub-heading'>\r\n                    You have {this.state.retakesAvailable} retakes left.\r\n                  </div>\r\n                  <div className='main-dialog-buttons-wrapper'>\r\n                    <div\r\n                      className='dialog-retry-button'\r\n                      onClick={() => {\r\n                        this.setState({ showRetakeDialog: false });\r\n                      }}\r\n                    >\r\n                      No\r\n                    </div>\r\n                    <div\r\n                      className='dialog-submit-button'\r\n                      onClick={this.retakeHandler}\r\n                    >\r\n                      Yes\r\n                    </div>\r\n                  </div>\r\n                </Dialog>\r\n              ) : null}\r\n              <div className='interview-row-wrapper'>\r\n                <div className='Inter-1'>\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-heading'>\r\n                      <Typography>Live Interview</Typography>\r\n                    </div>\r\n                  ) : null}\r\n                  {window.screen.width > 1024 ? (\r\n                    <div className='previews-subHeading1'>\r\n                      {/* <Typography>Please don't try to refer anything from any other means.</Typography> */}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className='inter-2 total-questions'>\r\n                  <div>\r\n                    <div className='questions-wrapper'>\r\n                      <div className='total'> Total Questions</div>\r\n                      <div className='circle-interview'>\r\n                        {this.state.activeStep + 1}/{questiondata.length}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class='fluid-container'>\r\n                <div className='interview-row-wrapper-new'>\r\n                  <div className='left-interview'>\r\n                    <div className='video-div'>\r\n                      <div className='interview-video-new'>\r\n                        <WebcamComponent\r\n                          handleStartCaptureClick={this.handleStartCaptureClick}\r\n                          handleAbort={this.handleAbort}\r\n                          handleDataAvailable={this.handleDataAvailable}\r\n                          handleStopCaptureClick={this.handleStopCaptureClick}\r\n                          capturing={this.state.capturing}\r\n                          webcamRef={this.webcamRef}\r\n                          recordedChunks={this.state.recordedChunks}\r\n                          handleDownload={this.handleDownload}\r\n                        />\r\n\r\n                        <div className='bottom-video-div'>\r\n                          <div className='retake-button-div'>\r\n                            <div\r\n                              className={\r\n                                !this.state.totalRetakes ||\r\n                                this.state.totalRetakes -\r\n                                  this.state.retakesAvailable ==\r\n                                  this.state.totalRetakes\r\n                                  ? \"retake-disabled-button\"\r\n                                  : \"retake-button\"\r\n                              }\r\n                              onClick={this.retakeClicked}\r\n                            >\r\n                              <span>\r\n                                <ReplayIcon\r\n                                  style={{\r\n                                    height: \"20px\",\r\n                                    width: \"20px\",\r\n                                    margin: \"0 5px\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                              Retake{\" \"}\r\n                              {this.state.totalRetakes ? (\r\n                                <span>\r\n                                  {\" \"}\r\n                                  {this.state.totalRetakes -\r\n                                    this.state.retakesAvailable}{\" \"}\r\n                                  / {this.state.totalRetakes}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className='timer-button-div'>\r\n                            <div className='timer-button'>\r\n                              <TimerComponent\r\n                                // nextBtn={this.state.disble_next_button}\r\n                                durationTime={this.state.timerInput}\r\n                                // disableBtn={this.state.restartTimer}\r\n                                // remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  // this.handleTimer(questiondata)\r\n                                  console.log(\"handle\");\r\n                                }}\r\n                                isPlaying={true}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                              {this.state.time}\r\n                            </div>\r\n                          </div>\r\n                          <div className='audio-analyser-div'>\r\n                            <div className='audio-img'>\r\n                              {\" \"}\r\n                              <img src={audio} />{\" \"}\r\n                            </div>\r\n                            {this.state.audioNew ? (\r\n                              <div>\r\n                                {\" \"}\r\n                                <AudioAnalyser\r\n                                  amplitude={() => null}\r\n                                  audio={this.state.audioNew}\r\n                                />{\" \"}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                          <div className='submit-button-div'>\r\n                            <div\r\n                              className={\r\n                                this.state.skipable\r\n                                  ? \"submit-button\"\r\n                                  : \"submit-button-disabled\"\r\n                              }\r\n                              onClick={this.handleEarlySubmit}\r\n                            >\r\n                              Submit\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='total-questions-new'>\r\n                          <div>\r\n                            <div className='questions-wrapper'>\r\n                              <div className='total'>Total Questions</div>\r\n                              <div className='circle-interview'>\r\n                                {this.state.activeStep + 1}/\r\n                                {questiondata.length}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {this.state.timerInput !== 0 &&\r\n                            window.screen.width <= 1024 && (\r\n                              <TimerComponent\r\n                                durationTime={this.state.timerInput}\r\n                                disableBtn={this.state.restartTimer}\r\n                                remainingTimeHandler={this.remainingTimeHandler}\r\n                                handleTimer={() => {\r\n                                  this.handleTimerEnd();\r\n                                }}\r\n                                isPlaying={this.state.isPlaying}\r\n                                className='timer-2'\r\n                                onTick={(time, remainingTime) => {\r\n                                  this.handleTimeUpdate(time, remainingTime);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='right-interview'>\r\n                    <div className='question-div'>\r\n                      {this.state.timerInput !== 0 &&\r\n                        window.screen.width > 1024 && (\r\n                          <TimerComponent\r\n                            // nextBtn={this.state.disble_next_button}\r\n                            durationTime={this.state.timerInput}\r\n                            remainingTimeHandler={this.remainingTimeHandler}\r\n                            disableBtn={this.state.restartTimer}\r\n                            handleTimer={() => {\r\n                              this.handleTimerEnd();\r\n                            }}\r\n                            isPlaying={this.state.isPlaying}\r\n                            className='timer-1'\r\n                          />\r\n                        )}\r\n\r\n                      <div className='content-div'>\r\n                        <div className='qustion-content-div'>\r\n                          {this.state.activeStep === steps.length ? (\r\n                            <div></div>\r\n                          ) : (\r\n                            <div>\r\n                              <span\r\n                                className='laptop-only'\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  fontSize: \"12px\",\r\n                                  marginLeft: \"20px\",\r\n                                }}\r\n                              >\r\n                                Please Answer\r\n                              </span>\r\n                              <div className='question'>\r\n                                <div>\r\n                                  {this.getStepContent(\r\n                                    questiondata,\r\n                                    this.state.activeStep\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className='buttons-wrapper'>\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className={\r\n                              this.state.skipable\r\n                                ? \"Button-next\"\r\n                                : \"Button-next-disabled\"\r\n                            }\r\n                            style={{width:this.state.skipableArrived ? '200px' : '350px'}}\r\n                            onClick={this.handleEarlySubmit}\r\n                          >\r\n                           {\r\n                             this.state.skipableArrived ? <span>Next Question</span>\r\n                             :  <span>Next Question{' '}{`in ${this.state.remainingTime} seconds`}</span>\r\n                           }\r\n                            <span>\r\n                              <ArrowForwardIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n\r\n                          <Button\r\n                            // disabled={this.state.disable_submit_btn}\r\n                            variant='contained'\r\n                            className='Button-retry'\r\n                            onClick={this.retakeClicked}\r\n                          >\r\n                            <span>Retake</span>\r\n                            <span>\r\n                              <ReplayIcon\r\n                                style={{ height: \"15px\", width: \"15px\" }}\r\n                              />\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"end\",\r\n                  marginRight: \"30px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n                className='interview-logo'\r\n              >\r\n                {/* <img style={{maxWidth:'100px'}} src={birballogo}></img> */}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div>Access Blocked</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // CandidateReducer: state.CandidateReducer\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // candidateActions: bindActionCreators(Actions, dispatch),\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Interview));\r\n","import React, { Component } from \"react\";\r\nimport \"./submitting.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport submitting from \"../../assets/images/Submitting.svg\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nexport class Submitting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n      window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        show: true,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  componentDidUnmount() {\r\n    window.onbeforeunload = null;\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.props.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: { Page: \"Submission Page\" },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\r\n  }\r\n\r\n  keepOnPage(e) {\r\n    var message =\r\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"insideee submitting\");\r\n    return (\r\n      <div className='submitting-main'>\r\n        <div className='submitting-gif'>\r\n          <img src={submitting} />\r\n        </div>\r\n        <div className='submitting-text'>\r\n          Submitting{\" \"}\r\n          <span style={{ color: \"#04724d\" }}>\r\n            {\" \"}\r\n            {this.props.submittedQuestions &&\r\n            this.props.totalQuestions &&\r\n            this.props.submittedQuestions.length == this.props.totalQuestions\r\n              ? this.props.totalQuestions\r\n              : this.props.submittedQuestions.length + 1}\r\n          </span>{\" \"}\r\n          of {this.props.totalQuestions}, Please Wait...\r\n          <div style={{ padding: \"20px\", transform: \"rotate(180deg)\" }}>\r\n            {this.props.progress &&\r\n            this.props.progress > 0 &&\r\n            this.state.show ? (\r\n              <LinearProgress\r\n                className='linearProgressInternetLanding'\r\n                variant='determinate'\r\n                value={this.props.progress}\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  borderRadius: \"15px\",\r\n                  height: \"5px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          {this.state.show ? (\r\n            <div style={{ fontSize: \"13px\", textAlign: \"center\" }}>\r\n              Uploading {this.props.progress && this.props.progress.toFixed(1)}\r\n              %...\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    UserReducer: state.UserReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Submitting));\r\n","import React, { Component } from \"react\";\r\nimport \"./mcqQuestions.scss\";\r\nimport { TimerComponent } from \"./timerComponent\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport WebcamComponent from \"./WebcamComponent\";\r\nimport AudioAnalyser from \"../Preview/AudioAnalyser\";\r\nimport audio from \"../../assets/images/audio.png\";\r\nimport ScreenRecording from \"../Test/screenRecording\";\r\n\r\nlet mcqSkipableValue = parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  ? parseInt(process.env.REACT_APP_MCQ_SKIP_TIME)\r\n  : 5;\r\n\r\nlet remainingGlobal = 0,\r\n  durationGlobal = 0;\r\nlet Interval = \"\",\r\n  scheduleIdGlobal = \"\",\r\n  candidateIdGlobal = \"\",\r\n  timedate = \"\",\r\n  activeStep = 0,\r\n  ScreenFileGlobal = \"\",\r\n  ScreenFileNameGlobal = \"\";\r\nclass McqQuestions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockRef = React.createRef();\r\n    this.mediaRecorderRef = React.createRef();\r\n    this.timer = 0;\r\n    this.state = {\r\n      capturing: false,\r\n      recordedChunks: [],\r\n      videofilename: \"\",\r\n      submitClicked: false,\r\n      faceNotDetected: 0,\r\n      responseId: \"\",\r\n      ScheduleId: \"\",\r\n      CandidateId: \"\",\r\n      timedate: new Date().toISOString(),\r\n      remainingTime: 0,\r\n      McqData: [],\r\n      totalLength: 0,\r\n      current: 0,\r\n      currentData: null,\r\n      options: null,\r\n      disablebtn: true,\r\n      restartTimer: false,\r\n      isPlaying: true,\r\n      audio: false,\r\n      audioNew: null,\r\n      isMultiCheck: false,\r\n      isSkipped: 0,\r\n      time: \"\",\r\n      events: [],\r\n      skipableArrived : false\r\n    };\r\n    this.vid = React.createRef();\r\n    this.audio = React.createRef();\r\n    this.webcamRef = React.createRef();\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    timedate = this.state.timedate;\r\n    const { questionType, id, candidateId, scheduleId } =\r\n      this.props &&\r\n      this.props.data &&\r\n      this.props.data.data &&\r\n      this.props.data.data.response;\r\n    const isSkipped =\r\n      questionType &&\r\n      questionType.length > 0 &&\r\n      questionType.find((el) => el.name && el.name.toLowerCase() === \"mcq\");\r\n    const details = this.props && this.props.data;\r\n    const data = details && details.mcqQuestions;\r\n    const responseId = id;\r\n    let multi = 0;\r\n    let options =\r\n      data &&\r\n      data[0] &&\r\n      data[0].metadata &&\r\n      data[0].metadata.option &&\r\n      data[0].metadata.option.length > 0 &&\r\n      data[0].metadata.option.map((el) => {\r\n        multi = el.correct ? multi + 1 : multi;\r\n        return { label: el.text, value: false };\r\n      });\r\n\r\n    this.setState({\r\n      McqData: data,\r\n      totalLength: data.length,\r\n      current: 1,\r\n      currentData: data[0],\r\n      options: options,\r\n      responseId: responseId,\r\n      isMultiCheck: multi > 1 ? true : false,\r\n      isSkipped: isSkipped && isSkipped.skipable ? isSkipped.skipable : 0,\r\n      ScheduleId: scheduleId,\r\n      CandidateId: candidateId,\r\n    });\r\n    activeStep = 1;\r\n    scheduleIdGlobal = scheduleId;\r\n    candidateIdGlobal = candidateId;\r\n    let timeOut = isSkipped && isSkipped.skipable ? isSkipped.skipable : 0;\r\n    timeOut = timeOut ? mcqSkipableValue * 1000 : 0;\r\n    if(timeOut){\r\n      this.setState({\r\n        skipableArrived:true\r\n      })\r\n    }\r\n    timeOut &&\r\n      setTimeout(() => {\r\n        this.setState({ disablebtn: false });\r\n      }, timeOut);\r\n    this.getMicrophone();\r\n    document.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n      const { events } = this.state;\r\n      const data = {\r\n        type: \"browser\",\r\n        level: 2,\r\n        metadata: \"Right click triggered\",\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      events.push({\r\n        ...data,\r\n        time: durationGlobal - this.state.remainingTime,\r\n      });\r\n      id && this.setState({ events: events });\r\n      id && this.addEventProctoring(id, data);\r\n    });\r\n    console.log(window.location);\r\n\r\n    document.addEventListener(\"visibilitychange\", (event) => {\r\n      if (window.location.pathname.includes(\"/interview-process\")) {\r\n        if (document.visibilityState == \"visible\") {\r\n          const { events } = this.state;\r\n          const data = {\r\n            type: \"browser\",\r\n            level: 2,\r\n            metadata: \"tab is active\",\r\n            timestamp: new Date().toISOString(),\r\n          };\r\n          events.push({\r\n            ...data,\r\n            time: durationGlobal - this.state.remainingTime,\r\n          });\r\n          id && this.setState({ events: events });\r\n          id && this.addEventProctoring(id, data);\r\n        } else {\r\n          const { events } = this.state;\r\n          const data = {\r\n            type: \"browser\",\r\n            level: 2,\r\n            metadata: \"tab is inactive\",\r\n            timestamp: new Date().toISOString(),\r\n          };\r\n          events.push({\r\n            ...data,\r\n            time: durationGlobal - this.state.remainingTime,\r\n          });\r\n          id && this.setState({ events: events });\r\n          id && this.addEventProctoring(id, data);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  selectionOperation = (type) => {\r\n    const { responseId } = this.state;\r\n    const { events } = this.state;\r\n    const data = {\r\n      type: \"browser\",\r\n      level: 2,\r\n      metadata: `${type} action triggered`,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    events.push({\r\n      ...data,\r\n      time: durationGlobal - this.state.remainingTime,\r\n    });\r\n    responseId && this.setState({ events: events });\r\n    responseId && this.addEventProctoring(responseId, data);\r\n  };\r\n\r\n  addEventProctoring = (id, data) => {\r\n    this.props.UserAction.addEvent({\r\n      responseId: id,\r\n      event: data,\r\n    });\r\n  };\r\n\r\n  async getMicrophone() {\r\n    const audio = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n    this.setState({ audioNew: audio });\r\n  }\r\n\r\n  changeOption = (e, label) => {\r\n    let { options, isMultiCheck } = this.state;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el, index) => {\r\n        if (isMultiCheck) {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          }\r\n        } else {\r\n          if (el.label === label) {\r\n            options[index].value = true;\r\n          } else {\r\n            options[index].value = false;\r\n          }\r\n        }\r\n      });\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  handleStartCaptureClick = () => {\r\n    let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n    this.setState({ events: [] });\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 2,\r\n    };\r\n    this.props.UserAction.updateResponse(payload);\r\n    if (this.mediaRecorderRef) {\r\n      this.mediaRecorderRef.current = new MediaRecorder(\r\n        this.webcamRef.current.stream,\r\n        {\r\n          mimeType: isSafari\r\n            ? 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n            : \"video/webm\",\r\n          audioBitsPerSecond: 128000,\r\n          videoBitsPerSecond: 625000,\r\n        }\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        capturing: true,\r\n      },\r\n      () => {\r\n        this.childRef.current.startCapture();\r\n      }\r\n    );\r\n\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"inactive\"\r\n    ) {\r\n      this.mediaRecorderRef.current.start();\r\n      this.mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        this.handleDataAvailable\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDataAvailable = async ({ data }) => {\r\n    if (data.size > 0) {\r\n      await this.setState({\r\n        recordedChunks: this.state.recordedChunks.concat(data),\r\n      });\r\n      if(this.state.remainingTime<durationGlobal){\r\n        remainingGlobal = durationGlobal - this.state.remainingTime;\r\n      }else{\r\n        remainingGlobal=durationGlobal\r\n      }\r\n      // setTimeout(()=>{\r\n      if (this.state.current === this.state.totalLength) {\r\n        this.handleFinish(this.state.McqData);\r\n      } else {\r\n        this.handleNext(this.state.McqData);\r\n      }\r\n      // },2000)\r\n    }\r\n  };\r\n  handleFinish = async (questiondata) => {\r\n    this.setState({\r\n      submitClicked: true,\r\n    });\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    const question = [];\r\n    question.push(this.getStepContent(this.state.current));\r\n\r\n    this.props.submitClickedHandler();\r\n  };\r\n\r\n  getStepContent(questiondata, stepIndex) {\r\n    if (questiondata.length > 0) {\r\n      let steparray = [];\r\n      questiondata.map((item) => {\r\n        steparray.push(item.QuestionText);\r\n      });\r\n      const value = steparray[this.state.current];\r\n      switch (this.state.activeStep) {\r\n        case this.state.activeStep:\r\n          return (\r\n            <div>\r\n              <div className='question-text'>\r\n                Q{this.state.activeStep + 1}. {value}\r\n              </div>\r\n            </div>\r\n          );\r\n        default:\r\n          return \"Unknown stepIndex\";\r\n      }\r\n    }\r\n  }\r\n  handleNext = async (questiondata) => {\r\n    await this.setState({\r\n      restartTimer: true,\r\n      isPlaying: true,\r\n      // remainingTime: remainingGlobal,\r\n    });\r\n\r\n    await this.handleDownload(questiondata);\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    this.handleStartCaptureClick();\r\n    this.getStepContent(questiondata, this.state.current);\r\n    const { totalLength, current, McqData } = this.state;\r\n\r\n    if (current < totalLength && McqData && McqData[current]) {\r\n      let options =\r\n        McqData[current].metadata &&\r\n        McqData[current].metadata.option &&\r\n        McqData[current].metadata.option.length > 0 &&\r\n        McqData[current].metadata.option.map((el) => ({\r\n          label: el.text,\r\n          value: false,\r\n        }));\r\n      this.setState({\r\n        current: current + 1,\r\n        currentData: McqData[current],\r\n        options: options,\r\n        disablebtn: true,\r\n      });\r\n\r\n      activeStep = current + 1;\r\n    }\r\n  };\r\n  handleStopCaptureClick = () => {\r\n    if (\r\n      this.mediaRecorderRef &&\r\n      this.mediaRecorderRef.current &&\r\n      this.mediaRecorderRef.current.state == \"recording\"\r\n    ) {\r\n      this.mediaRecorderRef.current.stop();\r\n      this.setState({\r\n        capturing: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDownload = (questiondata) => {\r\n    let quesdata = [];\r\n\r\n    questiondata.map((item) => {\r\n      quesdata.push(item.id);\r\n    });\r\n    if (this.state.recordedChunks.length) {\r\n      const blob = new Blob(this.state.recordedChunks, {\r\n        type: \"video/webm\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      window.URL.revokeObjectURL(url);\r\n      this.setState({ recordedChunks: [] });\r\n      var file = new File(\r\n        [blob],\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`\r\n      );\r\n      var filedata = `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`;\r\n\r\n      this.setState({ videofilename: filedata });\r\n      this.handlePriorUpload(\r\n        file,\r\n        `${this.state.ScheduleId}-${this.state.CandidateId}-${this.state.timedate}-${this.state.current}.mp4`,\r\n        quesdata\r\n      );\r\n    }\r\n  };\r\n\r\n  handlePriorUpload = async (file, name, quesdata) => {\r\n    if (!this.state.disablebtn) {\r\n      this.setState({\r\n        disablebtn: true,\r\n      });\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    } else {\r\n      let time = mcqSkipableValue * 1000;\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          disablebtn: false,\r\n        });\r\n      }, time);\r\n    }\r\n    const { options } = this.state;\r\n    let chosenOption = \"No option Selected\";\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((el) => {\r\n        if (el.value) {\r\n          chosenOption = el.label;\r\n        }\r\n      });\r\n    var formdata = new FormData();\r\n    if (ScreenFileGlobal) {\r\n      formdata.append(\"video\", ScreenFileGlobal, ScreenFileNameGlobal);\r\n    }\r\n    formdata.append(\"video\", file, name);\r\n    formdata.append(\"timeTaken\", remainingGlobal);\r\n    formdata.append(\"chosenOption\", chosenOption);\r\n    formdata.append(\"events\", JSON.stringify(this.state.events));\r\n    const payload = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      // videoFile: file,\r\n      // videoFileName: name,\r\n    };\r\n    let quesNo = this.state.current;\r\n    let questionType = \"mcq\";\r\n    let indexDbData = {\r\n      questionId: this.state.currentData.id,\r\n      responseId: this.state.responseId,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n      chosenOption: chosenOption,\r\n      timeTaken: remainingGlobal,\r\n      videoFile: file,\r\n      videoFileName: name,\r\n      screenFile: ScreenFileGlobal,\r\n      screenFileName: ScreenFileNameGlobal,\r\n      events: JSON.stringify(this.state.events),\r\n    };\r\n    this.props.UserAction.addEvent({\r\n      responseId: this.state.responseId,\r\n      event: {\r\n        type: \"debug\",\r\n        level: 3,\r\n        metadata: {\r\n          type: \"Question Submit Start\",\r\n          questionId: this.state.currentData.id,\r\n          responseId: this.state.responseId,\r\n          type: \"mcq\",\r\n          questionStatus: 3,\r\n          chosenOption: chosenOption,\r\n          events: this.state.events,\r\n          timeTaken: remainingGlobal,\r\n        },\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n      questionId: this.state.currentData.id,\r\n      type: \"mcq\",\r\n      questionStatus: 3,\r\n    });\r\n    this.props.upload(formdata, payload, indexDbData, quesNo, questionType);\r\n\r\n    this.setState({\r\n      faceNotDetected: 0,\r\n    });\r\n  };\r\n\r\n  handleTimer = async () => {\r\n    // clearInterval(Interval);\r\n    await this.setState({\r\n      restartTimer: false,\r\n      isPlaying: false,\r\n      disablebtn: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.handleStopCaptureClick();\r\n    }, 2000);\r\n\r\n    this.childRef.current.stopCapture();\r\n  };\r\n\r\n  onScreenAccess() {\r\n    console.log(\"got Screen access\");\r\n  }\r\n  onRecordStart() {\r\n    console.log(\"started recording\");\r\n  }\r\n  onRecordStop() {\r\n    console.log(\"stopped recording\");\r\n  }\r\n  onUserStop() {\r\n    console.log(\"user stopped screen access\");\r\n    ScreenFileGlobal = \"\";\r\n    ScreenFileNameGlobal = \"\";\r\n  }\r\n  async onVideoFile(blob) {\r\n    let ScreenFileTemp = new File(\r\n      [blob],\r\n      `$${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}.mp4`\r\n    );\r\n    let ScreenFileNameTemp = `${scheduleIdGlobal}-${candidateIdGlobal}-${timedate}-${activeStep}Screen.mp4`;\r\n\r\n    ScreenFileGlobal = ScreenFileTemp;\r\n    ScreenFileNameGlobal = ScreenFileNameTemp;\r\n  }\r\n  onAbort() {\r\n    console.log(\"recieved abort callback\");\r\n  }\r\n  handleTimeUpdate = async (time, remainingTime) => {\r\n    if (this.state.time != time) {\r\n    await this.setState({ time: time, remainingTime: remainingTime });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      disablebtn,\r\n      current,\r\n      currentData,\r\n      options,\r\n      restartTimer,\r\n      isPlaying,\r\n    } = this.state;\r\n\r\n    const duration =\r\n      currentData && currentData.suggestedDuration\r\n        ? currentData.suggestedDuration\r\n        : 0;\r\n    durationGlobal = duration;\r\n    let width = 10;\r\n    options &&\r\n      options.length > 0 &&\r\n      options.map((item) => {\r\n        if (item.label.length * 14 > width) {\r\n          width = item.label.length * 14 + 60;\r\n        }\r\n      });\r\n\r\n    return (\r\n      <div\r\n        className='InterViewMcqMain'\r\n        onCopy={() => this.selectionOperation(\"Copy\")}\r\n        onCut={() => this.selectionOperation(\"Cut\")}\r\n        onPaste={() => this.selectionOperation(\"Paste\")}\r\n      >\r\n        <ScreenRecording\r\n          ref={this.childRef}\r\n          onScreenAccess={this.onScreenAccess}\r\n          onUserStop={this.onUserStop}\r\n          onRecordStart={this.onRecordStart}\r\n          onRecordStop={this.onRecordStop}\r\n          onVideoFile={this.onVideoFile}\r\n          onAbort={this.onAbort}\r\n        />\r\n        <div className='McqHeadingMain'>Live Interview</div>\r\n\r\n        <div className='McqQuestionArea'>\r\n          <div className='QuestionNumber'>Q.{current}</div>\r\n          <div className='QuestionArea'>\r\n            <div\r\n              className='QuestionText'\r\n              dangerouslySetInnerHTML={{\r\n                __html: currentData && currentData.text,\r\n              }}\r\n            ></div>\r\n            <div\r\n              className='QuestionOptions'\r\n              style={{\r\n                display: width > 360 ? \"flex\" : \"block\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {options &&\r\n                options.length > 0 &&\r\n                options.map((item) => (\r\n                  <div\r\n                    className='OptionArea'\r\n                    style={{\r\n                      width: width < 360 ? `${width}px` : \"360px\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      className='checkbox'\r\n                      checked={item.value}\r\n                      onChange={(e) => this.changeOption(e, item.label)}\r\n                      label={item.label}\r\n                    />\r\n                    <span className='textLabel'>{item.label}</span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className='VideoArea'>\r\n            <div className='Timer'>\r\n              {duration ? (\r\n                <TimerComponent\r\n                  durationTime={duration}\r\n                  className='timer-new'\r\n                  isPlaying={isPlaying}\r\n                  disableBtn={restartTimer}\r\n                  nextBtn={true}\r\n                  //   handleTimer={() => null}\r\n                  handleTimer={this.handleTimer}\r\n                  onTick={(time, remainingTime) => {\r\n                    this.handleTimeUpdate(time, remainingTime);\r\n                  }}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className='VideoRecord'>\r\n              {\" \"}\r\n              <WebcamComponent\r\n                handleStartCaptureClick={this.handleStartCaptureClick}\r\n                // handleAbort={this.handleAbort}\r\n                handleDataAvailable={this.handleDataAvailable}\r\n                handleStopCaptureClick={this.handleStopCaptureClick}\r\n                capturing={this.state.capturing}\r\n                webcamRef={this.webcamRef}\r\n                recordedChunks={this.state.recordedChunks}\r\n                handleDownload={this.handleDownload}\r\n              />\r\n              <div className='audioDiv'>\r\n                <div className='audio-img'>\r\n                  <img src={audio} />{\" \"}\r\n                </div>\r\n                {this.state.audioNew ? (\r\n                  <div className='audio-analyser'>\r\n                    <AudioAnalyser\r\n                      amplitude={() => null}\r\n                      audio={this.state.audioNew}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className='NextBtn'>\r\n              <Button\r\n                disabled={disablebtn}\r\n                variant='contained'\r\n                width={ this.state.skipableArrived ? '200px' : '350px'}\r\n                className={`Button-next ${disablebtn ? \"disabled\" : \"normal\"}`}\r\n                onClick={this.handleTimer}\r\n              >\r\n                {\r\n                             this.state.skipableArrived  ? <span>Next Question</span>\r\n                             :  <span>Next Question{' '}{`in ${this.state.remainingTime} seconds`}</span>\r\n                           }\r\n                <span>\r\n                  <ArrowForwardIcon style={{ height: \"15px\", width: \"15px\" }} />\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqQuestions);\r\n","export function secondsToMinutes(time){\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return min+':'+sec;\r\n}\r\n\r\n\r\nexport function secondsToHours(time){\r\n    let hours = Math.floor(time / 3600);\r\ntime %= 3600;\r\n    let min=Math.floor(time/60);\r\n    let sec=Math.floor(time % 60);\r\n    if(hours<10 && hours!=0){\r\n        hours=`0${hours}`\r\n    }\r\n    if(hours==0){\r\n        hours=`00`\r\n    }\r\n    if(min<10){\r\n        min=`0${min}`\r\n    }\r\n    if(sec<10){\r\n        sec=`0${sec}`\r\n    }\r\n    return hours+':'+min+':'+sec;\r\n}\r\n\r\n\r\n// export const verbalSkipableValue=10;\r\n\r\n// export const mcqSkipableValue=5;","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Instructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Verbal\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructions);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class PreviewInstructionsMCQ extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n    // }\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Verbal Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : MCQ with verbal explanation \r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> {\" \"}\r\n                Please explain the choice made while making the choice\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PreviewInstructionsMCQ);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./previewInstructionsVerbal.scss\";\r\nimport birballogo from \"../../assets/images/login_page_logo.png\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { secondsToHours } from \"../../utils/utility\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class CodingInstructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      totalTime: \"\",\r\n      responseId: localStorage.getItem(\"responseId\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.totalCount && this.props.duration) {\r\n\r\n    this.setState({\r\n      count: this.props.totalCount,\r\n      totalTime: this.props.duration,\r\n    });\r\n\r\n    this.state.responseIdresponseId &&\r\n      this.props.UserAction.addEvent({\r\n        responseId: this.state.responseId,\r\n        event: {\r\n          type: \"debug\",\r\n          level: 3,\r\n          metadata: { Page: \"Coding Introduction Page\" },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instruction-main-div\">\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"left-content\">\r\n            <div className=\"instructions-heading\">\r\n              <Typography>Instructions</Typography>\r\n            </div>\r\n            <div className=\"instructions-subHeading\">\r\n              <Typography>Read and follow the given Instructions</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-content\">\r\n            <div className=\"instructions-logo\">\r\n              <img alt=\"\" src={birballogo}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"page-content\">\r\n          <div className=\"contents-verbal\">\r\n            <div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Question Type : Coding\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div>Total No. of Questions :{\" \"}\r\n                {this.state.count}\r\n              </div>\r\n              <div className=\"li-2\">\r\n                <div className=\"dot\"></div> Total Time :{\" \"}\r\n                {secondsToHours(this.state.totalTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"continue-button-wrapper\">\r\n          <Button className=\"continue-button\" onClick={this.props.continue}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodingInstructions);\r\n","import React from \"react\";\r\nimport { Interview } from \"../../utils/LazyLoaded\";\r\nimport interview from \"./interview\";\r\nimport Submitting from \"./submitting\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../store/User/UserAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"react-notifications-component\";\r\nimport {serverAddress} from \"../../config\";\r\nimport ReactGA from \"react-ga\";\r\nimport McqInteview from \"./mcqQuestions\";\r\nimport VerbalSummary from \"./PreviewInstructionsVerbal\";\r\nimport McqSummary from \"./PreviewInstructionsMCQ\";\r\nimport CodingSummary from \"./PreviewInstructionsCoding\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport warning from \"../../assets/images/warning.svg\";\r\nimport \"./parent.scss\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CodingInterview from \"./CodeEditor\";\r\n\r\nlet indexedDB =\r\n    window.indexedDB ||\r\n    window.webkitIndexedDB ||\r\n    window.mozIndexedDB ||\r\n    window.OIndexedDB ||\r\n    window.msIndexedDB,\r\n  IDBTransaction =\r\n    window.IDBTransaction ||\r\n    window.webkitIDBTransaction ||\r\n    window.OIDBTransaction ||\r\n    window.msIDBTransaction,\r\n  dbVersion = 2;\r\n\r\nlet request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\nrequest.onsuccess = function (event) {\r\n  let db = event.target.result;\r\n\r\n  db.onerror = function (event) {\r\n    console.log(\"Error creating/accessing IndexedDB database\");\r\n  };\r\n};\r\nrequest.onupgradeneeded = function (event) {\r\n  let db = event.target.result;\r\n  let objectStore = db.createObjectStore(\"videoAnswers\", {\r\n    keyPath: \"questionId\",\r\n  });\r\n};\r\n\r\nlet reTrial = 3;\r\nclass Parent extends React.Component {\r\n  state = {\r\n    submitClicked: false,\r\n    submittedQuestions: [],\r\n    totalQuestions: 0,\r\n    progress: 0,\r\n    submissionInProgress: false,\r\n    submissionQueue: [],\r\n    currentQuestion: \"\",\r\n    data: null,\r\n    totalMcq: 0,\r\n    totalVerbal: 0,\r\n    totalCoding: 0,\r\n    mcqQuestions: [],\r\n    sequenceOrder: \"\",\r\n    verbalQuestions: [],\r\n    verbalNew: false,\r\n    mcqNew: false,\r\n    codingNew: false,\r\n    suggestedVerbalDuration: 0,\r\n    suggestedCodingDuration: 0,\r\n    showDialog: false,\r\n    order: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.history.pushState(null, \"\", window.location.href);\r\n    window.onpopstate = function () {\r\n      window.history.pushState(null, \"\", window.location.href);\r\n    };\r\n    window.addEventListener(\"beforeunload\", this.keepOnPage);\r\n    ReactGA.pageview(window.location.pathname);\r\n    const stateData =\r\n      this.props.history &&\r\n      this.props.history.location &&\r\n      this.props.history.location.state;\r\n    const totalMcq = stateData && stateData.totalMcq;\r\n    const totalVerbal = stateData && stateData.totalVerbal;\r\n    const totalCoding = stateData && stateData.totalCoding;\r\n    const newResponse =\r\n      stateData && stateData.data && stateData.data.newResponse;\r\n    let verbalCount = 0;\r\n    let mcqCount = 0;\r\n    let codingCount = 0;\r\n    let verbalDuration = 0,\r\n      codingDuration = 0,\r\n      mcqDuration = 0;\r\n    if (stateData) {\r\n      const { response } = stateData && stateData.data;\r\n      const { verbalQuestions, mcqQuestions, codingQuestions } = stateData;\r\n      verbalCount =\r\n        response && response.verbalQuestions && response.verbalQuestions.length;\r\n      mcqCount =\r\n        response && response.mcqQuestions && response.mcqQuestions.length;\r\n      codingCount =\r\n        response && response.codingQuestions && response.codingQuestions.length;\r\n      verbalQuestions &&\r\n        verbalQuestions.length > 0 &&\r\n        verbalQuestions.map((el) => {\r\n          verbalDuration += el.suggestedDuration;\r\n        });\r\n\r\n      mcqQuestions &&\r\n        mcqQuestions.length > 0 &&\r\n        mcqQuestions.map((el) => {\r\n          mcqDuration += el.suggestedDuration;\r\n        });\r\n      codingQuestions &&\r\n        codingQuestions.length > 0 &&\r\n        codingQuestions.map((el) => {\r\n          codingDuration += el.suggestedDuration;\r\n        });\r\n    }\r\n    this.setState({\r\n      ...stateData,\r\n      totalQuestions: totalMcq + totalVerbal + totalCoding,\r\n      verbalNew: newResponse\r\n        ? true\r\n        : verbalCount === totalVerbal\r\n        ? true\r\n        : false,\r\n      mcqNew: newResponse ? true : mcqCount === totalMcq ? true : false,\r\n      codingNew: newResponse\r\n        ? true\r\n        : codingCount === totalCoding\r\n        ? true\r\n        : false,\r\n      suggestedMcqDuration: mcqDuration,\r\n      suggestedVerbalDuration: verbalDuration,\r\n      suggestedCodingDuration: codingDuration,\r\n      order: stateData && stateData.order,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.keepOnPage);\r\n  }\r\n\r\n  keepOnPage(e) {\r\n    var message =\r\n      \"Warning!\\n\\nNavigating away from this page will clear your response.\";\r\n    e.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  submitClickedHandler = () => {\r\n    this.setState({\r\n      submitClicked: true,\r\n      progress: 0,\r\n    });\r\n  };\r\n\r\n  totalQuestionsHandler = (val) => {\r\n    this.setState({\r\n      totalQuestions: val,\r\n    });\r\n  };\r\n\r\n  addToQueue = (body, quesData) => {\r\n    let submissionQueue = this.state.submissionQueue;\r\n    submissionQueue.push(body);\r\n\r\n    this.setState({\r\n      submissionQueue: submissionQueue,\r\n      currentQuestion: quesData.quesNo,\r\n    });\r\n\r\n    this.callSubmitApi();\r\n  };\r\n\r\n  callSubmitApi = () => {\r\n    let _this = this;\r\n    let submissionQueue = this.state.submissionQueue;\r\n\r\n    if (\r\n      submissionQueue.length > 0 &&\r\n      this.state.submissionInProgress == false\r\n    ) {\r\n      this.setState({\r\n        submissionInProgress: true,\r\n      });\r\n      let body = submissionQueue.shift();\r\n      _this.setState({\r\n        submissionQueue: submissionQueue,\r\n      });\r\n      reTrial -= 1;\r\n      let formdata = body.formdata;\r\n      let payload = body.payload;\r\n\r\n      localStorage.setItem(\"questionId\", body.payload.questionId);\r\n      localStorage.setItem(\"questionStatus\", body.payload.questionStatus);\r\n      localStorage.setItem(\"type\", body.payload.type);\r\n      var ajax = new XMLHttpRequest();\r\n      ajax.timeout = 1000 * 60 * 10; // time in milliseconds\r\n      ajax.upload.addEventListener(\r\n        \"progress\",\r\n        function progressHandler(event) {\r\n          var percent = (event.loaded / event.total) * 100;\r\n          _this.props.UserAction.addsingleanswerProgress({ progress: percent });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"load\",\r\n        async function completeHandler(event) {\r\n          if (event.target.status == 200) {\r\n            _this.props.UserAction.addsingleanswerSuccess(\r\n              JSON.parse(event.target.responseText)\r\n            );\r\n          } else {\r\n            if (reTrial) {\r\n              let submissionQueue = _this.state.submissionQueue;\r\n              submissionQueue.unshift(body);\r\n              await _this.setState({\r\n                submissionQueue: submissionQueue,\r\n                submissionInProgress: false,\r\n                showDialog: true,\r\n              });\r\n              _this.callSubmitApi();\r\n            } else {\r\n              _this.props.UserAction.addsingleanswerError({\r\n                singleAnswerError: true,\r\n              });\r\n\r\n              setTimeout(() => {\r\n                _this.setState({\r\n                  showDialog: false,\r\n                });\r\n              }, 2000);\r\n            }\r\n          }\r\n\r\n          _this.setState({\r\n            progress: 0,\r\n          });\r\n          _this.callSubmitApi();\r\n        },\r\n        false\r\n      );\r\n\r\n      ajax.addEventListener(\r\n        \"error\",\r\n        async function errorHandler(event) {\r\n          if (reTrial) {\r\n            let submissionQueue = _this.state.submissionQueue;\r\n            submissionQueue.unshift(body);\r\n            await _this.setState({\r\n              submissionQueue: submissionQueue,\r\n              submissionInProgress: false,\r\n              showDialog: true,\r\n            });\r\n            _this.callSubmitApi();\r\n          } else {\r\n            _this.props.UserAction.addsingleanswerError({\r\n              singleAnswerError: true,\r\n            });\r\n            setTimeout(() => {\r\n              _this.setState({\r\n                showDialog: false,\r\n              });\r\n            }, 2000);\r\n          }\r\n\r\n          // store.addNotification({\r\n          //   title: \"Error\",\r\n          //   message: \"Error Occured!\",\r\n          //   type: \"danger\",\r\n          //   container: \"top-center\",\r\n          //   animationIn: [\"animated\", \"fadeIn\"],\r\n          //   animationOut: [\"animated\", \"fadeOut\"],\r\n          //   dismiss: {\r\n          //     duration: 2000,\r\n          //   },\r\n          // });\r\n        },\r\n        false\r\n      );\r\n      ajax.addEventListener(\r\n        \"abort\",\r\n        function abortHandler(event) {\r\n          // _(\"status\").innerHTML = \"Upload Aborted\";\r\n        },\r\n        false\r\n      );\r\n      ajax.open(\r\n        \"PATCH\",\r\n        `${serverAddress}/response/submission?responseId=${payload.responseId}&questionId=${payload.questionId}&questionStatus=${payload.questionStatus}&type=${payload.type}`\r\n      );\r\n      ajax.setRequestHeader(\"Authorization\", localStorage.getItem(\"tokenNew\"));\r\n      ajax.send(formdata);\r\n    } else {\r\n      this.setState({\r\n        submissionInProgress: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  upload = async (formdata, payload, indexDbData, quesNo, questionType) => {\r\n    this.addToQueue(\r\n      {\r\n        formdata: formdata,\r\n        payload: payload,\r\n      },\r\n      { no: quesNo, type: questionType }\r\n    );\r\n\r\n    this.decreaseCountHandler(questionType);\r\n\r\n    let request = indexedDB.open(\"elephantFiles\", dbVersion);\r\n\r\n    request.onsuccess = function (event) {\r\n      let db = event.target.result;\r\n      let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n      transaction\r\n        .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n        .add(indexDbData);\r\n\r\n      db.onerror = function (event) {\r\n        console.log(\"Error creating/accessing IndexedDB database\");\r\n      };\r\n    };\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, currentState) {\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerProgress &&\r\n      !nextProps.UserReducer.isUserquestionDataAdded\r\n    ) {\r\n      currentState.progress = nextProps.UserReducer.singleAnswerProgress;\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.isUserquestionDataAdded &&\r\n      nextProps.UserReducer.singleAnswerData\r\n    ) {\r\n      nextProps.UserReducer.isUserquestionDataAdded = false;\r\n      reTrial = 3;\r\n      currentState.showDialog = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"success\",\r\n            // response: nextProps.UserReducer.singleAnswerData,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      let request = indexedDB.open(\"elephantFiles\", 1);\r\n\r\n      request.onsuccess = function (event) {\r\n        let db = event.target.result;\r\n        let transaction = db.transaction([\"videoAnswers\"], \"readwrite\");\r\n        transaction\r\n          .objectStore(\"videoAnswers\", { keyPath: \"questionId\" })\r\n          .delete(`${localStorage.getItem(\"questionId\")}`);\r\n\r\n        db.onerror = function (event) {\r\n          console.log(\"Error creating/accessing IndexedDB database\");\r\n        };\r\n      };\r\n\r\n      let submittedQuestions = currentState.submittedQuestions;\r\n      submittedQuestions.push(currentState.currentQuestion);\r\n      currentState.submittedQuestions = submittedQuestions;\r\n      if (\r\n        currentState.submittedQuestions.length < currentState.totalQuestions\r\n      ) {\r\n        currentState.progress = 0;\r\n      }\r\n\r\n      // store.addNotification({\r\n      //   title: \"Success\",\r\n      //   message: `Question ${submittedQuestions.length} Submitted successfully`,\r\n      //   type: \"success\",\r\n      //   container: \"top-center\",\r\n      //   animationIn: [\"animated\", \"fadeIn\"],\r\n      //   animationOut: [\"animated\", \"fadeOut\"],\r\n      //   dismiss: {\r\n      //     duration: 2000,\r\n      //   },\r\n      // });\r\n      if (\r\n        currentState.submittedQuestions.length == currentState.totalQuestions\r\n      ) {\r\n        const payload = {\r\n          responseId:\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          formdata: { status: \"FINISHED\" },\r\n        };\r\n        nextProps.UserAction.updateResponse(payload);\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Congratulation\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          nextProps.history.push({\r\n            pathname: \"/congratulation\",\r\n          });\r\n        }, 200);\r\n      }\r\n    }\r\n\r\n    if (\r\n      nextProps &&\r\n      nextProps.UserReducer &&\r\n      nextProps.UserReducer.singleAnswerError\r\n    ) {\r\n      nextProps.UserReducer.singleAnswerError = false;\r\n      nextProps.UserAction.addEvent({\r\n        responseId:\r\n          currentState &&\r\n          currentState.data &&\r\n          currentState.data.response &&\r\n          currentState.data.response.id,\r\n        isError: true,\r\n        event: {\r\n          type: \"api\",\r\n          level: 1,\r\n          metadata: {\r\n            detail: {\r\n              questionId: localStorage.getItem(\"questionId\"),\r\n              status: localStorage.getItem(\"questionStatus\"),\r\n              type: localStorage.getItem(\"type\"),\r\n            },\r\n            type: \"error\",\r\n            response: nextProps.UserReducer.singleAnswerError,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      });\r\n      setTimeout(() => {\r\n        nextProps.UserAction.addEvent({\r\n          responseId:\r\n            currentState &&\r\n            currentState.data &&\r\n            currentState.data.response &&\r\n            currentState.data.response.id,\r\n          event: {\r\n            type: \"debug\",\r\n            level: 3,\r\n            metadata: {\r\n              Page: \"Error Page\",\r\n            },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        });\r\n        nextProps.history.push({\r\n          pathname: \"/error\",\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    return currentState;\r\n  }\r\n  changeSequence = (type) => {\r\n    const { order } = this.state;\r\n    const id =\r\n      order && order.length > 0 && order.findIndex((el) => el === type);\r\n    if (id !== -1 || id !== order.length - 1)\r\n      setTimeout(() => {\r\n        this.setState({ sequenceOrder: order[id + 1] });\r\n      }, 2000);\r\n  };\r\n  decreaseCountHandler = (type) => {\r\n    type === \"verbal\"\r\n      ? this.setState({ totalVerbal: this.state.totalVerbal - 1 })\r\n      : type === \"coding\"\r\n      ? this.setState({ totalCoding: this.state.totalCoding - 1 })\r\n      : this.setState({ totalMcq: this.state.totalMcq - 1 });\r\n  };\r\n\r\n  render() {\r\n    // console.log('dataaaaa',this.state)\r\n    const {\r\n      sequenceOrder,\r\n      totalMcq,\r\n      totalVerbal,\r\n      totalCoding,\r\n      submitClicked,\r\n      totalQuestions,\r\n      submittedQuestions,\r\n      progress,\r\n      verbalNew,\r\n      mcqNew,\r\n      codingNew,\r\n      suggestedMcqDuration,\r\n      suggestedVerbalDuration,\r\n      suggestedCodingDuration,\r\n      order,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className='main-parent'>\r\n        <Dialog\r\n          className='warning-dialog-submit'\r\n          open={this.state.showDialog}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'\r\n        >\r\n          <div className='warning-dialog-main'>\r\n            <div className='unstable-image'>\r\n              <img src={warning} />\r\n            </div>\r\n            <div className='warning-dialog-heading'>\r\n              Failed to submit response, Being retried\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n\r\n        {submitClicked && totalMcq < 1 && totalVerbal < 1 && totalCoding < 1 ? (\r\n          <Submitting\r\n            progress={this.state.progress}\r\n            submittedQuestions={this.state.submittedQuestions}\r\n            totalQuestions={this.state.totalQuestions}\r\n            responseId={\r\n              this.state &&\r\n              this.state.data &&\r\n              this.state.data.response &&\r\n              this.state.data.response.id\r\n            }\r\n          />\r\n        ) : verbalNew && sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <VerbalSummary\r\n            totalCount={totalVerbal}\r\n            duration={suggestedVerbalDuration}\r\n            continue={() => this.setState({ verbalNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"verbal\" && totalVerbal > 0 ? (\r\n          <Interview\r\n            submitClickedHandler={() =>\r\n              totalMcq === 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"verbal\")\r\n            }\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"verbal\")}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : codingNew && sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingSummary\r\n            totalCount={totalCoding}\r\n            duration={suggestedCodingDuration}\r\n            continue={() => this.setState({ codingNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"coding\" && totalCoding > 0 ? (\r\n          <CodingInterview\r\n            submitClickedHandler={() =>\r\n              totalVerbal === 0 && totalMcq === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"coding\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"coding\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : mcqNew && sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqSummary\r\n            totalCount={totalMcq}\r\n            duration={suggestedMcqDuration}\r\n            continue={() => this.setState({ mcqNew: false })}\r\n          />\r\n        ) : sequenceOrder === \"mcq\" && totalMcq > 0 ? (\r\n          <McqInteview\r\n            submitClickedHandler={() =>\r\n              totalVerbal == 0 && totalCoding === 0\r\n                ? this.submitClickedHandler()\r\n                : this.changeSequence(\"mcq\")\r\n            }\r\n            decreaseCountHandler={() => this.decreaseCountHandler(\"mcq\")}\r\n            addToQueue={this.addToQueue}\r\n            totalQuestionsHandler={this.totalQuestionsHandler}\r\n            callSubmitApi={this.callSubmitApi}\r\n            data={this.state}\r\n            upload={this.upload}\r\n          />\r\n        ) : (\r\n          <div\r\n            style={{\r\n              padding: \"20px 0\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress style={{ color: \"#04724D\" }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserReducer: state.UserReducer,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    UserAction: bindActionCreators(Actions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Parent));\r\n","module.exports = __webpack_public_path__ + \"static/media/login_page_logo.d598eaad.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.a736dff5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Submitting.baee2f23.svg\";"],"sourceRoot":""}
{"version":3,"sources":["containers/Assessment/AssessmentStep1/AssessmentStep1.js","../node_modules/@material-ui/icons/Check.js","components/Atoms/SelectInput/SelectInput.js","components/Atoms/CustomizedInputs/CustomizedInputs.js","../../src/index.js","components/Atoms/Checkbox.js","components/AssessmentComponents/QuestionType.js"],"names":["AssessmentStep1","props","validateFields","validity","state","assessmentName","setState","assessmentNameError","industryType","industryTypeError","jobType","jobTypeError","experienceLevel","experienceLevelError","QuestionType","questionTypeError","questionTypes","length","checked","map","item","push","handleChange","item2","value","saveContinueHandler","id","name","label","payload","jdId","questionType","AssessmentAction","addTest","optionsdata","optionsdata2","optionsdata3","verbal","mcq","testId","ReactGA","pageview","window","location","pathname","this","getIndustryTypes","getJobTypes","getExperienceLevel","getQuestionTypes","prevProps","prev","AssessmentReducer","cur","isGetIndustryTypes","industryTypes","data","results","isGetJobTypes","jobTypes","title","isGetExperienceLevel","isGetQuestionTypes","isTestAdded","test","history","className","placeholder","onChange","e","target","options","onClick","React","Component","connect","dispatch","bindActionCreators","withRouter","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","SelectInput","CaretDownIcon","style","color","iconWhite","customStyles","control","base","height","minHeight","maxHeight","padding","borderRadius","fontSize","background","fontWeight","singleValue","provided","opacity","isDisabled","transition","styles","option","components","DropdownIndicator","classNamePrefix","disabled","menuPortalTarget","document","body","menuPlacement","placement","useStyles","makeStyles","theme","root","display","flexWrap","fontFamily","input","textOverflow","CustomizedInputs","classes","icon","inputIcon","src","imageHeight","width","imageWidth","paddingLeft","marginRight","role","imageOnClick","labelName","htmlFor","noMargin","required","margin","deviceAddInput","error","type","font","size","maxLength","inputProps","helperText","textInput","startAdornment","onKeyDown","key","preventDefault","Checkbox","borderColor","borderStyle","borderWidth","checkbox","containerClassName","containerStyle","labelClassName","labelStyle","reference","right","useState","check","setCheck","toggle","useEffect","alignItems","justifyContent","cursor","ref","hidden","marginLeft","backgroundColor","ControlledCheckbox","userSelect"],"mappings":"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","file":"static/js/38.62cf9cc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./assessmentStep1.scss\";\r\nimport SelectInput from \"../../../components/Atoms/SelectInput/SelectInput\";\r\nimport CustomizedInputs from \"../../../components/Atoms/CustomizedInputs/CustomizedInputs\";\r\nimport QuestionType from \"../../../components/AssessmentComponents/QuestionType\";\r\nimport Button from \"../../../components/Controls/Button/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as AssessmentAction from \"../../../store/Assessment/AssessmentAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass AssessmentStep1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assessmentName: \"\",\r\n      optionsdata: [],\r\n      industryType: \"\",\r\n      jobType: \"\",\r\n      optionsdata2: [],\r\n      experienceLevel: \"\",\r\n      optionsdata3: [],\r\n      verbal: false,\r\n      mcq: false,\r\n      questionTypes: [],\r\n      assessmentNameError: \"\",\r\n      industryTypeError: \"\",\r\n      jobTypeError: \"\",\r\n      questionTypeError: \"\",\r\n      experienceLevelError: \"\",\r\n      testId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ReactGA.pageview(window.location.pathname);\r\n    this.props.AssessmentAction.getIndustryTypes();\r\n    this.props.AssessmentAction.getJobTypes();\r\n    this.props.AssessmentAction.getExperienceLevel();\r\n    this.props.AssessmentAction.getQuestionTypes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prev = prevProps && prevProps.AssessmentReducer;\r\n    const cur = this.props && this.props.AssessmentReducer;\r\n    if (prev.isGetIndustryTypes !== cur.isGetIndustryTypes) {\r\n      cur.isGetIndustryTypes = false;\r\n      if (\r\n        cur.industryTypes &&\r\n        cur.industryTypes.data &&\r\n        cur.industryTypes.data.results &&\r\n        cur.industryTypes.data.results.length\r\n      ) {\r\n        let optionsdata = [];\r\n        cur.industryTypes.data.results.map((item) => {\r\n          optionsdata.push({\r\n            value: item.id,\r\n            label: item.name,\r\n          });\r\n        });\r\n        this.setState({\r\n          optionsdata: optionsdata,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (prev.isGetJobTypes != cur.isGetJobTypes) {\r\n      cur.isGetJobTypes = false;\r\n      if (cur.jobTypes && cur.jobTypes.data) {\r\n        let optionsdata2 = [];\r\n        cur.jobTypes.data.map((item) => {\r\n          optionsdata2.push({\r\n            value: item.id,\r\n            label: item.title,\r\n          });\r\n        });\r\n        this.setState({\r\n          optionsdata2: optionsdata2,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (prev.isGetExperienceLevel !== cur.isGetExperienceLevel) {\r\n      cur.isGetExperienceLevel = false;\r\n      if (\r\n        cur.experienceLevel &&\r\n        cur.experienceLevel.data &&\r\n        cur.experienceLevel.data.results &&\r\n        cur.experienceLevel.data.results.length\r\n      ) {\r\n        let optionsdata3 = [];\r\n        cur.experienceLevel.data.results.map((item) => {\r\n          optionsdata3.push({\r\n            value: item.id,\r\n            label: item.name,\r\n          });\r\n        });\r\n        this.setState({\r\n          optionsdata3: optionsdata3,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (prev.isGetQuestionTypes !== cur.isGetQuestionTypes) {\r\n      cur.isGetQuestionTypes = false;\r\n      if (\r\n        cur.questionType &&\r\n        cur.questionType.data &&\r\n        cur.questionType.data.results &&\r\n        cur.questionType.data.results.length\r\n      ) {\r\n        let questionTypes = [];\r\n        cur.questionType.data.results.map((item) => {\r\n          questionTypes.push({\r\n            value: item.id,\r\n            label: item.name,\r\n            checked: false,\r\n          });\r\n          // if (item.name.toLowerCase() == \"mcq\") {\r\n          //   localStorage.setItem(\"mcq\", item.id);\r\n          // }\r\n          // if (item.name.toLowerCase() == \"verbal\") {\r\n          //   localStorage.setItem(\"verbal\", item.id);\r\n          // }\r\n          // if (item.name.toLowerCase() == \"coding\") {\r\n          //   localStorage.setItem(\"coding\", item.id);\r\n          // }\r\n        });\r\n        this.setState({\r\n          questionTypes: questionTypes,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (prev.isTestAdded !== cur.isTestAdded) {\r\n      cur.isTestAdded = false;\r\n      if (cur.test && cur.test.data && cur.test.data.id) {\r\n        this.setState({\r\n          testId: cur.test.data.id,\r\n        });\r\n\r\n        this.props.history.push({\r\n          pathname: `/assessment/step2/create-assignment/${cur.test.data.id}`,\r\n          state: {\r\n            testId: cur.test.data.id,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  validateFields = () => {\r\n    let validity = true;\r\n    if (this.state.assessmentName == \"\") {\r\n      this.setState({\r\n        assessmentNameError: \"Please Enter Assessment Name\",\r\n      });\r\n      validity = false;\r\n    }\r\n    if (this.state.industryType == \"\") {\r\n      this.setState({\r\n        industryTypeError: \"Please Select Industry Type\",\r\n      });\r\n      validity = false;\r\n    }\r\n    if (this.state.jobType == \"\") {\r\n      this.setState({\r\n        jobTypeError: \"Please Select Job Type\",\r\n      });\r\n      validity = false;\r\n    }\r\n    if (this.state.experienceLevel == \"\") {\r\n      this.setState({\r\n        experienceLevelError: \"Please Select Experience Level\",\r\n      });\r\n      validity = false;\r\n    }\r\n    if (this.state.QuestionType == \"\") {\r\n      this.setState({\r\n        questionTypeError: \"Question Type Not Available\",\r\n      });\r\n      validity = false;\r\n    }\r\n    if (this.state.questionTypes && this.state.questionTypes.length) {\r\n      let checked = [];\r\n      this.state.questionTypes.map((item) => {\r\n        if (item.checked) {\r\n          checked.push(item);\r\n        }\r\n      });\r\n\r\n      if (!checked.length) {\r\n        this.setState({\r\n          questionTypeError: \"Please Select Question Type\",\r\n        });\r\n        validity = false;\r\n      }\r\n    }\r\n\r\n    return validity;\r\n  };\r\n\r\n  handleChange = (item) => {\r\n    let questionTypes = this.state.questionTypes;\r\n    questionTypes.map((item2) => {\r\n      if (item2.value == item.value) {\r\n        item2.checked = !item2.checked;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      questionTypes: questionTypes,\r\n      questionTypeError: \"\",\r\n    });\r\n  };\r\n\r\n  saveContinueHandler = () => {\r\n    if (this.validateFields()) {\r\n      let questionTypes = [];\r\n      this.state.questionTypes.map((item) => {\r\n        if (item.checked) {\r\n          questionTypes.push({\r\n            id: item.value,\r\n            name: item.label,\r\n          });\r\n        }\r\n      });\r\n\r\n      let payload = {\r\n        name: this.state.assessmentName,\r\n        industryType: this.state.industryType.value,\r\n        experienceLevel: this.state.experienceLevel.value,\r\n        jdId: this.state.jobType.value,\r\n        questionType: questionTypes,\r\n      };\r\n\r\n      this.props.AssessmentAction.addTest(payload);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='main-step-1'>\r\n        <div className='inputs-body-div'>\r\n          <div className='assessment-name'>Assessment Name</div>\r\n          <div className='assessment-name-input-div'>\r\n            <CustomizedInputs\r\n              className={\"assessment-name-input\"}\r\n              placeholder='Enter assessment name '\r\n              value={this.state.assessmentName}\r\n              onChange={(e) => {\r\n                this.setState({ assessmentName: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!this.state.assessmentName ? this.state.assessmentNameError : null}\r\n          </div>\r\n          <div className='assessment-name'>Industry Types</div>\r\n          <div className='industry-type-select-div'>\r\n            <SelectInput\r\n              className='industry-type-select'\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  industryType: { value: e.value, label: e.label },\r\n                });\r\n              }}\r\n              options={this.state.optionsdata}\r\n              value={this.state.industryType}\r\n              placeholder={\r\n                this.state.industryType.label\r\n                  ? this.state.industryType.label\r\n                  : \"Select industry type\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!this.state.industryType ? this.state.industryTypeError : null}\r\n          </div>\r\n\r\n          <div className='assessment-name'>Job Type</div>\r\n          <div className='industry-type-select-div'>\r\n            <SelectInput\r\n              className='industry-type-select'\r\n              onChange={(e) => {\r\n                this.setState({ jobType: { value: e.value, label: e.label } });\r\n              }}\r\n              options={this.state.optionsdata2}\r\n              value={this.state.jobType}\r\n              placeholder={\r\n                this.state.jobType.label\r\n                  ? this.state.jobType.label\r\n                  : \"Select jd\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!this.state.jobType ? this.state.jobTypeError : null}\r\n          </div>\r\n\r\n          <div className='assessment-name'>Experience Level</div>\r\n          <div className='industry-type-select-div'>\r\n            <SelectInput\r\n              className='industry-type-select'\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  experienceLevel: { value: e.value, label: e.label },\r\n                });\r\n              }}\r\n              options={this.state.optionsdata3}\r\n              value={this.state.experienceLevel}\r\n              placeholder={\r\n                this.state.experienceLevel.label\r\n                  ? this.state.experienceLevel.label\r\n                  : \"Select experience level\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!this.state.experienceLevel\r\n              ? this.state.experienceLevelError\r\n              : null}\r\n          </div>\r\n\r\n          <div className='industry-type-select-div'>\r\n            <QuestionType\r\n              questionTypes={this.state.questionTypes}\r\n              handleChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className='error'>{this.state.questionTypeError}</div>\r\n\r\n          <div className='save-continue-button-div'>\r\n            <Button\r\n              className='save-continue-button'\r\n              onClick={() => {\r\n                this.saveContinueHandler();\r\n              }}\r\n            >\r\n              Save & Continue\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    AssessmentReducer: state.AssessmentReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AssessmentAction: bindActionCreators(AssessmentAction, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(AssessmentStep1));\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import React from \"react\";\r\nimport \"./selectInput.scss\";\r\nimport Select, { components } from \"react-select\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nexport default function SelectInput(props) {\r\n  const CaretDownIcon = () => {\r\n    return (\r\n      <ArrowDropDownIcon\r\n        style={{ color: !props.iconWhite ? \"#333\" : \"#fff\" }}\r\n      />\r\n    );\r\n  };\r\n  const DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <CaretDownIcon />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  const customStyles = {\r\n    control: (base) => ({\r\n      ...base,\r\n      height: props.height ? props.height : 34,\r\n      minHeight: props.minHeight ? props.minHeight : 34,\r\n      maxHeight: props.maxHeight ? props.maxHeight : 34,\r\n      padding: props.padding ? props.padding : 0,\r\n      borderRadius: 4,\r\n      fontSize: props.fontSize ? props.fontSize : 11,\r\n      color: props.color ? props.color : \"#000\",\r\n      background: props.background ? props.background : \"#fff\",\r\n      fontWeight: props.fontWeight ? props.fontWeight : \"400\",\r\n    }),\r\n    singleValue: (provided, state) => {\r\n      const opacity = state.isDisabled ? 0.5 : 1;\r\n      const transition = \"opacity 300ms\";\r\n\r\n      return { ...provided, opacity, transition };\r\n    },\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      color: props.color ? props.color : \"#000\",\r\n      fontSize: props.fontSize ? props.fontSize : 11,\r\n      fontWeight: props.fontWeight ? props.fontWeight : \"400\",\r\n    }),\r\n    option: (styles, { data }) => {\r\n      const color = data.color ? data.color : \"#000\";\r\n      return {\r\n        ...styles,\r\n        color: color,\r\n      };\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={{ DropdownIndicator }}\r\n      classNamePrefix=\"select-state\"\r\n      className={props.className}\r\n      onChange={props.onChange}\r\n      options={props.options}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      isDisabled={props.disabled}\r\n      styles={customStyles}\r\n      menuPortalTarget={document.body}\r\n      menuPlacement={props.placement ? props.placement : \"auto\"}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InputLabel, FormControl, TextField } from \"@material-ui/core\";\r\nimport \"./CustomizedInputs.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    fontFamily: \"Poppins\",\r\n  },\r\n  input: {\r\n    \"&::placeholder\": {\r\n      textOverflow: \"ellipsis !important\",\r\n      color: \"#363636\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CustomizedInputs(props) {\r\n  const classes = useStyles();\r\n\r\n  let icon = null;\r\n  if (props.inputIcon) {\r\n    icon = (\r\n      <img\r\n        src={props.inputIcon}\r\n        height={props.imageHeight}\r\n        width={props.imageWidth}\r\n        style={{ paddingLeft: \"10px\", marginRight: \"-1px\" }}\r\n        role=\"button\"\r\n        onClick={props.imageOnClick}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n      <div style={{width:'100%'}}>\r\n       {\r\n         props.labelName ?  <InputLabel\r\n         htmlFor=\"bootstrap-input\"\r\n         className={\r\n           props.noMargin\r\n             ? \"text-black ml-2 mb-2\"\r\n             : \"text-black ml-2 mb-2 \"\r\n         }\r\n         style={{ fontFamily: \"Poppins\", color: \"#162855\" }}\r\n       >\r\n         {props.required ? `${props.labelName} *` : props.labelName}\r\n       </InputLabel> : null\r\n       }\r\n        <FormControl\r\n          className={classes.margin}\r\n          style={props.deviceAddInput ? { width: \"88%\" } : { width: \"100%\" }}\r\n          error={props.error}\r\n        >\r\n          <TextField\r\n          className=\"new-input\"\r\n            id=\"bootstrap-input\"\r\n            name={props.name ? props.name : \"\"}\r\n            placeholder={props.placeholder}\r\n            onChange={props.onChange}\r\n            type={props.type ? props.type : \"text\"}\r\n            style={{ font: \"normal normal normal 14px/21px Poppins\" }}\r\n            className={`${props.className} input-fields`}\r\n            size={props.size ? props.size : \"small\"}\r\n            error={props.error}\r\n            required={props.required}\r\n            inputProps={{\r\n              maxLength: props.inputProps ? props.inputProps : 200,\r\n        \r\n              \r\n            }}\r\n            helperText={props.helperText}\r\n            InputProps={{\r\n              className: classes.textInput,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: icon,\r\n            }}\r\n            value={props.value}\r\n            variant=\"outlined\"\r\n            height='34px'\r\n            disabled={props.disabled}\r\n            onBlur={props.onKeyDown}\r\n            onKeyPress={(e) => {\r\n              e.key === \"Enter\" && e.preventDefault();\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\nexport default CustomizedInputs;\r\n","import React, { useState, useEffect } from \"react\";\n\nconst Checkbox = (props) => {\n  const {\n    borderColor,\n    borderRadius,\n    borderStyle,\n    borderWidth,\n    checkbox,\n    className,\n    checked,\n    disabled,\n    containerClassName,\n    containerStyle,\n    label,\n    labelClassName,\n    labelStyle,\n    name,\n    onChange,\n    reference,\n    right,\n    size,\n    style,\n    value,\n    icon,\n  } = props;\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    setCheck(!check);\n    onChange && onChange(!check);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <label\n      style={{\n        ...containerStyle,\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n      className={containerClassName}\n      onClick={(e) => (!disabled ? toggle(e) : null)}\n    >\n      {(right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n      {checkbox || (\n        <span>\n          <div\n            style={{\n              ...style,\n              height: size,\n              width: size,\n              borderWidth: borderWidth,\n              borderColor: borderColor,\n              borderStyle: borderStyle,\n              borderRadius: borderRadius,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: disabled ? \"not-allowed\" : \"\",\n            }}\n            className={className}\n          >\n            {(check && icon) || null}\n            <input\n              ref={reference}\n              type=\"checkbox\"\n              name={name}\n              checked={check}\n              value={value}\n              onChange={toggle}\n              disabled={disabled}\n              hidden\n            />\n          </div>\n        </span>\n      )}\n      {(!right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n    </label>\n  );\n};\nCheckbox.defaultProps = {\n  borderColor: \"#D7C629\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  disabled: false,\n  right: false,\n  name: \"\",\n  size: 18,\n  style: {},\n  className: \"\",\n  labelStyle: { marginLeft: 5 },\n  labelClassName: \"\",\n  containerStyle: {},\n  containerClassName: \"\",\n  value: \"\",\n  onChange: null,\n  icon: (\n    <div style={{ backgroundColor: \"#D7C629\", borderRadius: 5, padding: 5 }} />\n  ),\n};\nexport default Checkbox;\n","import React from \"react\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Checkbox from \"react-custom-checkbox\";\r\n\r\nconst ControlledCheckbox = (props) => {\r\n  \r\n  return (\r\n    <>\r\n      <Checkbox\r\n        icon={<CheckIcon style={{color:\"#04724d\", backgroundColor:\"#fff\",height:'16px',width:'16px' }}/>}\r\n        name=\"my-input\"\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n        borderColor={props.borderColor}\r\n        borderRadius={props.borderRadius}\r\n        style={{ cursor: \"pointer\",backgroundColor:'#fff' }}\r\n        labelStyle={props.labelStyle ? props.labelStyle : { marginLeft: 15, userSelect: \"none\",fontSize:'14px',\r\n        fontWeight:'500' }}\r\n        label={props.label}\r\n        size={props.size}\r\n        disabled={props.disabled}\r\n       \r\n      />\r\n     \r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledCheckbox;\r\n","import React from \"react\";\r\nimport \"./questionType.scss\";\r\nimport ControlledCheckbox from \"../Atoms/Checkbox\";\r\n\r\nconst QuestionType = (props) => {\r\n  return (\r\n    <div className=\"main-questionType\">\r\n      <div className=\"select-questions\">Select Question Type</div>\r\n\r\n      {props.questionTypes.map((item) => {\r\n        return (\r\n          <div className=\"question-type\">\r\n            <ControlledCheckbox\r\n              checked={item.checked}\r\n              labelStyle={{\r\n                marginLeft: 15,\r\n                userSelect: \"none\",\r\n                fontSize: \"12px\",\r\n                fontWeight: \"500\",\r\n              }}\r\n              size={20}\r\n              borderRadius={2}\r\n              borderColor={\"#04724d\"}\r\n              label={item.label}\r\n              onChange={() => {\r\n                props.handleChange(item);\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionType;\r\n"],"sourceRoot":""}
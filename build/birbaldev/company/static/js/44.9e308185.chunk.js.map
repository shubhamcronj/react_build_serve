{"version":3,"sources":["containers/Assessment/CloneAssessment/CloneAssessment.js","components/Atoms/SelectInput/SelectInput.js","components/Atoms/CustomizedInputs/CustomizedInputs.js"],"names":["CloneAssessment","state","name","jdOptions","selectedJD","testOption","selectedTest","submit","saveContinueHandler","setState","payload","jdId","value","testId","console","log","props","AssessmentAction","cloneTest","this","getJobTypes","getAllTest","limit","page","prevProps","prev","AssessmentReducer","cur","jobTypes","data","length","isGetJobTypes","map","el","label","title","minExp","maxExp","id","allTest","results","isGetAllTest","status","history","push","pathname","className","placeholder","onChange","e","target","options","onClick","Component","connect","dispatch","bindActionCreators","withRouter","SelectInput","CaretDownIcon","style","color","iconWhite","customStyles","control","base","height","minHeight","maxHeight","padding","borderRadius","fontSize","background","fontWeight","singleValue","provided","opacity","isDisabled","transition","styles","option","components","DropdownIndicator","classNamePrefix","disabled","menuPortalTarget","document","body","menuPlacement","placement","useStyles","makeStyles","theme","root","display","flexWrap","fontFamily","input","textOverflow","CustomizedInputs","classes","icon","inputIcon","src","imageHeight","width","imageWidth","paddingLeft","marginRight","role","imageOnClick","labelName","htmlFor","noMargin","required","margin","deviceAddInput","error","type","font","size","inputProps","maxLength","helperText","InputProps","textInput","startAdornment","variant","onBlur","onKeyDown","onKeyPress","key","preventDefault"],"mappings":"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","file":"static/js/44.9e308185.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./CloneAssessment.scss\";\r\nimport CustomizedInputs from \"../../../components/Atoms/CustomizedInputs/CustomizedInputs\";\r\nimport Button from \"../../../components/Controls/Button/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as AssessmentAction from \"../../../store/Assessment/AssessmentAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ReactGA from \"react-ga\";\r\nimport SelectInput from \"../../../components/Atoms/SelectInput/SelectInput\";\r\n\r\nclass CloneAssessment extends Component {\r\n  state = {\r\n    name: \"\",\r\n    jdOptions: [],\r\n    selectedJD: null,\r\n    testOption: [],\r\n    selectedTest: null,\r\n    submit: false,\r\n  };\r\n  componentDidMount() {\r\n    this.props.AssessmentAction.getJobTypes();\r\n    this.props.AssessmentAction.getAllTest({ limit: 0, page: 1 });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prev = prevProps & prevProps.AssessmentReducer;\r\n    const cur = this.props && this.props.AssessmentReducer;\r\n\r\n    if (\r\n      prev.jobTypes !== cur.jobTypes &&\r\n      cur.jobTypes &&\r\n      cur.jobTypes.data &&\r\n      cur.jobTypes.data.length > 0 &&\r\n      prev.isGetJobTypes !== cur.isGetJobTypes &&\r\n      cur.isGetJobTypes\r\n    ) {\r\n      cur.isGetJobTypes = false;\r\n      const data = cur.jobTypes.data.map((el) => ({\r\n        label: `${el.title} - ${el.minExp} year to ${el.maxExp} year`,\r\n        value: el.id,\r\n      }));\r\n\r\n      this.setState({ jdOptions: data });\r\n    }\r\n    if (\r\n      prev.allTest !== cur.allTest &&\r\n      cur.allTest &&\r\n      cur.allTest.data &&\r\n      cur.allTest.data.results &&\r\n      cur.allTest.data.results.length > 0 &&\r\n      prev.isGetAllTest !== cur.isGetAllTest &&\r\n      cur.isGetAllTest\r\n    ) {\r\n      cur.isGetAllTest = false;\r\n      const data = cur.allTest.data.results.map((el) => ({\r\n        label: el.name,\r\n        value: el.id,\r\n      }));\r\n\r\n      this.setState({ testOption: data });\r\n    }\r\n    if (\r\n      prev.cloneTest !== cur.cloneTest &&\r\n      cur.cloneTest &&\r\n      cur.cloneTest.status === 201 &&\r\n      cur.cloneTest.data\r\n    ) {\r\n      console.log(cur.cloneTest);\r\n      this.props.history.push({\r\n        ///assessment/step2/create-assignment/625ec097cb919b48c895c6c2\r\n        pathname: `/assessment/step2/create-assignment/${\r\n          cur.cloneTest.data && cur.cloneTest.data.id\r\n        }`,\r\n        state: {\r\n          testId: cur.cloneTest.data && cur.cloneTest.data.id,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  saveContinueHandler = () => {\r\n    this.setState({ submit: true });\r\n    const { name, selectedJD, selectedTest } = this.state;\r\n    if (name && selectedJD && selectedTest) {\r\n      const payload = {\r\n        name: name,\r\n        jdId: selectedJD && selectedJD.value,\r\n        testId: selectedTest && selectedTest.value,\r\n      };\r\n      console.log(payload);\r\n      this.props.AssessmentAction.cloneTest(payload);\r\n    }\r\n  };\r\n  render() {\r\n    const { submit, name, jdOptions, selectedJD, testOption, selectedTest } =\r\n      this.state;\r\n    return (\r\n      <div className='CloneAssessmentMain'>\r\n        <div className='innerDiv'>\r\n          <div className='assessment-name'>Assessment Name</div>\r\n          <div className='assessment-name-input-div'>\r\n            <CustomizedInputs\r\n              className={\"assessment-name-input\"}\r\n              placeholder='Enter assessment name '\r\n              value={name}\r\n              onChange={(e) => {\r\n                this.setState({ name: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!name && submit ? \"Assessment name is required\" : null}\r\n          </div>\r\n          <div className='assessment-name'>Job Type</div>\r\n          <div className='industry-type-select-div'>\r\n            <SelectInput\r\n              className='industry-type-select'\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  selectedJD: { value: e.value, label: e.label },\r\n                });\r\n              }}\r\n              options={jdOptions}\r\n              value={selectedJD}\r\n              placeholder={\r\n                selectedJD && selectedJD.label ? selectedJD.label : \"Select jd\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!selectedJD && submit ? \"Select the Jd\" : null}\r\n          </div>\r\n          <div className='assessment-name'>Assessment</div>\r\n          <div className='industry-type-select-div'>\r\n            <SelectInput\r\n              className='industry-type-select'\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  selectedTest: { value: e.value, label: e.label },\r\n                });\r\n              }}\r\n              options={testOption}\r\n              value={selectedTest}\r\n              placeholder={\r\n                selectedTest && selectedTest.label\r\n                  ? selectedTest.label\r\n                  : \"Select Assessment to clone\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className='error'>\r\n            {!selectedTest && submit\r\n              ? \"Select the assessment to clone with\"\r\n              : null}\r\n          </div>\r\n          <div className='save-continue-button-div'>\r\n            <Button\r\n              className='save-continue-button'\r\n              onClick={this.saveContinueHandler}\r\n            >\r\n              Save & Continue\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    AssessmentReducer: state.AssessmentReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AssessmentAction: bindActionCreators(AssessmentAction, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CloneAssessment));\r\n","import React from \"react\";\r\nimport \"./selectInput.scss\";\r\nimport Select, { components } from \"react-select\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nexport default function SelectInput(props) {\r\n  const CaretDownIcon = () => {\r\n    return (\r\n      <ArrowDropDownIcon\r\n        style={{ color: !props.iconWhite ? \"#333\" : \"#fff\" }}\r\n      />\r\n    );\r\n  };\r\n  const DropdownIndicator = (props) => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <CaretDownIcon />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  const customStyles = {\r\n    control: (base) => ({\r\n      ...base,\r\n      height: props.height ? props.height : 34,\r\n      minHeight: props.minHeight ? props.minHeight : 34,\r\n      maxHeight: props.maxHeight ? props.maxHeight : 34,\r\n      padding: props.padding ? props.padding : 0,\r\n      borderRadius: 4,\r\n      fontSize: props.fontSize ? props.fontSize : 11,\r\n      color: props.color ? props.color : \"#000\",\r\n      background: props.background ? props.background : \"#fff\",\r\n      fontWeight: props.fontWeight ? props.fontWeight : \"400\",\r\n \r\n    }),\r\n    singleValue: (provided, state) => {\r\n      const opacity = state.isDisabled ? 0.5 : 1;\r\n      const transition = \"opacity 300ms\";\r\n\r\n      return { ...provided, opacity, transition };\r\n    },\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      color: props.color ? props.color : \"#000\",\r\n      fontSize: props.fontSize ? props.fontSize : 11,\r\n      fontWeight: props.fontWeight ? props.fontWeight : \"400\",\r\n    }),\r\n    option: (styles, { data }) => {\r\n      const color = data.color ? data.color : \"#000\";\r\n      return {\r\n        ...styles,\r\n        color: color,\r\n      };\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      components={{ DropdownIndicator }}\r\n      classNamePrefix=\"select-state\"\r\n      className={props.className}\r\n      onChange={props.onChange}\r\n      options={props.options}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      isDisabled={props.disabled}\r\n      styles={customStyles}\r\n      menuPortalTarget={document.body}\r\n      menuPlacement={props.placement ? props.placement : \"auto\"}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InputLabel, FormControl, TextField } from \"@material-ui/core\";\r\nimport \"./CustomizedInputs.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    fontFamily: \"Poppins\",\r\n  },\r\n  input: {\r\n    \"&::placeholder\": {\r\n      textOverflow: \"ellipsis !important\",\r\n      color: \"#363636\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CustomizedInputs(props) {\r\n  const classes = useStyles();\r\n\r\n  let icon = null;\r\n  if (props.inputIcon) {\r\n    icon = (\r\n      <img\r\n        src={props.inputIcon}\r\n        height={props.imageHeight}\r\n        width={props.imageWidth}\r\n        style={{ paddingLeft: \"10px\", marginRight: \"-1px\" }}\r\n        role=\"button\"\r\n        onClick={props.imageOnClick}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n      <div style={{width:'100%'}}>\r\n       {\r\n         props.labelName ?  <InputLabel\r\n         htmlFor=\"bootstrap-input\"\r\n         className={\r\n           props.noMargin\r\n             ? \"text-black ml-2 mb-2\"\r\n             : \"text-black ml-2 mb-2 \"\r\n         }\r\n         style={{ fontFamily: \"Poppins\", color: \"#162855\" }}\r\n       >\r\n         {props.required ? `${props.labelName} *` : props.labelName}\r\n       </InputLabel> : null\r\n       }\r\n        <FormControl\r\n          className={classes.margin}\r\n          style={props.deviceAddInput ? { width: \"88%\" } : { width: \"100%\" }}\r\n          error={props.error}\r\n        >\r\n          <TextField\r\n          // className=\"new-input\"\r\n            id=\"bootstrap-input\"\r\n            name={props.name ? props.name : \"\"}\r\n            placeholder={props.placeholder}\r\n            onChange={props.onChange}\r\n            type={props.type ? props.type : \"text\"}\r\n            style={{ font: \"normal normal normal 14px/21px Poppins\",height:'34px' }}\r\n            className={`${props.className} input-fields`}\r\n            size={props.size ? props.size : \"small\"}\r\n            error={props.error}\r\n            required={props.required}\r\n            inputProps={{\r\n              maxLength: props.inputProps ? props.inputProps : 200,\r\n        \r\n              \r\n            }}\r\n            helperText={props.helperText}\r\n            InputProps={{\r\n              className: classes.textInput,\r\n              startAdornment: icon,\r\n            }}\r\n            // InputProps={{\r\n             \r\n            // }}\r\n            value={props.value}\r\n            variant=\"outlined\"\r\n            height='34px'\r\n            disabled={props.disabled}\r\n            onBlur={props.onKeyDown}\r\n            onKeyPress={(e) => {\r\n              e.key === \"Enter\" && e.preventDefault();\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\nexport default CustomizedInputs;\r\n"],"sourceRoot":""}